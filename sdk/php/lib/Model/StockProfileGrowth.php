<?php
/**
 * StockProfileGrowth
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Gurufocus Data Package API
 *
 * API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * StockProfileGrowth Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class StockProfileGrowth implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'stock_profile_growth';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'roc_joel_growth' => 'float',
        'asset_growth_10y' => 'float',
        'asset_growth_1y' => 'float',
        'asset_growth_3y' => 'float',
        'asset_growth_3y_high' => 'float',
        'asset_growth_3y_low' => 'float',
        'asset_growth_3y_med' => 'float',
        'asset_growth_5y' => 'float',
        'book_growth_10y' => 'float',
        'book_growth_1y' => 'float',
        'book_growth_3y' => 'float',
        'book_growth_3y_high' => 'float',
        'book_growth_3y_low' => 'float',
        'book_growth_3y_med' => 'float',
        'book_growth_5y' => 'float',
        'cashflow_growth_10y' => 'float',
        'cashflow_growth_1y' => 'float',
        'cashflow_growth_3y' => 'float',
        'cashflow_growth_3y_high' => 'float',
        'cashflow_growth_3y_low' => 'float',
        'cashflow_growth_3y_med' => 'float',
        'cashflow_growth_5y' => 'float',
        'cyclically_adjusted_book_growth_10y' => 'float',
        'cyclically_adjusted_book_growth_1y' => 'float',
        'cyclically_adjusted_book_growth_3y' => 'float',
        'cyclically_adjusted_book_growth_3y_high' => 'float',
        'cyclically_adjusted_book_growth_3y_low' => 'float',
        'cyclically_adjusted_book_growth_3y_med' => 'float',
        'cyclically_adjusted_book_growth_5y' => 'float',
        'cyclically_adjusted_fcf_growth_10y' => 'float',
        'cyclically_adjusted_fcf_growth_1y' => 'float',
        'cyclically_adjusted_fcf_growth_3y' => 'float',
        'cyclically_adjusted_fcf_growth_3y_high' => 'float',
        'cyclically_adjusted_fcf_growth_3y_low' => 'float',
        'cyclically_adjusted_fcf_growth_3y_med' => 'float',
        'cyclically_adjusted_fcf_growth_5y' => 'float',
        'cyclically_adjusted_rvn_growth_10y' => 'float',
        'cyclically_adjusted_rvn_growth_1y' => 'float',
        'cyclically_adjusted_rvn_growth_3y' => 'float',
        'cyclically_adjusted_rvn_growth_3y_high' => 'float',
        'cyclically_adjusted_rvn_growth_3y_low' => 'float',
        'cyclically_adjusted_rvn_growth_3y_med' => 'float',
        'cyclically_adjusted_rvn_growth_5y' => 'float',
        'debt2rev_growth_10y' => 'float',
        'debt2rev_growth_1y' => 'float',
        'debt2rev_growth_5y' => 'float',
        'dividend_growth_10y' => 'float',
        'dividend_growth_1y' => 'float',
        'dividend_growth_3y' => 'float',
        'dividend_growth_3y_high' => 'float',
        'dividend_growth_3y_low' => 'float',
        'dividend_growth_3y_med' => 'float',
        'dividend_growth_5y' => 'float',
        'e10_growth_10y' => 'float',
        'e10_growth_1y' => 'float',
        'e10_growth_3y' => 'float',
        'e10_growth_3y_high' => 'float',
        'e10_growth_3y_low' => 'float',
        'e10_growth_3y_med' => 'float',
        'e10_growth_5y' => 'float',
        'earning_growth_10y' => 'float',
        'earning_growth_1y' => 'float',
        'earning_growth_3y' => 'float',
        'earning_growth_3y_high' => 'float',
        'earning_growth_3y_low' => 'float',
        'earning_growth_3y_med' => 'float',
        'earning_growth_5y' => 'float',
        'earning_growth_5y_est' => 'float',
        'ebit_growth_10y' => 'float',
        'ebit_growth_1y' => 'float',
        'ebit_growth_3y' => 'float',
        'ebit_growth_3y_high' => 'float',
        'ebit_growth_3y_low' => 'float',
        'ebit_growth_3y_med' => 'float',
        'ebit_growth_5y' => 'float',
        'ebit_q1_growth' => 'float',
        'ebit_q2_growth' => 'float',
        'ebit_q3_growth' => 'float',
        'ebit_q4_growth' => 'float',
        'ebitda_growth_10y' => 'float',
        'ebitda_growth_1y' => 'float',
        'ebitda_growth_3y' => 'float',
        'ebitda_growth_3y_high' => 'float',
        'ebitda_growth_3y_low' => 'float',
        'ebitda_growth_3y_med' => 'float',
        'ebitda_growth_5y' => 'float',
        'fscore_chg_1y' => 'float',
        'grossmargin_growth' => 'float',
        'ltd_chg_10y' => 'float',
        'ltd_chg_1y' => 'float',
        'ltd_chg_3y' => 'float',
        'ltd_chg_5y' => 'float',
        'ltd_growth_10y' => 'float',
        'ltd_growth_1y' => 'float',
        'ltd_growth_3y' => 'float',
        'ltd_growth_5y' => 'float',
        'mktcap_chg_10y' => 'float',
        'mktcap_chg_15y' => 'float',
        'mktcap_chg_1y' => 'float',
        'mktcap_chg_20y' => 'float',
        'mktcap_chg_25y' => 'float',
        'mktcap_chg_3y' => 'float',
        'mktcap_chg_5y' => 'float',
        'operating_cashflow_growth_10y' => 'float',
        'operating_cashflow_growth_1y' => 'float',
        'operating_cashflow_growth_3y' => 'float',
        'operating_cashflow_growth_3y_high' => 'float',
        'operating_cashflow_growth_3y_low' => 'float',
        'operating_cashflow_growth_3y_med' => 'float',
        'operating_cashflow_growth_5y' => 'float',
        'operatingmargin_growth' => 'float',
        'owner_earnings_growth_10y' => 'float',
        'owner_earnings_growth_1y' => 'float',
        'owner_earnings_growth_3y' => 'float',
        'owner_earnings_growth_3y_high' => 'float',
        'owner_earnings_growth_3y_low' => 'float',
        'owner_earnings_growth_3y_med' => 'float',
        'owner_earnings_growth_5y' => 'float',
        'rdcf_growth' => 'float',
        'rvn_growth_10y' => 'float',
        'rvn_growth_1y' => 'float',
        'rvn_growth_3y' => 'float',
        'rvn_growth_3y_high' => 'float',
        'rvn_growth_3y_low' => 'float',
        'rvn_growth_3y_med' => 'float',
        'rvn_growth_5y' => 'float',
        'rvn_q1_growth' => 'float',
        'rvn_q2_growth' => 'float',
        'rvn_q3_growth' => 'float',
        'rvn_q4_growth' => 'float',
        'total_debt_growth_10y' => 'float',
        'total_debt_growth_1y' => 'float',
        'total_debt_growth_3y' => 'float',
        'total_debt_growth_5y' => 'float',
        'total_ebitda_growth_10y' => 'float',
        'total_ebitda_growth_1y' => 'float',
        'total_ebitda_growth_3y' => 'float',
        'total_ebitda_growth_3y_high' => 'float',
        'total_ebitda_growth_3y_low' => 'float',
        'total_ebitda_growth_3y_med' => 'float',
        'total_ebitda_growth_5y' => 'float',
        'total_netincome_growth_10y' => 'float',
        'total_netincome_growth_1y' => 'float',
        'total_netincome_growth_3y' => 'float',
        'total_netincome_growth_3y_high' => 'float',
        'total_netincome_growth_3y_low' => 'float',
        'total_netincome_growth_3y_med' => 'float',
        'total_netincome_growth_5y' => 'float',
        'total_rvn_growth_10y' => 'float',
        'total_rvn_growth_1y' => 'float',
        'total_rvn_growth_3y' => 'float',
        'total_rvn_growth_3y_high' => 'float',
        'total_rvn_growth_3y_low' => 'float',
        'total_rvn_growth_3y_med' => 'float',
        'total_rvn_growth_5y' => 'float',
        'total_rvn_growth_5y_est' => 'float'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'roc_joel_growth' => null,
        'asset_growth_10y' => null,
        'asset_growth_1y' => null,
        'asset_growth_3y' => null,
        'asset_growth_3y_high' => null,
        'asset_growth_3y_low' => null,
        'asset_growth_3y_med' => null,
        'asset_growth_5y' => null,
        'book_growth_10y' => null,
        'book_growth_1y' => null,
        'book_growth_3y' => null,
        'book_growth_3y_high' => null,
        'book_growth_3y_low' => null,
        'book_growth_3y_med' => null,
        'book_growth_5y' => null,
        'cashflow_growth_10y' => null,
        'cashflow_growth_1y' => null,
        'cashflow_growth_3y' => null,
        'cashflow_growth_3y_high' => null,
        'cashflow_growth_3y_low' => null,
        'cashflow_growth_3y_med' => null,
        'cashflow_growth_5y' => null,
        'cyclically_adjusted_book_growth_10y' => null,
        'cyclically_adjusted_book_growth_1y' => null,
        'cyclically_adjusted_book_growth_3y' => null,
        'cyclically_adjusted_book_growth_3y_high' => null,
        'cyclically_adjusted_book_growth_3y_low' => null,
        'cyclically_adjusted_book_growth_3y_med' => null,
        'cyclically_adjusted_book_growth_5y' => null,
        'cyclically_adjusted_fcf_growth_10y' => null,
        'cyclically_adjusted_fcf_growth_1y' => null,
        'cyclically_adjusted_fcf_growth_3y' => null,
        'cyclically_adjusted_fcf_growth_3y_high' => null,
        'cyclically_adjusted_fcf_growth_3y_low' => null,
        'cyclically_adjusted_fcf_growth_3y_med' => null,
        'cyclically_adjusted_fcf_growth_5y' => null,
        'cyclically_adjusted_rvn_growth_10y' => null,
        'cyclically_adjusted_rvn_growth_1y' => null,
        'cyclically_adjusted_rvn_growth_3y' => null,
        'cyclically_adjusted_rvn_growth_3y_high' => null,
        'cyclically_adjusted_rvn_growth_3y_low' => null,
        'cyclically_adjusted_rvn_growth_3y_med' => null,
        'cyclically_adjusted_rvn_growth_5y' => null,
        'debt2rev_growth_10y' => null,
        'debt2rev_growth_1y' => null,
        'debt2rev_growth_5y' => null,
        'dividend_growth_10y' => null,
        'dividend_growth_1y' => null,
        'dividend_growth_3y' => null,
        'dividend_growth_3y_high' => null,
        'dividend_growth_3y_low' => null,
        'dividend_growth_3y_med' => null,
        'dividend_growth_5y' => null,
        'e10_growth_10y' => null,
        'e10_growth_1y' => null,
        'e10_growth_3y' => null,
        'e10_growth_3y_high' => null,
        'e10_growth_3y_low' => null,
        'e10_growth_3y_med' => null,
        'e10_growth_5y' => null,
        'earning_growth_10y' => null,
        'earning_growth_1y' => null,
        'earning_growth_3y' => null,
        'earning_growth_3y_high' => null,
        'earning_growth_3y_low' => null,
        'earning_growth_3y_med' => null,
        'earning_growth_5y' => null,
        'earning_growth_5y_est' => null,
        'ebit_growth_10y' => null,
        'ebit_growth_1y' => null,
        'ebit_growth_3y' => null,
        'ebit_growth_3y_high' => null,
        'ebit_growth_3y_low' => null,
        'ebit_growth_3y_med' => null,
        'ebit_growth_5y' => null,
        'ebit_q1_growth' => null,
        'ebit_q2_growth' => null,
        'ebit_q3_growth' => null,
        'ebit_q4_growth' => null,
        'ebitda_growth_10y' => null,
        'ebitda_growth_1y' => null,
        'ebitda_growth_3y' => null,
        'ebitda_growth_3y_high' => null,
        'ebitda_growth_3y_low' => null,
        'ebitda_growth_3y_med' => null,
        'ebitda_growth_5y' => null,
        'fscore_chg_1y' => null,
        'grossmargin_growth' => null,
        'ltd_chg_10y' => null,
        'ltd_chg_1y' => null,
        'ltd_chg_3y' => null,
        'ltd_chg_5y' => null,
        'ltd_growth_10y' => null,
        'ltd_growth_1y' => null,
        'ltd_growth_3y' => null,
        'ltd_growth_5y' => null,
        'mktcap_chg_10y' => null,
        'mktcap_chg_15y' => null,
        'mktcap_chg_1y' => null,
        'mktcap_chg_20y' => null,
        'mktcap_chg_25y' => null,
        'mktcap_chg_3y' => null,
        'mktcap_chg_5y' => null,
        'operating_cashflow_growth_10y' => null,
        'operating_cashflow_growth_1y' => null,
        'operating_cashflow_growth_3y' => null,
        'operating_cashflow_growth_3y_high' => null,
        'operating_cashflow_growth_3y_low' => null,
        'operating_cashflow_growth_3y_med' => null,
        'operating_cashflow_growth_5y' => null,
        'operatingmargin_growth' => null,
        'owner_earnings_growth_10y' => null,
        'owner_earnings_growth_1y' => null,
        'owner_earnings_growth_3y' => null,
        'owner_earnings_growth_3y_high' => null,
        'owner_earnings_growth_3y_low' => null,
        'owner_earnings_growth_3y_med' => null,
        'owner_earnings_growth_5y' => null,
        'rdcf_growth' => null,
        'rvn_growth_10y' => null,
        'rvn_growth_1y' => null,
        'rvn_growth_3y' => null,
        'rvn_growth_3y_high' => null,
        'rvn_growth_3y_low' => null,
        'rvn_growth_3y_med' => null,
        'rvn_growth_5y' => null,
        'rvn_q1_growth' => null,
        'rvn_q2_growth' => null,
        'rvn_q3_growth' => null,
        'rvn_q4_growth' => null,
        'total_debt_growth_10y' => null,
        'total_debt_growth_1y' => null,
        'total_debt_growth_3y' => null,
        'total_debt_growth_5y' => null,
        'total_ebitda_growth_10y' => null,
        'total_ebitda_growth_1y' => null,
        'total_ebitda_growth_3y' => null,
        'total_ebitda_growth_3y_high' => null,
        'total_ebitda_growth_3y_low' => null,
        'total_ebitda_growth_3y_med' => null,
        'total_ebitda_growth_5y' => null,
        'total_netincome_growth_10y' => null,
        'total_netincome_growth_1y' => null,
        'total_netincome_growth_3y' => null,
        'total_netincome_growth_3y_high' => null,
        'total_netincome_growth_3y_low' => null,
        'total_netincome_growth_3y_med' => null,
        'total_netincome_growth_5y' => null,
        'total_rvn_growth_10y' => null,
        'total_rvn_growth_1y' => null,
        'total_rvn_growth_3y' => null,
        'total_rvn_growth_3y_high' => null,
        'total_rvn_growth_3y_low' => null,
        'total_rvn_growth_3y_med' => null,
        'total_rvn_growth_5y' => null,
        'total_rvn_growth_5y_est' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'roc_joel_growth' => false,
        'asset_growth_10y' => false,
        'asset_growth_1y' => false,
        'asset_growth_3y' => false,
        'asset_growth_3y_high' => false,
        'asset_growth_3y_low' => false,
        'asset_growth_3y_med' => false,
        'asset_growth_5y' => false,
        'book_growth_10y' => false,
        'book_growth_1y' => false,
        'book_growth_3y' => false,
        'book_growth_3y_high' => false,
        'book_growth_3y_low' => false,
        'book_growth_3y_med' => false,
        'book_growth_5y' => false,
        'cashflow_growth_10y' => false,
        'cashflow_growth_1y' => false,
        'cashflow_growth_3y' => false,
        'cashflow_growth_3y_high' => false,
        'cashflow_growth_3y_low' => false,
        'cashflow_growth_3y_med' => false,
        'cashflow_growth_5y' => false,
        'cyclically_adjusted_book_growth_10y' => false,
        'cyclically_adjusted_book_growth_1y' => false,
        'cyclically_adjusted_book_growth_3y' => false,
        'cyclically_adjusted_book_growth_3y_high' => false,
        'cyclically_adjusted_book_growth_3y_low' => false,
        'cyclically_adjusted_book_growth_3y_med' => false,
        'cyclically_adjusted_book_growth_5y' => false,
        'cyclically_adjusted_fcf_growth_10y' => false,
        'cyclically_adjusted_fcf_growth_1y' => false,
        'cyclically_adjusted_fcf_growth_3y' => false,
        'cyclically_adjusted_fcf_growth_3y_high' => false,
        'cyclically_adjusted_fcf_growth_3y_low' => false,
        'cyclically_adjusted_fcf_growth_3y_med' => false,
        'cyclically_adjusted_fcf_growth_5y' => false,
        'cyclically_adjusted_rvn_growth_10y' => false,
        'cyclically_adjusted_rvn_growth_1y' => false,
        'cyclically_adjusted_rvn_growth_3y' => false,
        'cyclically_adjusted_rvn_growth_3y_high' => false,
        'cyclically_adjusted_rvn_growth_3y_low' => false,
        'cyclically_adjusted_rvn_growth_3y_med' => false,
        'cyclically_adjusted_rvn_growth_5y' => false,
        'debt2rev_growth_10y' => false,
        'debt2rev_growth_1y' => false,
        'debt2rev_growth_5y' => false,
        'dividend_growth_10y' => false,
        'dividend_growth_1y' => false,
        'dividend_growth_3y' => false,
        'dividend_growth_3y_high' => false,
        'dividend_growth_3y_low' => false,
        'dividend_growth_3y_med' => false,
        'dividend_growth_5y' => false,
        'e10_growth_10y' => false,
        'e10_growth_1y' => false,
        'e10_growth_3y' => false,
        'e10_growth_3y_high' => false,
        'e10_growth_3y_low' => false,
        'e10_growth_3y_med' => false,
        'e10_growth_5y' => false,
        'earning_growth_10y' => false,
        'earning_growth_1y' => false,
        'earning_growth_3y' => false,
        'earning_growth_3y_high' => false,
        'earning_growth_3y_low' => false,
        'earning_growth_3y_med' => false,
        'earning_growth_5y' => false,
        'earning_growth_5y_est' => false,
        'ebit_growth_10y' => false,
        'ebit_growth_1y' => false,
        'ebit_growth_3y' => false,
        'ebit_growth_3y_high' => false,
        'ebit_growth_3y_low' => false,
        'ebit_growth_3y_med' => false,
        'ebit_growth_5y' => false,
        'ebit_q1_growth' => false,
        'ebit_q2_growth' => false,
        'ebit_q3_growth' => false,
        'ebit_q4_growth' => false,
        'ebitda_growth_10y' => false,
        'ebitda_growth_1y' => false,
        'ebitda_growth_3y' => false,
        'ebitda_growth_3y_high' => false,
        'ebitda_growth_3y_low' => false,
        'ebitda_growth_3y_med' => false,
        'ebitda_growth_5y' => false,
        'fscore_chg_1y' => false,
        'grossmargin_growth' => false,
        'ltd_chg_10y' => false,
        'ltd_chg_1y' => false,
        'ltd_chg_3y' => false,
        'ltd_chg_5y' => false,
        'ltd_growth_10y' => false,
        'ltd_growth_1y' => false,
        'ltd_growth_3y' => false,
        'ltd_growth_5y' => false,
        'mktcap_chg_10y' => false,
        'mktcap_chg_15y' => false,
        'mktcap_chg_1y' => false,
        'mktcap_chg_20y' => false,
        'mktcap_chg_25y' => false,
        'mktcap_chg_3y' => false,
        'mktcap_chg_5y' => false,
        'operating_cashflow_growth_10y' => false,
        'operating_cashflow_growth_1y' => false,
        'operating_cashflow_growth_3y' => false,
        'operating_cashflow_growth_3y_high' => false,
        'operating_cashflow_growth_3y_low' => false,
        'operating_cashflow_growth_3y_med' => false,
        'operating_cashflow_growth_5y' => false,
        'operatingmargin_growth' => false,
        'owner_earnings_growth_10y' => false,
        'owner_earnings_growth_1y' => false,
        'owner_earnings_growth_3y' => false,
        'owner_earnings_growth_3y_high' => false,
        'owner_earnings_growth_3y_low' => false,
        'owner_earnings_growth_3y_med' => false,
        'owner_earnings_growth_5y' => false,
        'rdcf_growth' => false,
        'rvn_growth_10y' => false,
        'rvn_growth_1y' => false,
        'rvn_growth_3y' => false,
        'rvn_growth_3y_high' => false,
        'rvn_growth_3y_low' => false,
        'rvn_growth_3y_med' => false,
        'rvn_growth_5y' => false,
        'rvn_q1_growth' => false,
        'rvn_q2_growth' => false,
        'rvn_q3_growth' => false,
        'rvn_q4_growth' => false,
        'total_debt_growth_10y' => false,
        'total_debt_growth_1y' => false,
        'total_debt_growth_3y' => false,
        'total_debt_growth_5y' => false,
        'total_ebitda_growth_10y' => false,
        'total_ebitda_growth_1y' => false,
        'total_ebitda_growth_3y' => false,
        'total_ebitda_growth_3y_high' => false,
        'total_ebitda_growth_3y_low' => false,
        'total_ebitda_growth_3y_med' => false,
        'total_ebitda_growth_5y' => false,
        'total_netincome_growth_10y' => false,
        'total_netincome_growth_1y' => false,
        'total_netincome_growth_3y' => false,
        'total_netincome_growth_3y_high' => false,
        'total_netincome_growth_3y_low' => false,
        'total_netincome_growth_3y_med' => false,
        'total_netincome_growth_5y' => false,
        'total_rvn_growth_10y' => false,
        'total_rvn_growth_1y' => false,
        'total_rvn_growth_3y' => false,
        'total_rvn_growth_3y_high' => false,
        'total_rvn_growth_3y_low' => false,
        'total_rvn_growth_3y_med' => false,
        'total_rvn_growth_5y' => false,
        'total_rvn_growth_5y_est' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'roc_joel_growth' => 'ROC_JOEL_growth',
        'asset_growth_10y' => 'asset_growth_10y',
        'asset_growth_1y' => 'asset_growth_1y',
        'asset_growth_3y' => 'asset_growth_3y',
        'asset_growth_3y_high' => 'asset_growth_3y_high',
        'asset_growth_3y_low' => 'asset_growth_3y_low',
        'asset_growth_3y_med' => 'asset_growth_3y_med',
        'asset_growth_5y' => 'asset_growth_5y',
        'book_growth_10y' => 'book_growth_10y',
        'book_growth_1y' => 'book_growth_1y',
        'book_growth_3y' => 'book_growth_3y',
        'book_growth_3y_high' => 'book_growth_3y_high',
        'book_growth_3y_low' => 'book_growth_3y_low',
        'book_growth_3y_med' => 'book_growth_3y_med',
        'book_growth_5y' => 'book_growth_5y',
        'cashflow_growth_10y' => 'cashflow_growth_10y',
        'cashflow_growth_1y' => 'cashflow_growth_1y',
        'cashflow_growth_3y' => 'cashflow_growth_3y',
        'cashflow_growth_3y_high' => 'cashflow_growth_3y_high',
        'cashflow_growth_3y_low' => 'cashflow_growth_3y_low',
        'cashflow_growth_3y_med' => 'cashflow_growth_3y_med',
        'cashflow_growth_5y' => 'cashflow_growth_5y',
        'cyclically_adjusted_book_growth_10y' => 'cyclically_adjusted_book_growth_10y',
        'cyclically_adjusted_book_growth_1y' => 'cyclically_adjusted_book_growth_1y',
        'cyclically_adjusted_book_growth_3y' => 'cyclically_adjusted_book_growth_3y',
        'cyclically_adjusted_book_growth_3y_high' => 'cyclically_adjusted_book_growth_3y_high',
        'cyclically_adjusted_book_growth_3y_low' => 'cyclically_adjusted_book_growth_3y_low',
        'cyclically_adjusted_book_growth_3y_med' => 'cyclically_adjusted_book_growth_3y_med',
        'cyclically_adjusted_book_growth_5y' => 'cyclically_adjusted_book_growth_5y',
        'cyclically_adjusted_fcf_growth_10y' => 'cyclically_adjusted_fcf_growth_10y',
        'cyclically_adjusted_fcf_growth_1y' => 'cyclically_adjusted_fcf_growth_1y',
        'cyclically_adjusted_fcf_growth_3y' => 'cyclically_adjusted_fcf_growth_3y',
        'cyclically_adjusted_fcf_growth_3y_high' => 'cyclically_adjusted_fcf_growth_3y_high',
        'cyclically_adjusted_fcf_growth_3y_low' => 'cyclically_adjusted_fcf_growth_3y_low',
        'cyclically_adjusted_fcf_growth_3y_med' => 'cyclically_adjusted_fcf_growth_3y_med',
        'cyclically_adjusted_fcf_growth_5y' => 'cyclically_adjusted_fcf_growth_5y',
        'cyclically_adjusted_rvn_growth_10y' => 'cyclically_adjusted_rvn_growth_10y',
        'cyclically_adjusted_rvn_growth_1y' => 'cyclically_adjusted_rvn_growth_1y',
        'cyclically_adjusted_rvn_growth_3y' => 'cyclically_adjusted_rvn_growth_3y',
        'cyclically_adjusted_rvn_growth_3y_high' => 'cyclically_adjusted_rvn_growth_3y_high',
        'cyclically_adjusted_rvn_growth_3y_low' => 'cyclically_adjusted_rvn_growth_3y_low',
        'cyclically_adjusted_rvn_growth_3y_med' => 'cyclically_adjusted_rvn_growth_3y_med',
        'cyclically_adjusted_rvn_growth_5y' => 'cyclically_adjusted_rvn_growth_5y',
        'debt2rev_growth_10y' => 'debt2rev_growth_10y',
        'debt2rev_growth_1y' => 'debt2rev_growth_1y',
        'debt2rev_growth_5y' => 'debt2rev_growth_5y',
        'dividend_growth_10y' => 'dividend_growth_10y',
        'dividend_growth_1y' => 'dividend_growth_1y',
        'dividend_growth_3y' => 'dividend_growth_3y',
        'dividend_growth_3y_high' => 'dividend_growth_3y_high',
        'dividend_growth_3y_low' => 'dividend_growth_3y_low',
        'dividend_growth_3y_med' => 'dividend_growth_3y_med',
        'dividend_growth_5y' => 'dividend_growth_5y',
        'e10_growth_10y' => 'e10_growth_10y',
        'e10_growth_1y' => 'e10_growth_1y',
        'e10_growth_3y' => 'e10_growth_3y',
        'e10_growth_3y_high' => 'e10_growth_3y_high',
        'e10_growth_3y_low' => 'e10_growth_3y_low',
        'e10_growth_3y_med' => 'e10_growth_3y_med',
        'e10_growth_5y' => 'e10_growth_5y',
        'earning_growth_10y' => 'earning_growth_10y',
        'earning_growth_1y' => 'earning_growth_1y',
        'earning_growth_3y' => 'earning_growth_3y',
        'earning_growth_3y_high' => 'earning_growth_3y_high',
        'earning_growth_3y_low' => 'earning_growth_3y_low',
        'earning_growth_3y_med' => 'earning_growth_3y_med',
        'earning_growth_5y' => 'earning_growth_5y',
        'earning_growth_5y_est' => 'earning_growth_5y_est',
        'ebit_growth_10y' => 'ebit_growth_10y',
        'ebit_growth_1y' => 'ebit_growth_1y',
        'ebit_growth_3y' => 'ebit_growth_3y',
        'ebit_growth_3y_high' => 'ebit_growth_3y_high',
        'ebit_growth_3y_low' => 'ebit_growth_3y_low',
        'ebit_growth_3y_med' => 'ebit_growth_3y_med',
        'ebit_growth_5y' => 'ebit_growth_5y',
        'ebit_q1_growth' => 'ebit_q1_growth',
        'ebit_q2_growth' => 'ebit_q2_growth',
        'ebit_q3_growth' => 'ebit_q3_growth',
        'ebit_q4_growth' => 'ebit_q4_growth',
        'ebitda_growth_10y' => 'ebitda_growth_10y',
        'ebitda_growth_1y' => 'ebitda_growth_1y',
        'ebitda_growth_3y' => 'ebitda_growth_3y',
        'ebitda_growth_3y_high' => 'ebitda_growth_3y_high',
        'ebitda_growth_3y_low' => 'ebitda_growth_3y_low',
        'ebitda_growth_3y_med' => 'ebitda_growth_3y_med',
        'ebitda_growth_5y' => 'ebitda_growth_5y',
        'fscore_chg_1y' => 'fscore_chg_1y',
        'grossmargin_growth' => 'grossmargin_growth',
        'ltd_chg_10y' => 'ltd_chg_10y',
        'ltd_chg_1y' => 'ltd_chg_1y',
        'ltd_chg_3y' => 'ltd_chg_3y',
        'ltd_chg_5y' => 'ltd_chg_5y',
        'ltd_growth_10y' => 'ltd_growth_10y',
        'ltd_growth_1y' => 'ltd_growth_1y',
        'ltd_growth_3y' => 'ltd_growth_3y',
        'ltd_growth_5y' => 'ltd_growth_5y',
        'mktcap_chg_10y' => 'mktcap_chg_10y',
        'mktcap_chg_15y' => 'mktcap_chg_15y',
        'mktcap_chg_1y' => 'mktcap_chg_1y',
        'mktcap_chg_20y' => 'mktcap_chg_20y',
        'mktcap_chg_25y' => 'mktcap_chg_25y',
        'mktcap_chg_3y' => 'mktcap_chg_3y',
        'mktcap_chg_5y' => 'mktcap_chg_5y',
        'operating_cashflow_growth_10y' => 'operating_cashflow_growth_10y',
        'operating_cashflow_growth_1y' => 'operating_cashflow_growth_1y',
        'operating_cashflow_growth_3y' => 'operating_cashflow_growth_3y',
        'operating_cashflow_growth_3y_high' => 'operating_cashflow_growth_3y_high',
        'operating_cashflow_growth_3y_low' => 'operating_cashflow_growth_3y_low',
        'operating_cashflow_growth_3y_med' => 'operating_cashflow_growth_3y_med',
        'operating_cashflow_growth_5y' => 'operating_cashflow_growth_5y',
        'operatingmargin_growth' => 'operatingmargin_growth',
        'owner_earnings_growth_10y' => 'owner_earnings_growth_10y',
        'owner_earnings_growth_1y' => 'owner_earnings_growth_1y',
        'owner_earnings_growth_3y' => 'owner_earnings_growth_3y',
        'owner_earnings_growth_3y_high' => 'owner_earnings_growth_3y_high',
        'owner_earnings_growth_3y_low' => 'owner_earnings_growth_3y_low',
        'owner_earnings_growth_3y_med' => 'owner_earnings_growth_3y_med',
        'owner_earnings_growth_5y' => 'owner_earnings_growth_5y',
        'rdcf_growth' => 'rdcf_growth',
        'rvn_growth_10y' => 'rvn_growth_10y',
        'rvn_growth_1y' => 'rvn_growth_1y',
        'rvn_growth_3y' => 'rvn_growth_3y',
        'rvn_growth_3y_high' => 'rvn_growth_3y_high',
        'rvn_growth_3y_low' => 'rvn_growth_3y_low',
        'rvn_growth_3y_med' => 'rvn_growth_3y_med',
        'rvn_growth_5y' => 'rvn_growth_5y',
        'rvn_q1_growth' => 'rvn_q1_growth',
        'rvn_q2_growth' => 'rvn_q2_growth',
        'rvn_q3_growth' => 'rvn_q3_growth',
        'rvn_q4_growth' => 'rvn_q4_growth',
        'total_debt_growth_10y' => 'total_debt_growth_10y',
        'total_debt_growth_1y' => 'total_debt_growth_1y',
        'total_debt_growth_3y' => 'total_debt_growth_3y',
        'total_debt_growth_5y' => 'total_debt_growth_5y',
        'total_ebitda_growth_10y' => 'total_ebitda_growth_10y',
        'total_ebitda_growth_1y' => 'total_ebitda_growth_1y',
        'total_ebitda_growth_3y' => 'total_ebitda_growth_3y',
        'total_ebitda_growth_3y_high' => 'total_ebitda_growth_3y_high',
        'total_ebitda_growth_3y_low' => 'total_ebitda_growth_3y_low',
        'total_ebitda_growth_3y_med' => 'total_ebitda_growth_3y_med',
        'total_ebitda_growth_5y' => 'total_ebitda_growth_5y',
        'total_netincome_growth_10y' => 'total_netincome_growth_10y',
        'total_netincome_growth_1y' => 'total_netincome_growth_1y',
        'total_netincome_growth_3y' => 'total_netincome_growth_3y',
        'total_netincome_growth_3y_high' => 'total_netincome_growth_3y_high',
        'total_netincome_growth_3y_low' => 'total_netincome_growth_3y_low',
        'total_netincome_growth_3y_med' => 'total_netincome_growth_3y_med',
        'total_netincome_growth_5y' => 'total_netincome_growth_5y',
        'total_rvn_growth_10y' => 'total_rvn_growth_10y',
        'total_rvn_growth_1y' => 'total_rvn_growth_1y',
        'total_rvn_growth_3y' => 'total_rvn_growth_3y',
        'total_rvn_growth_3y_high' => 'total_rvn_growth_3y_high',
        'total_rvn_growth_3y_low' => 'total_rvn_growth_3y_low',
        'total_rvn_growth_3y_med' => 'total_rvn_growth_3y_med',
        'total_rvn_growth_5y' => 'total_rvn_growth_5y',
        'total_rvn_growth_5y_est' => 'total_rvn_growth_5y_est'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'roc_joel_growth' => 'setRocJoelGrowth',
        'asset_growth_10y' => 'setAssetGrowth10y',
        'asset_growth_1y' => 'setAssetGrowth1y',
        'asset_growth_3y' => 'setAssetGrowth3y',
        'asset_growth_3y_high' => 'setAssetGrowth3yHigh',
        'asset_growth_3y_low' => 'setAssetGrowth3yLow',
        'asset_growth_3y_med' => 'setAssetGrowth3yMed',
        'asset_growth_5y' => 'setAssetGrowth5y',
        'book_growth_10y' => 'setBookGrowth10y',
        'book_growth_1y' => 'setBookGrowth1y',
        'book_growth_3y' => 'setBookGrowth3y',
        'book_growth_3y_high' => 'setBookGrowth3yHigh',
        'book_growth_3y_low' => 'setBookGrowth3yLow',
        'book_growth_3y_med' => 'setBookGrowth3yMed',
        'book_growth_5y' => 'setBookGrowth5y',
        'cashflow_growth_10y' => 'setCashflowGrowth10y',
        'cashflow_growth_1y' => 'setCashflowGrowth1y',
        'cashflow_growth_3y' => 'setCashflowGrowth3y',
        'cashflow_growth_3y_high' => 'setCashflowGrowth3yHigh',
        'cashflow_growth_3y_low' => 'setCashflowGrowth3yLow',
        'cashflow_growth_3y_med' => 'setCashflowGrowth3yMed',
        'cashflow_growth_5y' => 'setCashflowGrowth5y',
        'cyclically_adjusted_book_growth_10y' => 'setCyclicallyAdjustedBookGrowth10y',
        'cyclically_adjusted_book_growth_1y' => 'setCyclicallyAdjustedBookGrowth1y',
        'cyclically_adjusted_book_growth_3y' => 'setCyclicallyAdjustedBookGrowth3y',
        'cyclically_adjusted_book_growth_3y_high' => 'setCyclicallyAdjustedBookGrowth3yHigh',
        'cyclically_adjusted_book_growth_3y_low' => 'setCyclicallyAdjustedBookGrowth3yLow',
        'cyclically_adjusted_book_growth_3y_med' => 'setCyclicallyAdjustedBookGrowth3yMed',
        'cyclically_adjusted_book_growth_5y' => 'setCyclicallyAdjustedBookGrowth5y',
        'cyclically_adjusted_fcf_growth_10y' => 'setCyclicallyAdjustedFcfGrowth10y',
        'cyclically_adjusted_fcf_growth_1y' => 'setCyclicallyAdjustedFcfGrowth1y',
        'cyclically_adjusted_fcf_growth_3y' => 'setCyclicallyAdjustedFcfGrowth3y',
        'cyclically_adjusted_fcf_growth_3y_high' => 'setCyclicallyAdjustedFcfGrowth3yHigh',
        'cyclically_adjusted_fcf_growth_3y_low' => 'setCyclicallyAdjustedFcfGrowth3yLow',
        'cyclically_adjusted_fcf_growth_3y_med' => 'setCyclicallyAdjustedFcfGrowth3yMed',
        'cyclically_adjusted_fcf_growth_5y' => 'setCyclicallyAdjustedFcfGrowth5y',
        'cyclically_adjusted_rvn_growth_10y' => 'setCyclicallyAdjustedRvnGrowth10y',
        'cyclically_adjusted_rvn_growth_1y' => 'setCyclicallyAdjustedRvnGrowth1y',
        'cyclically_adjusted_rvn_growth_3y' => 'setCyclicallyAdjustedRvnGrowth3y',
        'cyclically_adjusted_rvn_growth_3y_high' => 'setCyclicallyAdjustedRvnGrowth3yHigh',
        'cyclically_adjusted_rvn_growth_3y_low' => 'setCyclicallyAdjustedRvnGrowth3yLow',
        'cyclically_adjusted_rvn_growth_3y_med' => 'setCyclicallyAdjustedRvnGrowth3yMed',
        'cyclically_adjusted_rvn_growth_5y' => 'setCyclicallyAdjustedRvnGrowth5y',
        'debt2rev_growth_10y' => 'setDebt2revGrowth10y',
        'debt2rev_growth_1y' => 'setDebt2revGrowth1y',
        'debt2rev_growth_5y' => 'setDebt2revGrowth5y',
        'dividend_growth_10y' => 'setDividendGrowth10y',
        'dividend_growth_1y' => 'setDividendGrowth1y',
        'dividend_growth_3y' => 'setDividendGrowth3y',
        'dividend_growth_3y_high' => 'setDividendGrowth3yHigh',
        'dividend_growth_3y_low' => 'setDividendGrowth3yLow',
        'dividend_growth_3y_med' => 'setDividendGrowth3yMed',
        'dividend_growth_5y' => 'setDividendGrowth5y',
        'e10_growth_10y' => 'setE10Growth10y',
        'e10_growth_1y' => 'setE10Growth1y',
        'e10_growth_3y' => 'setE10Growth3y',
        'e10_growth_3y_high' => 'setE10Growth3yHigh',
        'e10_growth_3y_low' => 'setE10Growth3yLow',
        'e10_growth_3y_med' => 'setE10Growth3yMed',
        'e10_growth_5y' => 'setE10Growth5y',
        'earning_growth_10y' => 'setEarningGrowth10y',
        'earning_growth_1y' => 'setEarningGrowth1y',
        'earning_growth_3y' => 'setEarningGrowth3y',
        'earning_growth_3y_high' => 'setEarningGrowth3yHigh',
        'earning_growth_3y_low' => 'setEarningGrowth3yLow',
        'earning_growth_3y_med' => 'setEarningGrowth3yMed',
        'earning_growth_5y' => 'setEarningGrowth5y',
        'earning_growth_5y_est' => 'setEarningGrowth5yEst',
        'ebit_growth_10y' => 'setEbitGrowth10y',
        'ebit_growth_1y' => 'setEbitGrowth1y',
        'ebit_growth_3y' => 'setEbitGrowth3y',
        'ebit_growth_3y_high' => 'setEbitGrowth3yHigh',
        'ebit_growth_3y_low' => 'setEbitGrowth3yLow',
        'ebit_growth_3y_med' => 'setEbitGrowth3yMed',
        'ebit_growth_5y' => 'setEbitGrowth5y',
        'ebit_q1_growth' => 'setEbitQ1Growth',
        'ebit_q2_growth' => 'setEbitQ2Growth',
        'ebit_q3_growth' => 'setEbitQ3Growth',
        'ebit_q4_growth' => 'setEbitQ4Growth',
        'ebitda_growth_10y' => 'setEbitdaGrowth10y',
        'ebitda_growth_1y' => 'setEbitdaGrowth1y',
        'ebitda_growth_3y' => 'setEbitdaGrowth3y',
        'ebitda_growth_3y_high' => 'setEbitdaGrowth3yHigh',
        'ebitda_growth_3y_low' => 'setEbitdaGrowth3yLow',
        'ebitda_growth_3y_med' => 'setEbitdaGrowth3yMed',
        'ebitda_growth_5y' => 'setEbitdaGrowth5y',
        'fscore_chg_1y' => 'setFscoreChg1y',
        'grossmargin_growth' => 'setGrossmarginGrowth',
        'ltd_chg_10y' => 'setLtdChg10y',
        'ltd_chg_1y' => 'setLtdChg1y',
        'ltd_chg_3y' => 'setLtdChg3y',
        'ltd_chg_5y' => 'setLtdChg5y',
        'ltd_growth_10y' => 'setLtdGrowth10y',
        'ltd_growth_1y' => 'setLtdGrowth1y',
        'ltd_growth_3y' => 'setLtdGrowth3y',
        'ltd_growth_5y' => 'setLtdGrowth5y',
        'mktcap_chg_10y' => 'setMktcapChg10y',
        'mktcap_chg_15y' => 'setMktcapChg15y',
        'mktcap_chg_1y' => 'setMktcapChg1y',
        'mktcap_chg_20y' => 'setMktcapChg20y',
        'mktcap_chg_25y' => 'setMktcapChg25y',
        'mktcap_chg_3y' => 'setMktcapChg3y',
        'mktcap_chg_5y' => 'setMktcapChg5y',
        'operating_cashflow_growth_10y' => 'setOperatingCashflowGrowth10y',
        'operating_cashflow_growth_1y' => 'setOperatingCashflowGrowth1y',
        'operating_cashflow_growth_3y' => 'setOperatingCashflowGrowth3y',
        'operating_cashflow_growth_3y_high' => 'setOperatingCashflowGrowth3yHigh',
        'operating_cashflow_growth_3y_low' => 'setOperatingCashflowGrowth3yLow',
        'operating_cashflow_growth_3y_med' => 'setOperatingCashflowGrowth3yMed',
        'operating_cashflow_growth_5y' => 'setOperatingCashflowGrowth5y',
        'operatingmargin_growth' => 'setOperatingmarginGrowth',
        'owner_earnings_growth_10y' => 'setOwnerEarningsGrowth10y',
        'owner_earnings_growth_1y' => 'setOwnerEarningsGrowth1y',
        'owner_earnings_growth_3y' => 'setOwnerEarningsGrowth3y',
        'owner_earnings_growth_3y_high' => 'setOwnerEarningsGrowth3yHigh',
        'owner_earnings_growth_3y_low' => 'setOwnerEarningsGrowth3yLow',
        'owner_earnings_growth_3y_med' => 'setOwnerEarningsGrowth3yMed',
        'owner_earnings_growth_5y' => 'setOwnerEarningsGrowth5y',
        'rdcf_growth' => 'setRdcfGrowth',
        'rvn_growth_10y' => 'setRvnGrowth10y',
        'rvn_growth_1y' => 'setRvnGrowth1y',
        'rvn_growth_3y' => 'setRvnGrowth3y',
        'rvn_growth_3y_high' => 'setRvnGrowth3yHigh',
        'rvn_growth_3y_low' => 'setRvnGrowth3yLow',
        'rvn_growth_3y_med' => 'setRvnGrowth3yMed',
        'rvn_growth_5y' => 'setRvnGrowth5y',
        'rvn_q1_growth' => 'setRvnQ1Growth',
        'rvn_q2_growth' => 'setRvnQ2Growth',
        'rvn_q3_growth' => 'setRvnQ3Growth',
        'rvn_q4_growth' => 'setRvnQ4Growth',
        'total_debt_growth_10y' => 'setTotalDebtGrowth10y',
        'total_debt_growth_1y' => 'setTotalDebtGrowth1y',
        'total_debt_growth_3y' => 'setTotalDebtGrowth3y',
        'total_debt_growth_5y' => 'setTotalDebtGrowth5y',
        'total_ebitda_growth_10y' => 'setTotalEbitdaGrowth10y',
        'total_ebitda_growth_1y' => 'setTotalEbitdaGrowth1y',
        'total_ebitda_growth_3y' => 'setTotalEbitdaGrowth3y',
        'total_ebitda_growth_3y_high' => 'setTotalEbitdaGrowth3yHigh',
        'total_ebitda_growth_3y_low' => 'setTotalEbitdaGrowth3yLow',
        'total_ebitda_growth_3y_med' => 'setTotalEbitdaGrowth3yMed',
        'total_ebitda_growth_5y' => 'setTotalEbitdaGrowth5y',
        'total_netincome_growth_10y' => 'setTotalNetincomeGrowth10y',
        'total_netincome_growth_1y' => 'setTotalNetincomeGrowth1y',
        'total_netincome_growth_3y' => 'setTotalNetincomeGrowth3y',
        'total_netincome_growth_3y_high' => 'setTotalNetincomeGrowth3yHigh',
        'total_netincome_growth_3y_low' => 'setTotalNetincomeGrowth3yLow',
        'total_netincome_growth_3y_med' => 'setTotalNetincomeGrowth3yMed',
        'total_netincome_growth_5y' => 'setTotalNetincomeGrowth5y',
        'total_rvn_growth_10y' => 'setTotalRvnGrowth10y',
        'total_rvn_growth_1y' => 'setTotalRvnGrowth1y',
        'total_rvn_growth_3y' => 'setTotalRvnGrowth3y',
        'total_rvn_growth_3y_high' => 'setTotalRvnGrowth3yHigh',
        'total_rvn_growth_3y_low' => 'setTotalRvnGrowth3yLow',
        'total_rvn_growth_3y_med' => 'setTotalRvnGrowth3yMed',
        'total_rvn_growth_5y' => 'setTotalRvnGrowth5y',
        'total_rvn_growth_5y_est' => 'setTotalRvnGrowth5yEst'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'roc_joel_growth' => 'getRocJoelGrowth',
        'asset_growth_10y' => 'getAssetGrowth10y',
        'asset_growth_1y' => 'getAssetGrowth1y',
        'asset_growth_3y' => 'getAssetGrowth3y',
        'asset_growth_3y_high' => 'getAssetGrowth3yHigh',
        'asset_growth_3y_low' => 'getAssetGrowth3yLow',
        'asset_growth_3y_med' => 'getAssetGrowth3yMed',
        'asset_growth_5y' => 'getAssetGrowth5y',
        'book_growth_10y' => 'getBookGrowth10y',
        'book_growth_1y' => 'getBookGrowth1y',
        'book_growth_3y' => 'getBookGrowth3y',
        'book_growth_3y_high' => 'getBookGrowth3yHigh',
        'book_growth_3y_low' => 'getBookGrowth3yLow',
        'book_growth_3y_med' => 'getBookGrowth3yMed',
        'book_growth_5y' => 'getBookGrowth5y',
        'cashflow_growth_10y' => 'getCashflowGrowth10y',
        'cashflow_growth_1y' => 'getCashflowGrowth1y',
        'cashflow_growth_3y' => 'getCashflowGrowth3y',
        'cashflow_growth_3y_high' => 'getCashflowGrowth3yHigh',
        'cashflow_growth_3y_low' => 'getCashflowGrowth3yLow',
        'cashflow_growth_3y_med' => 'getCashflowGrowth3yMed',
        'cashflow_growth_5y' => 'getCashflowGrowth5y',
        'cyclically_adjusted_book_growth_10y' => 'getCyclicallyAdjustedBookGrowth10y',
        'cyclically_adjusted_book_growth_1y' => 'getCyclicallyAdjustedBookGrowth1y',
        'cyclically_adjusted_book_growth_3y' => 'getCyclicallyAdjustedBookGrowth3y',
        'cyclically_adjusted_book_growth_3y_high' => 'getCyclicallyAdjustedBookGrowth3yHigh',
        'cyclically_adjusted_book_growth_3y_low' => 'getCyclicallyAdjustedBookGrowth3yLow',
        'cyclically_adjusted_book_growth_3y_med' => 'getCyclicallyAdjustedBookGrowth3yMed',
        'cyclically_adjusted_book_growth_5y' => 'getCyclicallyAdjustedBookGrowth5y',
        'cyclically_adjusted_fcf_growth_10y' => 'getCyclicallyAdjustedFcfGrowth10y',
        'cyclically_adjusted_fcf_growth_1y' => 'getCyclicallyAdjustedFcfGrowth1y',
        'cyclically_adjusted_fcf_growth_3y' => 'getCyclicallyAdjustedFcfGrowth3y',
        'cyclically_adjusted_fcf_growth_3y_high' => 'getCyclicallyAdjustedFcfGrowth3yHigh',
        'cyclically_adjusted_fcf_growth_3y_low' => 'getCyclicallyAdjustedFcfGrowth3yLow',
        'cyclically_adjusted_fcf_growth_3y_med' => 'getCyclicallyAdjustedFcfGrowth3yMed',
        'cyclically_adjusted_fcf_growth_5y' => 'getCyclicallyAdjustedFcfGrowth5y',
        'cyclically_adjusted_rvn_growth_10y' => 'getCyclicallyAdjustedRvnGrowth10y',
        'cyclically_adjusted_rvn_growth_1y' => 'getCyclicallyAdjustedRvnGrowth1y',
        'cyclically_adjusted_rvn_growth_3y' => 'getCyclicallyAdjustedRvnGrowth3y',
        'cyclically_adjusted_rvn_growth_3y_high' => 'getCyclicallyAdjustedRvnGrowth3yHigh',
        'cyclically_adjusted_rvn_growth_3y_low' => 'getCyclicallyAdjustedRvnGrowth3yLow',
        'cyclically_adjusted_rvn_growth_3y_med' => 'getCyclicallyAdjustedRvnGrowth3yMed',
        'cyclically_adjusted_rvn_growth_5y' => 'getCyclicallyAdjustedRvnGrowth5y',
        'debt2rev_growth_10y' => 'getDebt2revGrowth10y',
        'debt2rev_growth_1y' => 'getDebt2revGrowth1y',
        'debt2rev_growth_5y' => 'getDebt2revGrowth5y',
        'dividend_growth_10y' => 'getDividendGrowth10y',
        'dividend_growth_1y' => 'getDividendGrowth1y',
        'dividend_growth_3y' => 'getDividendGrowth3y',
        'dividend_growth_3y_high' => 'getDividendGrowth3yHigh',
        'dividend_growth_3y_low' => 'getDividendGrowth3yLow',
        'dividend_growth_3y_med' => 'getDividendGrowth3yMed',
        'dividend_growth_5y' => 'getDividendGrowth5y',
        'e10_growth_10y' => 'getE10Growth10y',
        'e10_growth_1y' => 'getE10Growth1y',
        'e10_growth_3y' => 'getE10Growth3y',
        'e10_growth_3y_high' => 'getE10Growth3yHigh',
        'e10_growth_3y_low' => 'getE10Growth3yLow',
        'e10_growth_3y_med' => 'getE10Growth3yMed',
        'e10_growth_5y' => 'getE10Growth5y',
        'earning_growth_10y' => 'getEarningGrowth10y',
        'earning_growth_1y' => 'getEarningGrowth1y',
        'earning_growth_3y' => 'getEarningGrowth3y',
        'earning_growth_3y_high' => 'getEarningGrowth3yHigh',
        'earning_growth_3y_low' => 'getEarningGrowth3yLow',
        'earning_growth_3y_med' => 'getEarningGrowth3yMed',
        'earning_growth_5y' => 'getEarningGrowth5y',
        'earning_growth_5y_est' => 'getEarningGrowth5yEst',
        'ebit_growth_10y' => 'getEbitGrowth10y',
        'ebit_growth_1y' => 'getEbitGrowth1y',
        'ebit_growth_3y' => 'getEbitGrowth3y',
        'ebit_growth_3y_high' => 'getEbitGrowth3yHigh',
        'ebit_growth_3y_low' => 'getEbitGrowth3yLow',
        'ebit_growth_3y_med' => 'getEbitGrowth3yMed',
        'ebit_growth_5y' => 'getEbitGrowth5y',
        'ebit_q1_growth' => 'getEbitQ1Growth',
        'ebit_q2_growth' => 'getEbitQ2Growth',
        'ebit_q3_growth' => 'getEbitQ3Growth',
        'ebit_q4_growth' => 'getEbitQ4Growth',
        'ebitda_growth_10y' => 'getEbitdaGrowth10y',
        'ebitda_growth_1y' => 'getEbitdaGrowth1y',
        'ebitda_growth_3y' => 'getEbitdaGrowth3y',
        'ebitda_growth_3y_high' => 'getEbitdaGrowth3yHigh',
        'ebitda_growth_3y_low' => 'getEbitdaGrowth3yLow',
        'ebitda_growth_3y_med' => 'getEbitdaGrowth3yMed',
        'ebitda_growth_5y' => 'getEbitdaGrowth5y',
        'fscore_chg_1y' => 'getFscoreChg1y',
        'grossmargin_growth' => 'getGrossmarginGrowth',
        'ltd_chg_10y' => 'getLtdChg10y',
        'ltd_chg_1y' => 'getLtdChg1y',
        'ltd_chg_3y' => 'getLtdChg3y',
        'ltd_chg_5y' => 'getLtdChg5y',
        'ltd_growth_10y' => 'getLtdGrowth10y',
        'ltd_growth_1y' => 'getLtdGrowth1y',
        'ltd_growth_3y' => 'getLtdGrowth3y',
        'ltd_growth_5y' => 'getLtdGrowth5y',
        'mktcap_chg_10y' => 'getMktcapChg10y',
        'mktcap_chg_15y' => 'getMktcapChg15y',
        'mktcap_chg_1y' => 'getMktcapChg1y',
        'mktcap_chg_20y' => 'getMktcapChg20y',
        'mktcap_chg_25y' => 'getMktcapChg25y',
        'mktcap_chg_3y' => 'getMktcapChg3y',
        'mktcap_chg_5y' => 'getMktcapChg5y',
        'operating_cashflow_growth_10y' => 'getOperatingCashflowGrowth10y',
        'operating_cashflow_growth_1y' => 'getOperatingCashflowGrowth1y',
        'operating_cashflow_growth_3y' => 'getOperatingCashflowGrowth3y',
        'operating_cashflow_growth_3y_high' => 'getOperatingCashflowGrowth3yHigh',
        'operating_cashflow_growth_3y_low' => 'getOperatingCashflowGrowth3yLow',
        'operating_cashflow_growth_3y_med' => 'getOperatingCashflowGrowth3yMed',
        'operating_cashflow_growth_5y' => 'getOperatingCashflowGrowth5y',
        'operatingmargin_growth' => 'getOperatingmarginGrowth',
        'owner_earnings_growth_10y' => 'getOwnerEarningsGrowth10y',
        'owner_earnings_growth_1y' => 'getOwnerEarningsGrowth1y',
        'owner_earnings_growth_3y' => 'getOwnerEarningsGrowth3y',
        'owner_earnings_growth_3y_high' => 'getOwnerEarningsGrowth3yHigh',
        'owner_earnings_growth_3y_low' => 'getOwnerEarningsGrowth3yLow',
        'owner_earnings_growth_3y_med' => 'getOwnerEarningsGrowth3yMed',
        'owner_earnings_growth_5y' => 'getOwnerEarningsGrowth5y',
        'rdcf_growth' => 'getRdcfGrowth',
        'rvn_growth_10y' => 'getRvnGrowth10y',
        'rvn_growth_1y' => 'getRvnGrowth1y',
        'rvn_growth_3y' => 'getRvnGrowth3y',
        'rvn_growth_3y_high' => 'getRvnGrowth3yHigh',
        'rvn_growth_3y_low' => 'getRvnGrowth3yLow',
        'rvn_growth_3y_med' => 'getRvnGrowth3yMed',
        'rvn_growth_5y' => 'getRvnGrowth5y',
        'rvn_q1_growth' => 'getRvnQ1Growth',
        'rvn_q2_growth' => 'getRvnQ2Growth',
        'rvn_q3_growth' => 'getRvnQ3Growth',
        'rvn_q4_growth' => 'getRvnQ4Growth',
        'total_debt_growth_10y' => 'getTotalDebtGrowth10y',
        'total_debt_growth_1y' => 'getTotalDebtGrowth1y',
        'total_debt_growth_3y' => 'getTotalDebtGrowth3y',
        'total_debt_growth_5y' => 'getTotalDebtGrowth5y',
        'total_ebitda_growth_10y' => 'getTotalEbitdaGrowth10y',
        'total_ebitda_growth_1y' => 'getTotalEbitdaGrowth1y',
        'total_ebitda_growth_3y' => 'getTotalEbitdaGrowth3y',
        'total_ebitda_growth_3y_high' => 'getTotalEbitdaGrowth3yHigh',
        'total_ebitda_growth_3y_low' => 'getTotalEbitdaGrowth3yLow',
        'total_ebitda_growth_3y_med' => 'getTotalEbitdaGrowth3yMed',
        'total_ebitda_growth_5y' => 'getTotalEbitdaGrowth5y',
        'total_netincome_growth_10y' => 'getTotalNetincomeGrowth10y',
        'total_netincome_growth_1y' => 'getTotalNetincomeGrowth1y',
        'total_netincome_growth_3y' => 'getTotalNetincomeGrowth3y',
        'total_netincome_growth_3y_high' => 'getTotalNetincomeGrowth3yHigh',
        'total_netincome_growth_3y_low' => 'getTotalNetincomeGrowth3yLow',
        'total_netincome_growth_3y_med' => 'getTotalNetincomeGrowth3yMed',
        'total_netincome_growth_5y' => 'getTotalNetincomeGrowth5y',
        'total_rvn_growth_10y' => 'getTotalRvnGrowth10y',
        'total_rvn_growth_1y' => 'getTotalRvnGrowth1y',
        'total_rvn_growth_3y' => 'getTotalRvnGrowth3y',
        'total_rvn_growth_3y_high' => 'getTotalRvnGrowth3yHigh',
        'total_rvn_growth_3y_low' => 'getTotalRvnGrowth3yLow',
        'total_rvn_growth_3y_med' => 'getTotalRvnGrowth3yMed',
        'total_rvn_growth_5y' => 'getTotalRvnGrowth5y',
        'total_rvn_growth_5y_est' => 'getTotalRvnGrowth5yEst'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[]|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('roc_joel_growth', $data ?? [], null);
        $this->setIfExists('asset_growth_10y', $data ?? [], null);
        $this->setIfExists('asset_growth_1y', $data ?? [], null);
        $this->setIfExists('asset_growth_3y', $data ?? [], null);
        $this->setIfExists('asset_growth_3y_high', $data ?? [], null);
        $this->setIfExists('asset_growth_3y_low', $data ?? [], null);
        $this->setIfExists('asset_growth_3y_med', $data ?? [], null);
        $this->setIfExists('asset_growth_5y', $data ?? [], null);
        $this->setIfExists('book_growth_10y', $data ?? [], null);
        $this->setIfExists('book_growth_1y', $data ?? [], null);
        $this->setIfExists('book_growth_3y', $data ?? [], null);
        $this->setIfExists('book_growth_3y_high', $data ?? [], null);
        $this->setIfExists('book_growth_3y_low', $data ?? [], null);
        $this->setIfExists('book_growth_3y_med', $data ?? [], null);
        $this->setIfExists('book_growth_5y', $data ?? [], null);
        $this->setIfExists('cashflow_growth_10y', $data ?? [], null);
        $this->setIfExists('cashflow_growth_1y', $data ?? [], null);
        $this->setIfExists('cashflow_growth_3y', $data ?? [], null);
        $this->setIfExists('cashflow_growth_3y_high', $data ?? [], null);
        $this->setIfExists('cashflow_growth_3y_low', $data ?? [], null);
        $this->setIfExists('cashflow_growth_3y_med', $data ?? [], null);
        $this->setIfExists('cashflow_growth_5y', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_book_growth_10y', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_book_growth_1y', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_book_growth_3y', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_book_growth_3y_high', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_book_growth_3y_low', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_book_growth_3y_med', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_book_growth_5y', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_fcf_growth_10y', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_fcf_growth_1y', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_fcf_growth_3y', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_fcf_growth_3y_high', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_fcf_growth_3y_low', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_fcf_growth_3y_med', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_fcf_growth_5y', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_rvn_growth_10y', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_rvn_growth_1y', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_rvn_growth_3y', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_rvn_growth_3y_high', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_rvn_growth_3y_low', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_rvn_growth_3y_med', $data ?? [], null);
        $this->setIfExists('cyclically_adjusted_rvn_growth_5y', $data ?? [], null);
        $this->setIfExists('debt2rev_growth_10y', $data ?? [], null);
        $this->setIfExists('debt2rev_growth_1y', $data ?? [], null);
        $this->setIfExists('debt2rev_growth_5y', $data ?? [], null);
        $this->setIfExists('dividend_growth_10y', $data ?? [], null);
        $this->setIfExists('dividend_growth_1y', $data ?? [], null);
        $this->setIfExists('dividend_growth_3y', $data ?? [], null);
        $this->setIfExists('dividend_growth_3y_high', $data ?? [], null);
        $this->setIfExists('dividend_growth_3y_low', $data ?? [], null);
        $this->setIfExists('dividend_growth_3y_med', $data ?? [], null);
        $this->setIfExists('dividend_growth_5y', $data ?? [], null);
        $this->setIfExists('e10_growth_10y', $data ?? [], null);
        $this->setIfExists('e10_growth_1y', $data ?? [], null);
        $this->setIfExists('e10_growth_3y', $data ?? [], null);
        $this->setIfExists('e10_growth_3y_high', $data ?? [], null);
        $this->setIfExists('e10_growth_3y_low', $data ?? [], null);
        $this->setIfExists('e10_growth_3y_med', $data ?? [], null);
        $this->setIfExists('e10_growth_5y', $data ?? [], null);
        $this->setIfExists('earning_growth_10y', $data ?? [], null);
        $this->setIfExists('earning_growth_1y', $data ?? [], null);
        $this->setIfExists('earning_growth_3y', $data ?? [], null);
        $this->setIfExists('earning_growth_3y_high', $data ?? [], null);
        $this->setIfExists('earning_growth_3y_low', $data ?? [], null);
        $this->setIfExists('earning_growth_3y_med', $data ?? [], null);
        $this->setIfExists('earning_growth_5y', $data ?? [], null);
        $this->setIfExists('earning_growth_5y_est', $data ?? [], null);
        $this->setIfExists('ebit_growth_10y', $data ?? [], null);
        $this->setIfExists('ebit_growth_1y', $data ?? [], null);
        $this->setIfExists('ebit_growth_3y', $data ?? [], null);
        $this->setIfExists('ebit_growth_3y_high', $data ?? [], null);
        $this->setIfExists('ebit_growth_3y_low', $data ?? [], null);
        $this->setIfExists('ebit_growth_3y_med', $data ?? [], null);
        $this->setIfExists('ebit_growth_5y', $data ?? [], null);
        $this->setIfExists('ebit_q1_growth', $data ?? [], null);
        $this->setIfExists('ebit_q2_growth', $data ?? [], null);
        $this->setIfExists('ebit_q3_growth', $data ?? [], null);
        $this->setIfExists('ebit_q4_growth', $data ?? [], null);
        $this->setIfExists('ebitda_growth_10y', $data ?? [], null);
        $this->setIfExists('ebitda_growth_1y', $data ?? [], null);
        $this->setIfExists('ebitda_growth_3y', $data ?? [], null);
        $this->setIfExists('ebitda_growth_3y_high', $data ?? [], null);
        $this->setIfExists('ebitda_growth_3y_low', $data ?? [], null);
        $this->setIfExists('ebitda_growth_3y_med', $data ?? [], null);
        $this->setIfExists('ebitda_growth_5y', $data ?? [], null);
        $this->setIfExists('fscore_chg_1y', $data ?? [], null);
        $this->setIfExists('grossmargin_growth', $data ?? [], null);
        $this->setIfExists('ltd_chg_10y', $data ?? [], null);
        $this->setIfExists('ltd_chg_1y', $data ?? [], null);
        $this->setIfExists('ltd_chg_3y', $data ?? [], null);
        $this->setIfExists('ltd_chg_5y', $data ?? [], null);
        $this->setIfExists('ltd_growth_10y', $data ?? [], null);
        $this->setIfExists('ltd_growth_1y', $data ?? [], null);
        $this->setIfExists('ltd_growth_3y', $data ?? [], null);
        $this->setIfExists('ltd_growth_5y', $data ?? [], null);
        $this->setIfExists('mktcap_chg_10y', $data ?? [], null);
        $this->setIfExists('mktcap_chg_15y', $data ?? [], null);
        $this->setIfExists('mktcap_chg_1y', $data ?? [], null);
        $this->setIfExists('mktcap_chg_20y', $data ?? [], null);
        $this->setIfExists('mktcap_chg_25y', $data ?? [], null);
        $this->setIfExists('mktcap_chg_3y', $data ?? [], null);
        $this->setIfExists('mktcap_chg_5y', $data ?? [], null);
        $this->setIfExists('operating_cashflow_growth_10y', $data ?? [], null);
        $this->setIfExists('operating_cashflow_growth_1y', $data ?? [], null);
        $this->setIfExists('operating_cashflow_growth_3y', $data ?? [], null);
        $this->setIfExists('operating_cashflow_growth_3y_high', $data ?? [], null);
        $this->setIfExists('operating_cashflow_growth_3y_low', $data ?? [], null);
        $this->setIfExists('operating_cashflow_growth_3y_med', $data ?? [], null);
        $this->setIfExists('operating_cashflow_growth_5y', $data ?? [], null);
        $this->setIfExists('operatingmargin_growth', $data ?? [], null);
        $this->setIfExists('owner_earnings_growth_10y', $data ?? [], null);
        $this->setIfExists('owner_earnings_growth_1y', $data ?? [], null);
        $this->setIfExists('owner_earnings_growth_3y', $data ?? [], null);
        $this->setIfExists('owner_earnings_growth_3y_high', $data ?? [], null);
        $this->setIfExists('owner_earnings_growth_3y_low', $data ?? [], null);
        $this->setIfExists('owner_earnings_growth_3y_med', $data ?? [], null);
        $this->setIfExists('owner_earnings_growth_5y', $data ?? [], null);
        $this->setIfExists('rdcf_growth', $data ?? [], null);
        $this->setIfExists('rvn_growth_10y', $data ?? [], null);
        $this->setIfExists('rvn_growth_1y', $data ?? [], null);
        $this->setIfExists('rvn_growth_3y', $data ?? [], null);
        $this->setIfExists('rvn_growth_3y_high', $data ?? [], null);
        $this->setIfExists('rvn_growth_3y_low', $data ?? [], null);
        $this->setIfExists('rvn_growth_3y_med', $data ?? [], null);
        $this->setIfExists('rvn_growth_5y', $data ?? [], null);
        $this->setIfExists('rvn_q1_growth', $data ?? [], null);
        $this->setIfExists('rvn_q2_growth', $data ?? [], null);
        $this->setIfExists('rvn_q3_growth', $data ?? [], null);
        $this->setIfExists('rvn_q4_growth', $data ?? [], null);
        $this->setIfExists('total_debt_growth_10y', $data ?? [], null);
        $this->setIfExists('total_debt_growth_1y', $data ?? [], null);
        $this->setIfExists('total_debt_growth_3y', $data ?? [], null);
        $this->setIfExists('total_debt_growth_5y', $data ?? [], null);
        $this->setIfExists('total_ebitda_growth_10y', $data ?? [], null);
        $this->setIfExists('total_ebitda_growth_1y', $data ?? [], null);
        $this->setIfExists('total_ebitda_growth_3y', $data ?? [], null);
        $this->setIfExists('total_ebitda_growth_3y_high', $data ?? [], null);
        $this->setIfExists('total_ebitda_growth_3y_low', $data ?? [], null);
        $this->setIfExists('total_ebitda_growth_3y_med', $data ?? [], null);
        $this->setIfExists('total_ebitda_growth_5y', $data ?? [], null);
        $this->setIfExists('total_netincome_growth_10y', $data ?? [], null);
        $this->setIfExists('total_netincome_growth_1y', $data ?? [], null);
        $this->setIfExists('total_netincome_growth_3y', $data ?? [], null);
        $this->setIfExists('total_netincome_growth_3y_high', $data ?? [], null);
        $this->setIfExists('total_netincome_growth_3y_low', $data ?? [], null);
        $this->setIfExists('total_netincome_growth_3y_med', $data ?? [], null);
        $this->setIfExists('total_netincome_growth_5y', $data ?? [], null);
        $this->setIfExists('total_rvn_growth_10y', $data ?? [], null);
        $this->setIfExists('total_rvn_growth_1y', $data ?? [], null);
        $this->setIfExists('total_rvn_growth_3y', $data ?? [], null);
        $this->setIfExists('total_rvn_growth_3y_high', $data ?? [], null);
        $this->setIfExists('total_rvn_growth_3y_low', $data ?? [], null);
        $this->setIfExists('total_rvn_growth_3y_med', $data ?? [], null);
        $this->setIfExists('total_rvn_growth_5y', $data ?? [], null);
        $this->setIfExists('total_rvn_growth_5y_est', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets roc_joel_growth
     *
     * @return float|null
     */
    public function getRocJoelGrowth()
    {
        return $this->container['roc_joel_growth'];
    }

    /**
     * Sets roc_joel_growth
     *
     * @param float|null $roc_joel_growth Joel Greenblatt defined Return on Capital differently in his book The Little Book That Still Beats the Market (Little Books. Big Profits). He defines Return on Capital as EBIT divided by the total of Property, Plant and Equipment and net working capital.
     *
     * @return self
     */
    public function setRocJoelGrowth($roc_joel_growth)
    {
        if (is_null($roc_joel_growth)) {
            throw new \InvalidArgumentException('non-nullable roc_joel_growth cannot be null');
        }
        $this->container['roc_joel_growth'] = $roc_joel_growth;

        return $this;
    }

    /**
     * Gets asset_growth_10y
     *
     * @return float|null
     */
    public function getAssetGrowth10y()
    {
        return $this->container['asset_growth_10y'];
    }

    /**
     * Sets asset_growth_10y
     *
     * @param float|null $asset_growth_10y The compounded average growth rate of total assets over the past ten years, computed using loglinear regression.
     *
     * @return self
     */
    public function setAssetGrowth10y($asset_growth_10y)
    {
        if (is_null($asset_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable asset_growth_10y cannot be null');
        }
        $this->container['asset_growth_10y'] = $asset_growth_10y;

        return $this;
    }

    /**
     * Gets asset_growth_1y
     *
     * @return float|null
     */
    public function getAssetGrowth1y()
    {
        return $this->container['asset_growth_1y'];
    }

    /**
     * Sets asset_growth_1y
     *
     * @param float|null $asset_growth_1y The average growth rate of total assets over the past year.
     *
     * @return self
     */
    public function setAssetGrowth1y($asset_growth_1y)
    {
        if (is_null($asset_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable asset_growth_1y cannot be null');
        }
        $this->container['asset_growth_1y'] = $asset_growth_1y;

        return $this;
    }

    /**
     * Gets asset_growth_3y
     *
     * @return float|null
     */
    public function getAssetGrowth3y()
    {
        return $this->container['asset_growth_3y'];
    }

    /**
     * Sets asset_growth_3y
     *
     * @param float|null $asset_growth_3y The compounded average growth rate of total assets over the past three years.
     *
     * @return self
     */
    public function setAssetGrowth3y($asset_growth_3y)
    {
        if (is_null($asset_growth_3y)) {
            throw new \InvalidArgumentException('non-nullable asset_growth_3y cannot be null');
        }
        $this->container['asset_growth_3y'] = $asset_growth_3y;

        return $this;
    }

    /**
     * Gets asset_growth_3y_high
     *
     * @return float|null
     */
    public function getAssetGrowth3yHigh()
    {
        return $this->container['asset_growth_3y_high'];
    }

    /**
     * Sets asset_growth_3y_high
     *
     * @param float|null $asset_growth_3y_high The highest three-year compounded average total assets growth rate over the past 10 years.
     *
     * @return self
     */
    public function setAssetGrowth3yHigh($asset_growth_3y_high)
    {
        if (is_null($asset_growth_3y_high)) {
            throw new \InvalidArgumentException('non-nullable asset_growth_3y_high cannot be null');
        }
        $this->container['asset_growth_3y_high'] = $asset_growth_3y_high;

        return $this;
    }

    /**
     * Gets asset_growth_3y_low
     *
     * @return float|null
     */
    public function getAssetGrowth3yLow()
    {
        return $this->container['asset_growth_3y_low'];
    }

    /**
     * Sets asset_growth_3y_low
     *
     * @param float|null $asset_growth_3y_low The lowest three-year compounded average total assets growth rate over the past 10 years.
     *
     * @return self
     */
    public function setAssetGrowth3yLow($asset_growth_3y_low)
    {
        if (is_null($asset_growth_3y_low)) {
            throw new \InvalidArgumentException('non-nullable asset_growth_3y_low cannot be null');
        }
        $this->container['asset_growth_3y_low'] = $asset_growth_3y_low;

        return $this;
    }

    /**
     * Gets asset_growth_3y_med
     *
     * @return float|null
     */
    public function getAssetGrowth3yMed()
    {
        return $this->container['asset_growth_3y_med'];
    }

    /**
     * Sets asset_growth_3y_med
     *
     * @param float|null $asset_growth_3y_med The median three-year compounded average total assets growth rate over the past 10 years.
     *
     * @return self
     */
    public function setAssetGrowth3yMed($asset_growth_3y_med)
    {
        if (is_null($asset_growth_3y_med)) {
            throw new \InvalidArgumentException('non-nullable asset_growth_3y_med cannot be null');
        }
        $this->container['asset_growth_3y_med'] = $asset_growth_3y_med;

        return $this;
    }

    /**
     * Gets asset_growth_5y
     *
     * @return float|null
     */
    public function getAssetGrowth5y()
    {
        return $this->container['asset_growth_5y'];
    }

    /**
     * Sets asset_growth_5y
     *
     * @param float|null $asset_growth_5y The compounded average growth rate of total assets over the past five years, computed using loglinear regression.
     *
     * @return self
     */
    public function setAssetGrowth5y($asset_growth_5y)
    {
        if (is_null($asset_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable asset_growth_5y cannot be null');
        }
        $this->container['asset_growth_5y'] = $asset_growth_5y;

        return $this;
    }

    /**
     * Gets book_growth_10y
     *
     * @return float|null
     */
    public function getBookGrowth10y()
    {
        return $this->container['book_growth_10y'];
    }

    /**
     * Sets book_growth_10y
     *
     * @param float|null $book_growth_10y Per share value of a company based on common shareholders' equity in the company.
     *
     * @return self
     */
    public function setBookGrowth10y($book_growth_10y)
    {
        if (is_null($book_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable book_growth_10y cannot be null');
        }
        $this->container['book_growth_10y'] = $book_growth_10y;

        return $this;
    }

    /**
     * Gets book_growth_1y
     *
     * @return float|null
     */
    public function getBookGrowth1y()
    {
        return $this->container['book_growth_1y'];
    }

    /**
     * Sets book_growth_1y
     *
     * @param float|null $book_growth_1y Per share value of a company based on common shareholders' equity in the company.
     *
     * @return self
     */
    public function setBookGrowth1y($book_growth_1y)
    {
        if (is_null($book_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable book_growth_1y cannot be null');
        }
        $this->container['book_growth_1y'] = $book_growth_1y;

        return $this;
    }

    /**
     * Gets book_growth_3y
     *
     * @return float|null
     */
    public function getBookGrowth3y()
    {
        return $this->container['book_growth_3y'];
    }

    /**
     * Sets book_growth_3y
     *
     * @param float|null $book_growth_3y Per share value of a company based on common shareholders' equity in the company.
     *
     * @return self
     */
    public function setBookGrowth3y($book_growth_3y)
    {
        if (is_null($book_growth_3y)) {
            throw new \InvalidArgumentException('non-nullable book_growth_3y cannot be null');
        }
        $this->container['book_growth_3y'] = $book_growth_3y;

        return $this;
    }

    /**
     * Gets book_growth_3y_high
     *
     * @return float|null
     */
    public function getBookGrowth3yHigh()
    {
        return $this->container['book_growth_3y_high'];
    }

    /**
     * Sets book_growth_3y_high
     *
     * @param float|null $book_growth_3y_high The highest three-year compounded average book value per share growth rate over the past 10 years.
     *
     * @return self
     */
    public function setBookGrowth3yHigh($book_growth_3y_high)
    {
        if (is_null($book_growth_3y_high)) {
            throw new \InvalidArgumentException('non-nullable book_growth_3y_high cannot be null');
        }
        $this->container['book_growth_3y_high'] = $book_growth_3y_high;

        return $this;
    }

    /**
     * Gets book_growth_3y_low
     *
     * @return float|null
     */
    public function getBookGrowth3yLow()
    {
        return $this->container['book_growth_3y_low'];
    }

    /**
     * Sets book_growth_3y_low
     *
     * @param float|null $book_growth_3y_low The lowest three-year compounded average book value per share growth rate over the past 10 years.
     *
     * @return self
     */
    public function setBookGrowth3yLow($book_growth_3y_low)
    {
        if (is_null($book_growth_3y_low)) {
            throw new \InvalidArgumentException('non-nullable book_growth_3y_low cannot be null');
        }
        $this->container['book_growth_3y_low'] = $book_growth_3y_low;

        return $this;
    }

    /**
     * Gets book_growth_3y_med
     *
     * @return float|null
     */
    public function getBookGrowth3yMed()
    {
        return $this->container['book_growth_3y_med'];
    }

    /**
     * Sets book_growth_3y_med
     *
     * @param float|null $book_growth_3y_med The median three-year compounded average book value per share growth rate over the past 10 years.
     *
     * @return self
     */
    public function setBookGrowth3yMed($book_growth_3y_med)
    {
        if (is_null($book_growth_3y_med)) {
            throw new \InvalidArgumentException('non-nullable book_growth_3y_med cannot be null');
        }
        $this->container['book_growth_3y_med'] = $book_growth_3y_med;

        return $this;
    }

    /**
     * Gets book_growth_5y
     *
     * @return float|null
     */
    public function getBookGrowth5y()
    {
        return $this->container['book_growth_5y'];
    }

    /**
     * Sets book_growth_5y
     *
     * @param float|null $book_growth_5y Per share value of a company based on common shareholders' equity in the company.
     *
     * @return self
     */
    public function setBookGrowth5y($book_growth_5y)
    {
        if (is_null($book_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable book_growth_5y cannot be null');
        }
        $this->container['book_growth_5y'] = $book_growth_5y;

        return $this;
    }

    /**
     * Gets cashflow_growth_10y
     *
     * @return float|null
     */
    public function getCashflowGrowth10y()
    {
        return $this->container['cashflow_growth_10y'];
    }

    /**
     * Sets cashflow_growth_10y
     *
     * @param float|null $cashflow_growth_10y Free cash flow per share (FCF) is a measure of a company's financial flexibility that is determined by dividing free cash flow by the total number of shares outstanding.
     *
     * @return self
     */
    public function setCashflowGrowth10y($cashflow_growth_10y)
    {
        if (is_null($cashflow_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable cashflow_growth_10y cannot be null');
        }
        $this->container['cashflow_growth_10y'] = $cashflow_growth_10y;

        return $this;
    }

    /**
     * Gets cashflow_growth_1y
     *
     * @return float|null
     */
    public function getCashflowGrowth1y()
    {
        return $this->container['cashflow_growth_1y'];
    }

    /**
     * Sets cashflow_growth_1y
     *
     * @param float|null $cashflow_growth_1y Free cash flow per share (FCF) is a measure of a company's financial flexibility that is determined by dividing free cash flow by the total number of shares outstanding.
     *
     * @return self
     */
    public function setCashflowGrowth1y($cashflow_growth_1y)
    {
        if (is_null($cashflow_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable cashflow_growth_1y cannot be null');
        }
        $this->container['cashflow_growth_1y'] = $cashflow_growth_1y;

        return $this;
    }

    /**
     * Gets cashflow_growth_3y
     *
     * @return float|null
     */
    public function getCashflowGrowth3y()
    {
        return $this->container['cashflow_growth_3y'];
    }

    /**
     * Sets cashflow_growth_3y
     *
     * @param float|null $cashflow_growth_3y Free cash flow per share (FCF) is a measure of a company's financial flexibility that is determined by dividing free cash flow by the total number of shares outstanding.
     *
     * @return self
     */
    public function setCashflowGrowth3y($cashflow_growth_3y)
    {
        if (is_null($cashflow_growth_3y)) {
            throw new \InvalidArgumentException('non-nullable cashflow_growth_3y cannot be null');
        }
        $this->container['cashflow_growth_3y'] = $cashflow_growth_3y;

        return $this;
    }

    /**
     * Gets cashflow_growth_3y_high
     *
     * @return float|null
     */
    public function getCashflowGrowth3yHigh()
    {
        return $this->container['cashflow_growth_3y_high'];
    }

    /**
     * Sets cashflow_growth_3y_high
     *
     * @param float|null $cashflow_growth_3y_high Free cash flow per share (FCF) is a measure of a company's financial flexibility that is determined by dividing free cash flow by the total number of shares outstanding.
     *
     * @return self
     */
    public function setCashflowGrowth3yHigh($cashflow_growth_3y_high)
    {
        if (is_null($cashflow_growth_3y_high)) {
            throw new \InvalidArgumentException('non-nullable cashflow_growth_3y_high cannot be null');
        }
        $this->container['cashflow_growth_3y_high'] = $cashflow_growth_3y_high;

        return $this;
    }

    /**
     * Gets cashflow_growth_3y_low
     *
     * @return float|null
     */
    public function getCashflowGrowth3yLow()
    {
        return $this->container['cashflow_growth_3y_low'];
    }

    /**
     * Sets cashflow_growth_3y_low
     *
     * @param float|null $cashflow_growth_3y_low Free cash flow per share (FCF) is a measure of a company's financial flexibility that is determined by dividing free cash flow by the total number of shares outstanding.
     *
     * @return self
     */
    public function setCashflowGrowth3yLow($cashflow_growth_3y_low)
    {
        if (is_null($cashflow_growth_3y_low)) {
            throw new \InvalidArgumentException('non-nullable cashflow_growth_3y_low cannot be null');
        }
        $this->container['cashflow_growth_3y_low'] = $cashflow_growth_3y_low;

        return $this;
    }

    /**
     * Gets cashflow_growth_3y_med
     *
     * @return float|null
     */
    public function getCashflowGrowth3yMed()
    {
        return $this->container['cashflow_growth_3y_med'];
    }

    /**
     * Sets cashflow_growth_3y_med
     *
     * @param float|null $cashflow_growth_3y_med Free cash flow per share (FCF) is a measure of a company's financial flexibility that is determined by dividing free cash flow by the total number of shares outstanding.
     *
     * @return self
     */
    public function setCashflowGrowth3yMed($cashflow_growth_3y_med)
    {
        if (is_null($cashflow_growth_3y_med)) {
            throw new \InvalidArgumentException('non-nullable cashflow_growth_3y_med cannot be null');
        }
        $this->container['cashflow_growth_3y_med'] = $cashflow_growth_3y_med;

        return $this;
    }

    /**
     * Gets cashflow_growth_5y
     *
     * @return float|null
     */
    public function getCashflowGrowth5y()
    {
        return $this->container['cashflow_growth_5y'];
    }

    /**
     * Sets cashflow_growth_5y
     *
     * @param float|null $cashflow_growth_5y Free cash flow per share (FCF) is a measure of a company's financial flexibility that is determined by dividing free cash flow by the total number of shares outstanding.
     *
     * @return self
     */
    public function setCashflowGrowth5y($cashflow_growth_5y)
    {
        if (is_null($cashflow_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable cashflow_growth_5y cannot be null');
        }
        $this->container['cashflow_growth_5y'] = $cashflow_growth_5y;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_book_growth_10y
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedBookGrowth10y()
    {
        return $this->container['cyclically_adjusted_book_growth_10y'];
    }

    /**
     * Sets cyclically_adjusted_book_growth_10y
     *
     * @param float|null $cyclically_adjusted_book_growth_10y cyclically_adjusted_book_growth_10y
     *
     * @return self
     */
    public function setCyclicallyAdjustedBookGrowth10y($cyclically_adjusted_book_growth_10y)
    {
        if (is_null($cyclically_adjusted_book_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_book_growth_10y cannot be null');
        }
        $this->container['cyclically_adjusted_book_growth_10y'] = $cyclically_adjusted_book_growth_10y;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_book_growth_1y
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedBookGrowth1y()
    {
        return $this->container['cyclically_adjusted_book_growth_1y'];
    }

    /**
     * Sets cyclically_adjusted_book_growth_1y
     *
     * @param float|null $cyclically_adjusted_book_growth_1y cyclically_adjusted_book_growth_1y
     *
     * @return self
     */
    public function setCyclicallyAdjustedBookGrowth1y($cyclically_adjusted_book_growth_1y)
    {
        if (is_null($cyclically_adjusted_book_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_book_growth_1y cannot be null');
        }
        $this->container['cyclically_adjusted_book_growth_1y'] = $cyclically_adjusted_book_growth_1y;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_book_growth_3y
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedBookGrowth3y()
    {
        return $this->container['cyclically_adjusted_book_growth_3y'];
    }

    /**
     * Sets cyclically_adjusted_book_growth_3y
     *
     * @param float|null $cyclically_adjusted_book_growth_3y cyclically_adjusted_book_growth_3y
     *
     * @return self
     */
    public function setCyclicallyAdjustedBookGrowth3y($cyclically_adjusted_book_growth_3y)
    {
        if (is_null($cyclically_adjusted_book_growth_3y)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_book_growth_3y cannot be null');
        }
        $this->container['cyclically_adjusted_book_growth_3y'] = $cyclically_adjusted_book_growth_3y;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_book_growth_3y_high
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedBookGrowth3yHigh()
    {
        return $this->container['cyclically_adjusted_book_growth_3y_high'];
    }

    /**
     * Sets cyclically_adjusted_book_growth_3y_high
     *
     * @param float|null $cyclically_adjusted_book_growth_3y_high cyclically_adjusted_book_growth_3y_high
     *
     * @return self
     */
    public function setCyclicallyAdjustedBookGrowth3yHigh($cyclically_adjusted_book_growth_3y_high)
    {
        if (is_null($cyclically_adjusted_book_growth_3y_high)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_book_growth_3y_high cannot be null');
        }
        $this->container['cyclically_adjusted_book_growth_3y_high'] = $cyclically_adjusted_book_growth_3y_high;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_book_growth_3y_low
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedBookGrowth3yLow()
    {
        return $this->container['cyclically_adjusted_book_growth_3y_low'];
    }

    /**
     * Sets cyclically_adjusted_book_growth_3y_low
     *
     * @param float|null $cyclically_adjusted_book_growth_3y_low cyclically_adjusted_book_growth_3y_low
     *
     * @return self
     */
    public function setCyclicallyAdjustedBookGrowth3yLow($cyclically_adjusted_book_growth_3y_low)
    {
        if (is_null($cyclically_adjusted_book_growth_3y_low)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_book_growth_3y_low cannot be null');
        }
        $this->container['cyclically_adjusted_book_growth_3y_low'] = $cyclically_adjusted_book_growth_3y_low;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_book_growth_3y_med
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedBookGrowth3yMed()
    {
        return $this->container['cyclically_adjusted_book_growth_3y_med'];
    }

    /**
     * Sets cyclically_adjusted_book_growth_3y_med
     *
     * @param float|null $cyclically_adjusted_book_growth_3y_med cyclically_adjusted_book_growth_3y_med
     *
     * @return self
     */
    public function setCyclicallyAdjustedBookGrowth3yMed($cyclically_adjusted_book_growth_3y_med)
    {
        if (is_null($cyclically_adjusted_book_growth_3y_med)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_book_growth_3y_med cannot be null');
        }
        $this->container['cyclically_adjusted_book_growth_3y_med'] = $cyclically_adjusted_book_growth_3y_med;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_book_growth_5y
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedBookGrowth5y()
    {
        return $this->container['cyclically_adjusted_book_growth_5y'];
    }

    /**
     * Sets cyclically_adjusted_book_growth_5y
     *
     * @param float|null $cyclically_adjusted_book_growth_5y cyclically_adjusted_book_growth_5y
     *
     * @return self
     */
    public function setCyclicallyAdjustedBookGrowth5y($cyclically_adjusted_book_growth_5y)
    {
        if (is_null($cyclically_adjusted_book_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_book_growth_5y cannot be null');
        }
        $this->container['cyclically_adjusted_book_growth_5y'] = $cyclically_adjusted_book_growth_5y;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_fcf_growth_10y
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedFcfGrowth10y()
    {
        return $this->container['cyclically_adjusted_fcf_growth_10y'];
    }

    /**
     * Sets cyclically_adjusted_fcf_growth_10y
     *
     * @param float|null $cyclically_adjusted_fcf_growth_10y cyclically_adjusted_fcf_growth_10y
     *
     * @return self
     */
    public function setCyclicallyAdjustedFcfGrowth10y($cyclically_adjusted_fcf_growth_10y)
    {
        if (is_null($cyclically_adjusted_fcf_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_fcf_growth_10y cannot be null');
        }
        $this->container['cyclically_adjusted_fcf_growth_10y'] = $cyclically_adjusted_fcf_growth_10y;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_fcf_growth_1y
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedFcfGrowth1y()
    {
        return $this->container['cyclically_adjusted_fcf_growth_1y'];
    }

    /**
     * Sets cyclically_adjusted_fcf_growth_1y
     *
     * @param float|null $cyclically_adjusted_fcf_growth_1y cyclically_adjusted_fcf_growth_1y
     *
     * @return self
     */
    public function setCyclicallyAdjustedFcfGrowth1y($cyclically_adjusted_fcf_growth_1y)
    {
        if (is_null($cyclically_adjusted_fcf_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_fcf_growth_1y cannot be null');
        }
        $this->container['cyclically_adjusted_fcf_growth_1y'] = $cyclically_adjusted_fcf_growth_1y;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_fcf_growth_3y
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedFcfGrowth3y()
    {
        return $this->container['cyclically_adjusted_fcf_growth_3y'];
    }

    /**
     * Sets cyclically_adjusted_fcf_growth_3y
     *
     * @param float|null $cyclically_adjusted_fcf_growth_3y cyclically_adjusted_fcf_growth_3y
     *
     * @return self
     */
    public function setCyclicallyAdjustedFcfGrowth3y($cyclically_adjusted_fcf_growth_3y)
    {
        if (is_null($cyclically_adjusted_fcf_growth_3y)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_fcf_growth_3y cannot be null');
        }
        $this->container['cyclically_adjusted_fcf_growth_3y'] = $cyclically_adjusted_fcf_growth_3y;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_fcf_growth_3y_high
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedFcfGrowth3yHigh()
    {
        return $this->container['cyclically_adjusted_fcf_growth_3y_high'];
    }

    /**
     * Sets cyclically_adjusted_fcf_growth_3y_high
     *
     * @param float|null $cyclically_adjusted_fcf_growth_3y_high cyclically_adjusted_fcf_growth_3y_high
     *
     * @return self
     */
    public function setCyclicallyAdjustedFcfGrowth3yHigh($cyclically_adjusted_fcf_growth_3y_high)
    {
        if (is_null($cyclically_adjusted_fcf_growth_3y_high)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_fcf_growth_3y_high cannot be null');
        }
        $this->container['cyclically_adjusted_fcf_growth_3y_high'] = $cyclically_adjusted_fcf_growth_3y_high;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_fcf_growth_3y_low
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedFcfGrowth3yLow()
    {
        return $this->container['cyclically_adjusted_fcf_growth_3y_low'];
    }

    /**
     * Sets cyclically_adjusted_fcf_growth_3y_low
     *
     * @param float|null $cyclically_adjusted_fcf_growth_3y_low cyclically_adjusted_fcf_growth_3y_low
     *
     * @return self
     */
    public function setCyclicallyAdjustedFcfGrowth3yLow($cyclically_adjusted_fcf_growth_3y_low)
    {
        if (is_null($cyclically_adjusted_fcf_growth_3y_low)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_fcf_growth_3y_low cannot be null');
        }
        $this->container['cyclically_adjusted_fcf_growth_3y_low'] = $cyclically_adjusted_fcf_growth_3y_low;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_fcf_growth_3y_med
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedFcfGrowth3yMed()
    {
        return $this->container['cyclically_adjusted_fcf_growth_3y_med'];
    }

    /**
     * Sets cyclically_adjusted_fcf_growth_3y_med
     *
     * @param float|null $cyclically_adjusted_fcf_growth_3y_med cyclically_adjusted_fcf_growth_3y_med
     *
     * @return self
     */
    public function setCyclicallyAdjustedFcfGrowth3yMed($cyclically_adjusted_fcf_growth_3y_med)
    {
        if (is_null($cyclically_adjusted_fcf_growth_3y_med)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_fcf_growth_3y_med cannot be null');
        }
        $this->container['cyclically_adjusted_fcf_growth_3y_med'] = $cyclically_adjusted_fcf_growth_3y_med;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_fcf_growth_5y
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedFcfGrowth5y()
    {
        return $this->container['cyclically_adjusted_fcf_growth_5y'];
    }

    /**
     * Sets cyclically_adjusted_fcf_growth_5y
     *
     * @param float|null $cyclically_adjusted_fcf_growth_5y cyclically_adjusted_fcf_growth_5y
     *
     * @return self
     */
    public function setCyclicallyAdjustedFcfGrowth5y($cyclically_adjusted_fcf_growth_5y)
    {
        if (is_null($cyclically_adjusted_fcf_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_fcf_growth_5y cannot be null');
        }
        $this->container['cyclically_adjusted_fcf_growth_5y'] = $cyclically_adjusted_fcf_growth_5y;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_rvn_growth_10y
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedRvnGrowth10y()
    {
        return $this->container['cyclically_adjusted_rvn_growth_10y'];
    }

    /**
     * Sets cyclically_adjusted_rvn_growth_10y
     *
     * @param float|null $cyclically_adjusted_rvn_growth_10y cyclically_adjusted_rvn_growth_10y
     *
     * @return self
     */
    public function setCyclicallyAdjustedRvnGrowth10y($cyclically_adjusted_rvn_growth_10y)
    {
        if (is_null($cyclically_adjusted_rvn_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_rvn_growth_10y cannot be null');
        }
        $this->container['cyclically_adjusted_rvn_growth_10y'] = $cyclically_adjusted_rvn_growth_10y;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_rvn_growth_1y
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedRvnGrowth1y()
    {
        return $this->container['cyclically_adjusted_rvn_growth_1y'];
    }

    /**
     * Sets cyclically_adjusted_rvn_growth_1y
     *
     * @param float|null $cyclically_adjusted_rvn_growth_1y cyclically_adjusted_rvn_growth_1y
     *
     * @return self
     */
    public function setCyclicallyAdjustedRvnGrowth1y($cyclically_adjusted_rvn_growth_1y)
    {
        if (is_null($cyclically_adjusted_rvn_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_rvn_growth_1y cannot be null');
        }
        $this->container['cyclically_adjusted_rvn_growth_1y'] = $cyclically_adjusted_rvn_growth_1y;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_rvn_growth_3y
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedRvnGrowth3y()
    {
        return $this->container['cyclically_adjusted_rvn_growth_3y'];
    }

    /**
     * Sets cyclically_adjusted_rvn_growth_3y
     *
     * @param float|null $cyclically_adjusted_rvn_growth_3y cyclically_adjusted_rvn_growth_3y
     *
     * @return self
     */
    public function setCyclicallyAdjustedRvnGrowth3y($cyclically_adjusted_rvn_growth_3y)
    {
        if (is_null($cyclically_adjusted_rvn_growth_3y)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_rvn_growth_3y cannot be null');
        }
        $this->container['cyclically_adjusted_rvn_growth_3y'] = $cyclically_adjusted_rvn_growth_3y;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_rvn_growth_3y_high
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedRvnGrowth3yHigh()
    {
        return $this->container['cyclically_adjusted_rvn_growth_3y_high'];
    }

    /**
     * Sets cyclically_adjusted_rvn_growth_3y_high
     *
     * @param float|null $cyclically_adjusted_rvn_growth_3y_high cyclically_adjusted_rvn_growth_3y_high
     *
     * @return self
     */
    public function setCyclicallyAdjustedRvnGrowth3yHigh($cyclically_adjusted_rvn_growth_3y_high)
    {
        if (is_null($cyclically_adjusted_rvn_growth_3y_high)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_rvn_growth_3y_high cannot be null');
        }
        $this->container['cyclically_adjusted_rvn_growth_3y_high'] = $cyclically_adjusted_rvn_growth_3y_high;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_rvn_growth_3y_low
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedRvnGrowth3yLow()
    {
        return $this->container['cyclically_adjusted_rvn_growth_3y_low'];
    }

    /**
     * Sets cyclically_adjusted_rvn_growth_3y_low
     *
     * @param float|null $cyclically_adjusted_rvn_growth_3y_low cyclically_adjusted_rvn_growth_3y_low
     *
     * @return self
     */
    public function setCyclicallyAdjustedRvnGrowth3yLow($cyclically_adjusted_rvn_growth_3y_low)
    {
        if (is_null($cyclically_adjusted_rvn_growth_3y_low)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_rvn_growth_3y_low cannot be null');
        }
        $this->container['cyclically_adjusted_rvn_growth_3y_low'] = $cyclically_adjusted_rvn_growth_3y_low;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_rvn_growth_3y_med
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedRvnGrowth3yMed()
    {
        return $this->container['cyclically_adjusted_rvn_growth_3y_med'];
    }

    /**
     * Sets cyclically_adjusted_rvn_growth_3y_med
     *
     * @param float|null $cyclically_adjusted_rvn_growth_3y_med cyclically_adjusted_rvn_growth_3y_med
     *
     * @return self
     */
    public function setCyclicallyAdjustedRvnGrowth3yMed($cyclically_adjusted_rvn_growth_3y_med)
    {
        if (is_null($cyclically_adjusted_rvn_growth_3y_med)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_rvn_growth_3y_med cannot be null');
        }
        $this->container['cyclically_adjusted_rvn_growth_3y_med'] = $cyclically_adjusted_rvn_growth_3y_med;

        return $this;
    }

    /**
     * Gets cyclically_adjusted_rvn_growth_5y
     *
     * @return float|null
     */
    public function getCyclicallyAdjustedRvnGrowth5y()
    {
        return $this->container['cyclically_adjusted_rvn_growth_5y'];
    }

    /**
     * Sets cyclically_adjusted_rvn_growth_5y
     *
     * @param float|null $cyclically_adjusted_rvn_growth_5y cyclically_adjusted_rvn_growth_5y
     *
     * @return self
     */
    public function setCyclicallyAdjustedRvnGrowth5y($cyclically_adjusted_rvn_growth_5y)
    {
        if (is_null($cyclically_adjusted_rvn_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable cyclically_adjusted_rvn_growth_5y cannot be null');
        }
        $this->container['cyclically_adjusted_rvn_growth_5y'] = $cyclically_adjusted_rvn_growth_5y;

        return $this;
    }

    /**
     * Gets debt2rev_growth_10y
     *
     * @return float|null
     */
    public function getDebt2revGrowth10y()
    {
        return $this->container['debt2rev_growth_10y'];
    }

    /**
     * Sets debt2rev_growth_10y
     *
     * @param float|null $debt2rev_growth_10y The compounded average long-term debt to revenue growth rate over the past 10 years, computed using loglinear regression.
     *
     * @return self
     */
    public function setDebt2revGrowth10y($debt2rev_growth_10y)
    {
        if (is_null($debt2rev_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable debt2rev_growth_10y cannot be null');
        }
        $this->container['debt2rev_growth_10y'] = $debt2rev_growth_10y;

        return $this;
    }

    /**
     * Gets debt2rev_growth_1y
     *
     * @return float|null
     */
    public function getDebt2revGrowth1y()
    {
        return $this->container['debt2rev_growth_1y'];
    }

    /**
     * Sets debt2rev_growth_1y
     *
     * @param float|null $debt2rev_growth_1y The compounded average long-term debt to revenue growth rate over the past year.
     *
     * @return self
     */
    public function setDebt2revGrowth1y($debt2rev_growth_1y)
    {
        if (is_null($debt2rev_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable debt2rev_growth_1y cannot be null');
        }
        $this->container['debt2rev_growth_1y'] = $debt2rev_growth_1y;

        return $this;
    }

    /**
     * Gets debt2rev_growth_5y
     *
     * @return float|null
     */
    public function getDebt2revGrowth5y()
    {
        return $this->container['debt2rev_growth_5y'];
    }

    /**
     * Sets debt2rev_growth_5y
     *
     * @param float|null $debt2rev_growth_5y The compounded average long-term debt to revenue growth rate over the past five years, computed using loglinear regression.
     *
     * @return self
     */
    public function setDebt2revGrowth5y($debt2rev_growth_5y)
    {
        if (is_null($debt2rev_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable debt2rev_growth_5y cannot be null');
        }
        $this->container['debt2rev_growth_5y'] = $debt2rev_growth_5y;

        return $this;
    }

    /**
     * Gets dividend_growth_10y
     *
     * @return float|null
     */
    public function getDividendGrowth10y()
    {
        return $this->container['dividend_growth_10y'];
    }

    /**
     * Sets dividend_growth_10y
     *
     * @param float|null $dividend_growth_10y Dividend per share (DPS) is the sum of declared dividends issued by a company for every ordinary share outstanding.
     *
     * @return self
     */
    public function setDividendGrowth10y($dividend_growth_10y)
    {
        if (is_null($dividend_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable dividend_growth_10y cannot be null');
        }
        $this->container['dividend_growth_10y'] = $dividend_growth_10y;

        return $this;
    }

    /**
     * Gets dividend_growth_1y
     *
     * @return float|null
     */
    public function getDividendGrowth1y()
    {
        return $this->container['dividend_growth_1y'];
    }

    /**
     * Sets dividend_growth_1y
     *
     * @param float|null $dividend_growth_1y Dividend per share (DPS) is the sum of declared dividends issued by a company for every ordinary share outstanding.
     *
     * @return self
     */
    public function setDividendGrowth1y($dividend_growth_1y)
    {
        if (is_null($dividend_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable dividend_growth_1y cannot be null');
        }
        $this->container['dividend_growth_1y'] = $dividend_growth_1y;

        return $this;
    }

    /**
     * Gets dividend_growth_3y
     *
     * @return float|null
     */
    public function getDividendGrowth3y()
    {
        return $this->container['dividend_growth_3y'];
    }

    /**
     * Sets dividend_growth_3y
     *
     * @param float|null $dividend_growth_3y Dividend per share (DPS) is the sum of declared dividends issued by a company for every ordinary share outstanding.
     *
     * @return self
     */
    public function setDividendGrowth3y($dividend_growth_3y)
    {
        if (is_null($dividend_growth_3y)) {
            throw new \InvalidArgumentException('non-nullable dividend_growth_3y cannot be null');
        }
        $this->container['dividend_growth_3y'] = $dividend_growth_3y;

        return $this;
    }

    /**
     * Gets dividend_growth_3y_high
     *
     * @return float|null
     */
    public function getDividendGrowth3yHigh()
    {
        return $this->container['dividend_growth_3y_high'];
    }

    /**
     * Sets dividend_growth_3y_high
     *
     * @param float|null $dividend_growth_3y_high Dividend per share (DPS) is the sum of declared dividends issued by a company for every ordinary share outstanding.
     *
     * @return self
     */
    public function setDividendGrowth3yHigh($dividend_growth_3y_high)
    {
        if (is_null($dividend_growth_3y_high)) {
            throw new \InvalidArgumentException('non-nullable dividend_growth_3y_high cannot be null');
        }
        $this->container['dividend_growth_3y_high'] = $dividend_growth_3y_high;

        return $this;
    }

    /**
     * Gets dividend_growth_3y_low
     *
     * @return float|null
     */
    public function getDividendGrowth3yLow()
    {
        return $this->container['dividend_growth_3y_low'];
    }

    /**
     * Sets dividend_growth_3y_low
     *
     * @param float|null $dividend_growth_3y_low Dividend per share (DPS) is the sum of declared dividends issued by a company for every ordinary share outstanding.
     *
     * @return self
     */
    public function setDividendGrowth3yLow($dividend_growth_3y_low)
    {
        if (is_null($dividend_growth_3y_low)) {
            throw new \InvalidArgumentException('non-nullable dividend_growth_3y_low cannot be null');
        }
        $this->container['dividend_growth_3y_low'] = $dividend_growth_3y_low;

        return $this;
    }

    /**
     * Gets dividend_growth_3y_med
     *
     * @return float|null
     */
    public function getDividendGrowth3yMed()
    {
        return $this->container['dividend_growth_3y_med'];
    }

    /**
     * Sets dividend_growth_3y_med
     *
     * @param float|null $dividend_growth_3y_med Dividend per share (DPS) is the sum of declared dividends issued by a company for every ordinary share outstanding.
     *
     * @return self
     */
    public function setDividendGrowth3yMed($dividend_growth_3y_med)
    {
        if (is_null($dividend_growth_3y_med)) {
            throw new \InvalidArgumentException('non-nullable dividend_growth_3y_med cannot be null');
        }
        $this->container['dividend_growth_3y_med'] = $dividend_growth_3y_med;

        return $this;
    }

    /**
     * Gets dividend_growth_5y
     *
     * @return float|null
     */
    public function getDividendGrowth5y()
    {
        return $this->container['dividend_growth_5y'];
    }

    /**
     * Sets dividend_growth_5y
     *
     * @param float|null $dividend_growth_5y Dividend per share (DPS) is the sum of declared dividends issued by a company for every ordinary share outstanding.
     *
     * @return self
     */
    public function setDividendGrowth5y($dividend_growth_5y)
    {
        if (is_null($dividend_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable dividend_growth_5y cannot be null');
        }
        $this->container['dividend_growth_5y'] = $dividend_growth_5y;

        return $this;
    }

    /**
     * Gets e10_growth_10y
     *
     * @return float|null
     */
    public function getE10Growth10y()
    {
        return $this->container['e10_growth_10y'];
    }

    /**
     * Sets e10_growth_10y
     *
     * @param float|null $e10_growth_10y The compounded average growth rate of E10 over the past ten years, computed using loglinear regression.
     *
     * @return self
     */
    public function setE10Growth10y($e10_growth_10y)
    {
        if (is_null($e10_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable e10_growth_10y cannot be null');
        }
        $this->container['e10_growth_10y'] = $e10_growth_10y;

        return $this;
    }

    /**
     * Gets e10_growth_1y
     *
     * @return float|null
     */
    public function getE10Growth1y()
    {
        return $this->container['e10_growth_1y'];
    }

    /**
     * Sets e10_growth_1y
     *
     * @param float|null $e10_growth_1y The average growth rate of E10 over the past year.
     *
     * @return self
     */
    public function setE10Growth1y($e10_growth_1y)
    {
        if (is_null($e10_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable e10_growth_1y cannot be null');
        }
        $this->container['e10_growth_1y'] = $e10_growth_1y;

        return $this;
    }

    /**
     * Gets e10_growth_3y
     *
     * @return float|null
     */
    public function getE10Growth3y()
    {
        return $this->container['e10_growth_3y'];
    }

    /**
     * Sets e10_growth_3y
     *
     * @param float|null $e10_growth_3y The compounded average growth rate of E10 over the past three years.
     *
     * @return self
     */
    public function setE10Growth3y($e10_growth_3y)
    {
        if (is_null($e10_growth_3y)) {
            throw new \InvalidArgumentException('non-nullable e10_growth_3y cannot be null');
        }
        $this->container['e10_growth_3y'] = $e10_growth_3y;

        return $this;
    }

    /**
     * Gets e10_growth_3y_high
     *
     * @return float|null
     */
    public function getE10Growth3yHigh()
    {
        return $this->container['e10_growth_3y_high'];
    }

    /**
     * Sets e10_growth_3y_high
     *
     * @param float|null $e10_growth_3y_high The highest three-year compounded average E10 growth rate over the past 10 years.
     *
     * @return self
     */
    public function setE10Growth3yHigh($e10_growth_3y_high)
    {
        if (is_null($e10_growth_3y_high)) {
            throw new \InvalidArgumentException('non-nullable e10_growth_3y_high cannot be null');
        }
        $this->container['e10_growth_3y_high'] = $e10_growth_3y_high;

        return $this;
    }

    /**
     * Gets e10_growth_3y_low
     *
     * @return float|null
     */
    public function getE10Growth3yLow()
    {
        return $this->container['e10_growth_3y_low'];
    }

    /**
     * Sets e10_growth_3y_low
     *
     * @param float|null $e10_growth_3y_low The median three-year compounded average E10 growth rate over the past 10 years.
     *
     * @return self
     */
    public function setE10Growth3yLow($e10_growth_3y_low)
    {
        if (is_null($e10_growth_3y_low)) {
            throw new \InvalidArgumentException('non-nullable e10_growth_3y_low cannot be null');
        }
        $this->container['e10_growth_3y_low'] = $e10_growth_3y_low;

        return $this;
    }

    /**
     * Gets e10_growth_3y_med
     *
     * @return float|null
     */
    public function getE10Growth3yMed()
    {
        return $this->container['e10_growth_3y_med'];
    }

    /**
     * Sets e10_growth_3y_med
     *
     * @param float|null $e10_growth_3y_med The lowest three-year compounded average E10 growth rate over the past 10 years.
     *
     * @return self
     */
    public function setE10Growth3yMed($e10_growth_3y_med)
    {
        if (is_null($e10_growth_3y_med)) {
            throw new \InvalidArgumentException('non-nullable e10_growth_3y_med cannot be null');
        }
        $this->container['e10_growth_3y_med'] = $e10_growth_3y_med;

        return $this;
    }

    /**
     * Gets e10_growth_5y
     *
     * @return float|null
     */
    public function getE10Growth5y()
    {
        return $this->container['e10_growth_5y'];
    }

    /**
     * Sets e10_growth_5y
     *
     * @param float|null $e10_growth_5y The compounded average growth rate of E10 over the past five years, computed using loglinear regression.
     *
     * @return self
     */
    public function setE10Growth5y($e10_growth_5y)
    {
        if (is_null($e10_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable e10_growth_5y cannot be null');
        }
        $this->container['e10_growth_5y'] = $e10_growth_5y;

        return $this;
    }

    /**
     * Gets earning_growth_10y
     *
     * @return float|null
     */
    public function getEarningGrowth10y()
    {
        return $this->container['earning_growth_10y'];
    }

    /**
     * Sets earning_growth_10y
     *
     * @param float|null $earning_growth_10y The compounded average growth rate of Earnings Per Share without Non-Recurring Items over the past ten years, computed using loglinear regression.
     *
     * @return self
     */
    public function setEarningGrowth10y($earning_growth_10y)
    {
        if (is_null($earning_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable earning_growth_10y cannot be null');
        }
        $this->container['earning_growth_10y'] = $earning_growth_10y;

        return $this;
    }

    /**
     * Gets earning_growth_1y
     *
     * @return float|null
     */
    public function getEarningGrowth1y()
    {
        return $this->container['earning_growth_1y'];
    }

    /**
     * Sets earning_growth_1y
     *
     * @param float|null $earning_growth_1y The average growth rate of Earnings Per Share without Non-Recurring Items over the past year.
     *
     * @return self
     */
    public function setEarningGrowth1y($earning_growth_1y)
    {
        if (is_null($earning_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable earning_growth_1y cannot be null');
        }
        $this->container['earning_growth_1y'] = $earning_growth_1y;

        return $this;
    }

    /**
     * Gets earning_growth_3y
     *
     * @return float|null
     */
    public function getEarningGrowth3y()
    {
        return $this->container['earning_growth_3y'];
    }

    /**
     * Sets earning_growth_3y
     *
     * @param float|null $earning_growth_3y The compounded average growth rate of Earnings Per Share without Non-Recurring Items over the past three years.
     *
     * @return self
     */
    public function setEarningGrowth3y($earning_growth_3y)
    {
        if (is_null($earning_growth_3y)) {
            throw new \InvalidArgumentException('non-nullable earning_growth_3y cannot be null');
        }
        $this->container['earning_growth_3y'] = $earning_growth_3y;

        return $this;
    }

    /**
     * Gets earning_growth_3y_high
     *
     * @return float|null
     */
    public function getEarningGrowth3yHigh()
    {
        return $this->container['earning_growth_3y_high'];
    }

    /**
     * Sets earning_growth_3y_high
     *
     * @param float|null $earning_growth_3y_high The highest value of 3-Year EPS without NRI Growth Rate in history.
     *
     * @return self
     */
    public function setEarningGrowth3yHigh($earning_growth_3y_high)
    {
        if (is_null($earning_growth_3y_high)) {
            throw new \InvalidArgumentException('non-nullable earning_growth_3y_high cannot be null');
        }
        $this->container['earning_growth_3y_high'] = $earning_growth_3y_high;

        return $this;
    }

    /**
     * Gets earning_growth_3y_low
     *
     * @return float|null
     */
    public function getEarningGrowth3yLow()
    {
        return $this->container['earning_growth_3y_low'];
    }

    /**
     * Sets earning_growth_3y_low
     *
     * @param float|null $earning_growth_3y_low The lowest value of 3-Year EPS without NRI Growth Rate in history.
     *
     * @return self
     */
    public function setEarningGrowth3yLow($earning_growth_3y_low)
    {
        if (is_null($earning_growth_3y_low)) {
            throw new \InvalidArgumentException('non-nullable earning_growth_3y_low cannot be null');
        }
        $this->container['earning_growth_3y_low'] = $earning_growth_3y_low;

        return $this;
    }

    /**
     * Gets earning_growth_3y_med
     *
     * @return float|null
     */
    public function getEarningGrowth3yMed()
    {
        return $this->container['earning_growth_3y_med'];
    }

    /**
     * Sets earning_growth_3y_med
     *
     * @param float|null $earning_growth_3y_med The median value of 3-Year EPS without NRI Growth Rate in history.
     *
     * @return self
     */
    public function setEarningGrowth3yMed($earning_growth_3y_med)
    {
        if (is_null($earning_growth_3y_med)) {
            throw new \InvalidArgumentException('non-nullable earning_growth_3y_med cannot be null');
        }
        $this->container['earning_growth_3y_med'] = $earning_growth_3y_med;

        return $this;
    }

    /**
     * Gets earning_growth_5y
     *
     * @return float|null
     */
    public function getEarningGrowth5y()
    {
        return $this->container['earning_growth_5y'];
    }

    /**
     * Sets earning_growth_5y
     *
     * @param float|null $earning_growth_5y The compounded average growth rate of Earnings Per Share without Non-Recurring Items over the past five years, computed using loglinear regression.
     *
     * @return self
     */
    public function setEarningGrowth5y($earning_growth_5y)
    {
        if (is_null($earning_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable earning_growth_5y cannot be null');
        }
        $this->container['earning_growth_5y'] = $earning_growth_5y;

        return $this;
    }

    /**
     * Gets earning_growth_5y_est
     *
     * @return float|null
     */
    public function getEarningGrowth5yEst()
    {
        return $this->container['earning_growth_5y_est'];
    }

    /**
     * Sets earning_growth_5y_est
     *
     * @param float|null $earning_growth_5y_est The expected earnings per share without nri growth rate for the next 3-5 years.
     *
     * @return self
     */
    public function setEarningGrowth5yEst($earning_growth_5y_est)
    {
        if (is_null($earning_growth_5y_est)) {
            throw new \InvalidArgumentException('non-nullable earning_growth_5y_est cannot be null');
        }
        $this->container['earning_growth_5y_est'] = $earning_growth_5y_est;

        return $this;
    }

    /**
     * Gets ebit_growth_10y
     *
     * @return float|null
     */
    public function getEbitGrowth10y()
    {
        return $this->container['ebit_growth_10y'];
    }

    /**
     * Sets ebit_growth_10y
     *
     * @param float|null $ebit_growth_10y The compounded average growth rate of EBIT over the past 10 years, computed using loglinear regression.
     *
     * @return self
     */
    public function setEbitGrowth10y($ebit_growth_10y)
    {
        if (is_null($ebit_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable ebit_growth_10y cannot be null');
        }
        $this->container['ebit_growth_10y'] = $ebit_growth_10y;

        return $this;
    }

    /**
     * Gets ebit_growth_1y
     *
     * @return float|null
     */
    public function getEbitGrowth1y()
    {
        return $this->container['ebit_growth_1y'];
    }

    /**
     * Sets ebit_growth_1y
     *
     * @param float|null $ebit_growth_1y The compounded average growth rate of EBIT over the past year.
     *
     * @return self
     */
    public function setEbitGrowth1y($ebit_growth_1y)
    {
        if (is_null($ebit_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable ebit_growth_1y cannot be null');
        }
        $this->container['ebit_growth_1y'] = $ebit_growth_1y;

        return $this;
    }

    /**
     * Gets ebit_growth_3y
     *
     * @return float|null
     */
    public function getEbitGrowth3y()
    {
        return $this->container['ebit_growth_3y'];
    }

    /**
     * Sets ebit_growth_3y
     *
     * @param float|null $ebit_growth_3y The compounded average growth rate of EBIT over the past three years.
     *
     * @return self
     */
    public function setEbitGrowth3y($ebit_growth_3y)
    {
        if (is_null($ebit_growth_3y)) {
            throw new \InvalidArgumentException('non-nullable ebit_growth_3y cannot be null');
        }
        $this->container['ebit_growth_3y'] = $ebit_growth_3y;

        return $this;
    }

    /**
     * Gets ebit_growth_3y_high
     *
     * @return float|null
     */
    public function getEbitGrowth3yHigh()
    {
        return $this->container['ebit_growth_3y_high'];
    }

    /**
     * Sets ebit_growth_3y_high
     *
     * @param float|null $ebit_growth_3y_high The highest three-year compounded average EBIT growth rate over the past 10 years.
     *
     * @return self
     */
    public function setEbitGrowth3yHigh($ebit_growth_3y_high)
    {
        if (is_null($ebit_growth_3y_high)) {
            throw new \InvalidArgumentException('non-nullable ebit_growth_3y_high cannot be null');
        }
        $this->container['ebit_growth_3y_high'] = $ebit_growth_3y_high;

        return $this;
    }

    /**
     * Gets ebit_growth_3y_low
     *
     * @return float|null
     */
    public function getEbitGrowth3yLow()
    {
        return $this->container['ebit_growth_3y_low'];
    }

    /**
     * Sets ebit_growth_3y_low
     *
     * @param float|null $ebit_growth_3y_low The lowest three-year compounded average EBIT growth rate over the past 10 years.
     *
     * @return self
     */
    public function setEbitGrowth3yLow($ebit_growth_3y_low)
    {
        if (is_null($ebit_growth_3y_low)) {
            throw new \InvalidArgumentException('non-nullable ebit_growth_3y_low cannot be null');
        }
        $this->container['ebit_growth_3y_low'] = $ebit_growth_3y_low;

        return $this;
    }

    /**
     * Gets ebit_growth_3y_med
     *
     * @return float|null
     */
    public function getEbitGrowth3yMed()
    {
        return $this->container['ebit_growth_3y_med'];
    }

    /**
     * Sets ebit_growth_3y_med
     *
     * @param float|null $ebit_growth_3y_med The median three-year compounded average EBIT growth rate over the past 10 years.
     *
     * @return self
     */
    public function setEbitGrowth3yMed($ebit_growth_3y_med)
    {
        if (is_null($ebit_growth_3y_med)) {
            throw new \InvalidArgumentException('non-nullable ebit_growth_3y_med cannot be null');
        }
        $this->container['ebit_growth_3y_med'] = $ebit_growth_3y_med;

        return $this;
    }

    /**
     * Gets ebit_growth_5y
     *
     * @return float|null
     */
    public function getEbitGrowth5y()
    {
        return $this->container['ebit_growth_5y'];
    }

    /**
     * Sets ebit_growth_5y
     *
     * @param float|null $ebit_growth_5y The compounded average growth rate of EBIT over the past five years, computed using loglinear regression.
     *
     * @return self
     */
    public function setEbitGrowth5y($ebit_growth_5y)
    {
        if (is_null($ebit_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable ebit_growth_5y cannot be null');
        }
        $this->container['ebit_growth_5y'] = $ebit_growth_5y;

        return $this;
    }

    /**
     * Gets ebit_q1_growth
     *
     * @return float|null
     */
    public function getEbitQ1Growth()
    {
        return $this->container['ebit_q1_growth'];
    }

    /**
     * Sets ebit_q1_growth
     *
     * @param float|null $ebit_q1_growth The year-over-year EBIT growth for the most-recent quarter
     *
     * @return self
     */
    public function setEbitQ1Growth($ebit_q1_growth)
    {
        if (is_null($ebit_q1_growth)) {
            throw new \InvalidArgumentException('non-nullable ebit_q1_growth cannot be null');
        }
        $this->container['ebit_q1_growth'] = $ebit_q1_growth;

        return $this;
    }

    /**
     * Gets ebit_q2_growth
     *
     * @return float|null
     */
    public function getEbitQ2Growth()
    {
        return $this->container['ebit_q2_growth'];
    }

    /**
     * Sets ebit_q2_growth
     *
     * @param float|null $ebit_q2_growth The year-over-year EBIT growth for the second most-recent quarter
     *
     * @return self
     */
    public function setEbitQ2Growth($ebit_q2_growth)
    {
        if (is_null($ebit_q2_growth)) {
            throw new \InvalidArgumentException('non-nullable ebit_q2_growth cannot be null');
        }
        $this->container['ebit_q2_growth'] = $ebit_q2_growth;

        return $this;
    }

    /**
     * Gets ebit_q3_growth
     *
     * @return float|null
     */
    public function getEbitQ3Growth()
    {
        return $this->container['ebit_q3_growth'];
    }

    /**
     * Sets ebit_q3_growth
     *
     * @param float|null $ebit_q3_growth The year-over-year EBIT growth for the third most-recent quarter
     *
     * @return self
     */
    public function setEbitQ3Growth($ebit_q3_growth)
    {
        if (is_null($ebit_q3_growth)) {
            throw new \InvalidArgumentException('non-nullable ebit_q3_growth cannot be null');
        }
        $this->container['ebit_q3_growth'] = $ebit_q3_growth;

        return $this;
    }

    /**
     * Gets ebit_q4_growth
     *
     * @return float|null
     */
    public function getEbitQ4Growth()
    {
        return $this->container['ebit_q4_growth'];
    }

    /**
     * Sets ebit_q4_growth
     *
     * @param float|null $ebit_q4_growth The year-over-year EBIT growth for the fourth most-recent quarter
     *
     * @return self
     */
    public function setEbitQ4Growth($ebit_q4_growth)
    {
        if (is_null($ebit_q4_growth)) {
            throw new \InvalidArgumentException('non-nullable ebit_q4_growth cannot be null');
        }
        $this->container['ebit_q4_growth'] = $ebit_q4_growth;

        return $this;
    }

    /**
     * Gets ebitda_growth_10y
     *
     * @return float|null
     */
    public function getEbitdaGrowth10y()
    {
        return $this->container['ebitda_growth_10y'];
    }

    /**
     * Sets ebitda_growth_10y
     *
     * @param float|null $ebitda_growth_10y EBITDA per Share is the amount of Earnings Before Interest, Taxes, Depreciation, and Amortization (EBITDA) per outstanding share of the company's stock.
     *
     * @return self
     */
    public function setEbitdaGrowth10y($ebitda_growth_10y)
    {
        if (is_null($ebitda_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable ebitda_growth_10y cannot be null');
        }
        $this->container['ebitda_growth_10y'] = $ebitda_growth_10y;

        return $this;
    }

    /**
     * Gets ebitda_growth_1y
     *
     * @return float|null
     */
    public function getEbitdaGrowth1y()
    {
        return $this->container['ebitda_growth_1y'];
    }

    /**
     * Sets ebitda_growth_1y
     *
     * @param float|null $ebitda_growth_1y EBITDA per Share is the amount of Earnings Before Interest, Taxes, Depreciation, and Amortization (EBITDA) per outstanding share of the company's stock.
     *
     * @return self
     */
    public function setEbitdaGrowth1y($ebitda_growth_1y)
    {
        if (is_null($ebitda_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable ebitda_growth_1y cannot be null');
        }
        $this->container['ebitda_growth_1y'] = $ebitda_growth_1y;

        return $this;
    }

    /**
     * Gets ebitda_growth_3y
     *
     * @return float|null
     */
    public function getEbitdaGrowth3y()
    {
        return $this->container['ebitda_growth_3y'];
    }

    /**
     * Sets ebitda_growth_3y
     *
     * @param float|null $ebitda_growth_3y EBITDA per Share is the amount of Earnings Before Interest, Taxes, Depreciation, and Amortization (EBITDA) per outstanding share of the company's stock.
     *
     * @return self
     */
    public function setEbitdaGrowth3y($ebitda_growth_3y)
    {
        if (is_null($ebitda_growth_3y)) {
            throw new \InvalidArgumentException('non-nullable ebitda_growth_3y cannot be null');
        }
        $this->container['ebitda_growth_3y'] = $ebitda_growth_3y;

        return $this;
    }

    /**
     * Gets ebitda_growth_3y_high
     *
     * @return float|null
     */
    public function getEbitdaGrowth3yHigh()
    {
        return $this->container['ebitda_growth_3y_high'];
    }

    /**
     * Sets ebitda_growth_3y_high
     *
     * @param float|null $ebitda_growth_3y_high EBITDA per Share is the amount of Earnings Before Interest, Taxes, Depreciation, and Amortization (EBITDA) per outstanding share of the company's stock.
     *
     * @return self
     */
    public function setEbitdaGrowth3yHigh($ebitda_growth_3y_high)
    {
        if (is_null($ebitda_growth_3y_high)) {
            throw new \InvalidArgumentException('non-nullable ebitda_growth_3y_high cannot be null');
        }
        $this->container['ebitda_growth_3y_high'] = $ebitda_growth_3y_high;

        return $this;
    }

    /**
     * Gets ebitda_growth_3y_low
     *
     * @return float|null
     */
    public function getEbitdaGrowth3yLow()
    {
        return $this->container['ebitda_growth_3y_low'];
    }

    /**
     * Sets ebitda_growth_3y_low
     *
     * @param float|null $ebitda_growth_3y_low EBITDA per Share is the amount of Earnings Before Interest, Taxes, Depreciation, and Amortization (EBITDA) per outstanding share of the company's stock.
     *
     * @return self
     */
    public function setEbitdaGrowth3yLow($ebitda_growth_3y_low)
    {
        if (is_null($ebitda_growth_3y_low)) {
            throw new \InvalidArgumentException('non-nullable ebitda_growth_3y_low cannot be null');
        }
        $this->container['ebitda_growth_3y_low'] = $ebitda_growth_3y_low;

        return $this;
    }

    /**
     * Gets ebitda_growth_3y_med
     *
     * @return float|null
     */
    public function getEbitdaGrowth3yMed()
    {
        return $this->container['ebitda_growth_3y_med'];
    }

    /**
     * Sets ebitda_growth_3y_med
     *
     * @param float|null $ebitda_growth_3y_med EBITDA per Share is the amount of Earnings Before Interest, Taxes, Depreciation, and Amortization (EBITDA) per outstanding share of the company's stock.
     *
     * @return self
     */
    public function setEbitdaGrowth3yMed($ebitda_growth_3y_med)
    {
        if (is_null($ebitda_growth_3y_med)) {
            throw new \InvalidArgumentException('non-nullable ebitda_growth_3y_med cannot be null');
        }
        $this->container['ebitda_growth_3y_med'] = $ebitda_growth_3y_med;

        return $this;
    }

    /**
     * Gets ebitda_growth_5y
     *
     * @return float|null
     */
    public function getEbitdaGrowth5y()
    {
        return $this->container['ebitda_growth_5y'];
    }

    /**
     * Sets ebitda_growth_5y
     *
     * @param float|null $ebitda_growth_5y EBITDA per Share is the amount of Earnings Before Interest, Taxes, Depreciation, and Amortization (EBITDA) per outstanding share of the company's stock.
     *
     * @return self
     */
    public function setEbitdaGrowth5y($ebitda_growth_5y)
    {
        if (is_null($ebitda_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable ebitda_growth_5y cannot be null');
        }
        $this->container['ebitda_growth_5y'] = $ebitda_growth_5y;

        return $this;
    }

    /**
     * Gets fscore_chg_1y
     *
     * @return float|null
     */
    public function getFscoreChg1y()
    {
        return $this->container['fscore_chg_1y'];
    }

    /**
     * Sets fscore_chg_1y
     *
     * @param float|null $fscore_chg_1y The numeric change of a company's Piotroski F-score over the past year
     *
     * @return self
     */
    public function setFscoreChg1y($fscore_chg_1y)
    {
        if (is_null($fscore_chg_1y)) {
            throw new \InvalidArgumentException('non-nullable fscore_chg_1y cannot be null');
        }
        $this->container['fscore_chg_1y'] = $fscore_chg_1y;

        return $this;
    }

    /**
     * Gets grossmargin_growth
     *
     * @return float|null
     */
    public function getGrossmarginGrowth()
    {
        return $this->container['grossmargin_growth'];
    }

    /**
     * Sets grossmargin_growth
     *
     * @param float|null $grossmargin_growth The compounded average growth rate of gross margin over the past five years, computed using loglinear regression.
     *
     * @return self
     */
    public function setGrossmarginGrowth($grossmargin_growth)
    {
        if (is_null($grossmargin_growth)) {
            throw new \InvalidArgumentException('non-nullable grossmargin_growth cannot be null');
        }
        $this->container['grossmargin_growth'] = $grossmargin_growth;

        return $this;
    }

    /**
     * Gets ltd_chg_10y
     *
     * @return float|null
     */
    public function getLtdChg10y()
    {
        return $this->container['ltd_chg_10y'];
    }

    /**
     * Sets ltd_chg_10y
     *
     * @param float|null $ltd_chg_10y The percentage change in a company's long-term debt over the past 10 years.
     *
     * @return self
     */
    public function setLtdChg10y($ltd_chg_10y)
    {
        if (is_null($ltd_chg_10y)) {
            throw new \InvalidArgumentException('non-nullable ltd_chg_10y cannot be null');
        }
        $this->container['ltd_chg_10y'] = $ltd_chg_10y;

        return $this;
    }

    /**
     * Gets ltd_chg_1y
     *
     * @return float|null
     */
    public function getLtdChg1y()
    {
        return $this->container['ltd_chg_1y'];
    }

    /**
     * Sets ltd_chg_1y
     *
     * @param float|null $ltd_chg_1y The percent change of a company's long-term debt over the past year
     *
     * @return self
     */
    public function setLtdChg1y($ltd_chg_1y)
    {
        if (is_null($ltd_chg_1y)) {
            throw new \InvalidArgumentException('non-nullable ltd_chg_1y cannot be null');
        }
        $this->container['ltd_chg_1y'] = $ltd_chg_1y;

        return $this;
    }

    /**
     * Gets ltd_chg_3y
     *
     * @return float|null
     */
    public function getLtdChg3y()
    {
        return $this->container['ltd_chg_3y'];
    }

    /**
     * Sets ltd_chg_3y
     *
     * @param float|null $ltd_chg_3y The percent change of a company's long-term debt over the past three years
     *
     * @return self
     */
    public function setLtdChg3y($ltd_chg_3y)
    {
        if (is_null($ltd_chg_3y)) {
            throw new \InvalidArgumentException('non-nullable ltd_chg_3y cannot be null');
        }
        $this->container['ltd_chg_3y'] = $ltd_chg_3y;

        return $this;
    }

    /**
     * Gets ltd_chg_5y
     *
     * @return float|null
     */
    public function getLtdChg5y()
    {
        return $this->container['ltd_chg_5y'];
    }

    /**
     * Sets ltd_chg_5y
     *
     * @param float|null $ltd_chg_5y The percent change of a company's long-term debt over the past five years
     *
     * @return self
     */
    public function setLtdChg5y($ltd_chg_5y)
    {
        if (is_null($ltd_chg_5y)) {
            throw new \InvalidArgumentException('non-nullable ltd_chg_5y cannot be null');
        }
        $this->container['ltd_chg_5y'] = $ltd_chg_5y;

        return $this;
    }

    /**
     * Gets ltd_growth_10y
     *
     * @return float|null
     */
    public function getLtdGrowth10y()
    {
        return $this->container['ltd_growth_10y'];
    }

    /**
     * Sets ltd_growth_10y
     *
     * @param float|null $ltd_growth_10y The compounded average growth rate of Long-Term Debt over the past ten years, computed using loglinear regression.
     *
     * @return self
     */
    public function setLtdGrowth10y($ltd_growth_10y)
    {
        if (is_null($ltd_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable ltd_growth_10y cannot be null');
        }
        $this->container['ltd_growth_10y'] = $ltd_growth_10y;

        return $this;
    }

    /**
     * Gets ltd_growth_1y
     *
     * @return float|null
     */
    public function getLtdGrowth1y()
    {
        return $this->container['ltd_growth_1y'];
    }

    /**
     * Sets ltd_growth_1y
     *
     * @param float|null $ltd_growth_1y The average growth rate of Long-Term Debt over the past year.
     *
     * @return self
     */
    public function setLtdGrowth1y($ltd_growth_1y)
    {
        if (is_null($ltd_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable ltd_growth_1y cannot be null');
        }
        $this->container['ltd_growth_1y'] = $ltd_growth_1y;

        return $this;
    }

    /**
     * Gets ltd_growth_3y
     *
     * @return float|null
     */
    public function getLtdGrowth3y()
    {
        return $this->container['ltd_growth_3y'];
    }

    /**
     * Sets ltd_growth_3y
     *
     * @param float|null $ltd_growth_3y The compounded average growth rate of Long-Term Debt over the past three years.
     *
     * @return self
     */
    public function setLtdGrowth3y($ltd_growth_3y)
    {
        if (is_null($ltd_growth_3y)) {
            throw new \InvalidArgumentException('non-nullable ltd_growth_3y cannot be null');
        }
        $this->container['ltd_growth_3y'] = $ltd_growth_3y;

        return $this;
    }

    /**
     * Gets ltd_growth_5y
     *
     * @return float|null
     */
    public function getLtdGrowth5y()
    {
        return $this->container['ltd_growth_5y'];
    }

    /**
     * Sets ltd_growth_5y
     *
     * @param float|null $ltd_growth_5y The compounded average growth rate of Long-Term Debt over the past five years, computed using loglinear regression.
     *
     * @return self
     */
    public function setLtdGrowth5y($ltd_growth_5y)
    {
        if (is_null($ltd_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable ltd_growth_5y cannot be null');
        }
        $this->container['ltd_growth_5y'] = $ltd_growth_5y;

        return $this;
    }

    /**
     * Gets mktcap_chg_10y
     *
     * @return float|null
     */
    public function getMktcapChg10y()
    {
        return $this->container['mktcap_chg_10y'];
    }

    /**
     * Sets mktcap_chg_10y
     *
     * @param float|null $mktcap_chg_10y The percentage change in a company's Market Cap over the past 10 years.
     *
     * @return self
     */
    public function setMktcapChg10y($mktcap_chg_10y)
    {
        if (is_null($mktcap_chg_10y)) {
            throw new \InvalidArgumentException('non-nullable mktcap_chg_10y cannot be null');
        }
        $this->container['mktcap_chg_10y'] = $mktcap_chg_10y;

        return $this;
    }

    /**
     * Gets mktcap_chg_15y
     *
     * @return float|null
     */
    public function getMktcapChg15y()
    {
        return $this->container['mktcap_chg_15y'];
    }

    /**
     * Sets mktcap_chg_15y
     *
     * @param float|null $mktcap_chg_15y The percentage change in a company's Market Cap over the past 15 years.
     *
     * @return self
     */
    public function setMktcapChg15y($mktcap_chg_15y)
    {
        if (is_null($mktcap_chg_15y)) {
            throw new \InvalidArgumentException('non-nullable mktcap_chg_15y cannot be null');
        }
        $this->container['mktcap_chg_15y'] = $mktcap_chg_15y;

        return $this;
    }

    /**
     * Gets mktcap_chg_1y
     *
     * @return float|null
     */
    public function getMktcapChg1y()
    {
        return $this->container['mktcap_chg_1y'];
    }

    /**
     * Sets mktcap_chg_1y
     *
     * @param float|null $mktcap_chg_1y Market cap is the total market value to buy the whole company. It is equal to the share price times the number of Shares Outstanding (EOP).
     *
     * @return self
     */
    public function setMktcapChg1y($mktcap_chg_1y)
    {
        if (is_null($mktcap_chg_1y)) {
            throw new \InvalidArgumentException('non-nullable mktcap_chg_1y cannot be null');
        }
        $this->container['mktcap_chg_1y'] = $mktcap_chg_1y;

        return $this;
    }

    /**
     * Gets mktcap_chg_20y
     *
     * @return float|null
     */
    public function getMktcapChg20y()
    {
        return $this->container['mktcap_chg_20y'];
    }

    /**
     * Sets mktcap_chg_20y
     *
     * @param float|null $mktcap_chg_20y The percentage change in a company's Market Cap over the past 20 years.
     *
     * @return self
     */
    public function setMktcapChg20y($mktcap_chg_20y)
    {
        if (is_null($mktcap_chg_20y)) {
            throw new \InvalidArgumentException('non-nullable mktcap_chg_20y cannot be null');
        }
        $this->container['mktcap_chg_20y'] = $mktcap_chg_20y;

        return $this;
    }

    /**
     * Gets mktcap_chg_25y
     *
     * @return float|null
     */
    public function getMktcapChg25y()
    {
        return $this->container['mktcap_chg_25y'];
    }

    /**
     * Sets mktcap_chg_25y
     *
     * @param float|null $mktcap_chg_25y The percentage change in a company's Market Cap over the past 25 years.
     *
     * @return self
     */
    public function setMktcapChg25y($mktcap_chg_25y)
    {
        if (is_null($mktcap_chg_25y)) {
            throw new \InvalidArgumentException('non-nullable mktcap_chg_25y cannot be null');
        }
        $this->container['mktcap_chg_25y'] = $mktcap_chg_25y;

        return $this;
    }

    /**
     * Gets mktcap_chg_3y
     *
     * @return float|null
     */
    public function getMktcapChg3y()
    {
        return $this->container['mktcap_chg_3y'];
    }

    /**
     * Sets mktcap_chg_3y
     *
     * @param float|null $mktcap_chg_3y Market cap is the total market value to buy the whole company. It is equal to the share price times the number of Shares Outstanding (EOP).
     *
     * @return self
     */
    public function setMktcapChg3y($mktcap_chg_3y)
    {
        if (is_null($mktcap_chg_3y)) {
            throw new \InvalidArgumentException('non-nullable mktcap_chg_3y cannot be null');
        }
        $this->container['mktcap_chg_3y'] = $mktcap_chg_3y;

        return $this;
    }

    /**
     * Gets mktcap_chg_5y
     *
     * @return float|null
     */
    public function getMktcapChg5y()
    {
        return $this->container['mktcap_chg_5y'];
    }

    /**
     * Sets mktcap_chg_5y
     *
     * @param float|null $mktcap_chg_5y Market cap is the total market value to buy the whole company. It is equal to the share price times the number of Shares Outstanding (EOP).
     *
     * @return self
     */
    public function setMktcapChg5y($mktcap_chg_5y)
    {
        if (is_null($mktcap_chg_5y)) {
            throw new \InvalidArgumentException('non-nullable mktcap_chg_5y cannot be null');
        }
        $this->container['mktcap_chg_5y'] = $mktcap_chg_5y;

        return $this;
    }

    /**
     * Gets operating_cashflow_growth_10y
     *
     * @return float|null
     */
    public function getOperatingCashflowGrowth10y()
    {
        return $this->container['operating_cashflow_growth_10y'];
    }

    /**
     * Sets operating_cashflow_growth_10y
     *
     * @param float|null $operating_cashflow_growth_10y The compounded average growth rate of OCF per share over the past ten years, computed using loglinear regression.
     *
     * @return self
     */
    public function setOperatingCashflowGrowth10y($operating_cashflow_growth_10y)
    {
        if (is_null($operating_cashflow_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable operating_cashflow_growth_10y cannot be null');
        }
        $this->container['operating_cashflow_growth_10y'] = $operating_cashflow_growth_10y;

        return $this;
    }

    /**
     * Gets operating_cashflow_growth_1y
     *
     * @return float|null
     */
    public function getOperatingCashflowGrowth1y()
    {
        return $this->container['operating_cashflow_growth_1y'];
    }

    /**
     * Sets operating_cashflow_growth_1y
     *
     * @param float|null $operating_cashflow_growth_1y The average growth rate of OCF per share over the past year.
     *
     * @return self
     */
    public function setOperatingCashflowGrowth1y($operating_cashflow_growth_1y)
    {
        if (is_null($operating_cashflow_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable operating_cashflow_growth_1y cannot be null');
        }
        $this->container['operating_cashflow_growth_1y'] = $operating_cashflow_growth_1y;

        return $this;
    }

    /**
     * Gets operating_cashflow_growth_3y
     *
     * @return float|null
     */
    public function getOperatingCashflowGrowth3y()
    {
        return $this->container['operating_cashflow_growth_3y'];
    }

    /**
     * Sets operating_cashflow_growth_3y
     *
     * @param float|null $operating_cashflow_growth_3y The compounded average growth rate of OCF per share over the past three years.
     *
     * @return self
     */
    public function setOperatingCashflowGrowth3y($operating_cashflow_growth_3y)
    {
        if (is_null($operating_cashflow_growth_3y)) {
            throw new \InvalidArgumentException('non-nullable operating_cashflow_growth_3y cannot be null');
        }
        $this->container['operating_cashflow_growth_3y'] = $operating_cashflow_growth_3y;

        return $this;
    }

    /**
     * Gets operating_cashflow_growth_3y_high
     *
     * @return float|null
     */
    public function getOperatingCashflowGrowth3yHigh()
    {
        return $this->container['operating_cashflow_growth_3y_high'];
    }

    /**
     * Sets operating_cashflow_growth_3y_high
     *
     * @param float|null $operating_cashflow_growth_3y_high operating_cashflow_growth_3y_high
     *
     * @return self
     */
    public function setOperatingCashflowGrowth3yHigh($operating_cashflow_growth_3y_high)
    {
        if (is_null($operating_cashflow_growth_3y_high)) {
            throw new \InvalidArgumentException('non-nullable operating_cashflow_growth_3y_high cannot be null');
        }
        $this->container['operating_cashflow_growth_3y_high'] = $operating_cashflow_growth_3y_high;

        return $this;
    }

    /**
     * Gets operating_cashflow_growth_3y_low
     *
     * @return float|null
     */
    public function getOperatingCashflowGrowth3yLow()
    {
        return $this->container['operating_cashflow_growth_3y_low'];
    }

    /**
     * Sets operating_cashflow_growth_3y_low
     *
     * @param float|null $operating_cashflow_growth_3y_low operating_cashflow_growth_3y_low
     *
     * @return self
     */
    public function setOperatingCashflowGrowth3yLow($operating_cashflow_growth_3y_low)
    {
        if (is_null($operating_cashflow_growth_3y_low)) {
            throw new \InvalidArgumentException('non-nullable operating_cashflow_growth_3y_low cannot be null');
        }
        $this->container['operating_cashflow_growth_3y_low'] = $operating_cashflow_growth_3y_low;

        return $this;
    }

    /**
     * Gets operating_cashflow_growth_3y_med
     *
     * @return float|null
     */
    public function getOperatingCashflowGrowth3yMed()
    {
        return $this->container['operating_cashflow_growth_3y_med'];
    }

    /**
     * Sets operating_cashflow_growth_3y_med
     *
     * @param float|null $operating_cashflow_growth_3y_med operating_cashflow_growth_3y_med
     *
     * @return self
     */
    public function setOperatingCashflowGrowth3yMed($operating_cashflow_growth_3y_med)
    {
        if (is_null($operating_cashflow_growth_3y_med)) {
            throw new \InvalidArgumentException('non-nullable operating_cashflow_growth_3y_med cannot be null');
        }
        $this->container['operating_cashflow_growth_3y_med'] = $operating_cashflow_growth_3y_med;

        return $this;
    }

    /**
     * Gets operating_cashflow_growth_5y
     *
     * @return float|null
     */
    public function getOperatingCashflowGrowth5y()
    {
        return $this->container['operating_cashflow_growth_5y'];
    }

    /**
     * Sets operating_cashflow_growth_5y
     *
     * @param float|null $operating_cashflow_growth_5y The compounded average growth rate of OCF per share over the past five years, computed using loglinear regression.
     *
     * @return self
     */
    public function setOperatingCashflowGrowth5y($operating_cashflow_growth_5y)
    {
        if (is_null($operating_cashflow_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable operating_cashflow_growth_5y cannot be null');
        }
        $this->container['operating_cashflow_growth_5y'] = $operating_cashflow_growth_5y;

        return $this;
    }

    /**
     * Gets operatingmargin_growth
     *
     * @return float|null
     */
    public function getOperatingmarginGrowth()
    {
        return $this->container['operatingmargin_growth'];
    }

    /**
     * Sets operatingmargin_growth
     *
     * @param float|null $operatingmargin_growth The compounded average growth rate of operating margin over the past five years, computed using loglinear regression
     *
     * @return self
     */
    public function setOperatingmarginGrowth($operatingmargin_growth)
    {
        if (is_null($operatingmargin_growth)) {
            throw new \InvalidArgumentException('non-nullable operatingmargin_growth cannot be null');
        }
        $this->container['operatingmargin_growth'] = $operatingmargin_growth;

        return $this;
    }

    /**
     * Gets owner_earnings_growth_10y
     *
     * @return float|null
     */
    public function getOwnerEarningsGrowth10y()
    {
        return $this->container['owner_earnings_growth_10y'];
    }

    /**
     * Sets owner_earnings_growth_10y
     *
     * @param float|null $owner_earnings_growth_10y owner_earnings_growth_10y
     *
     * @return self
     */
    public function setOwnerEarningsGrowth10y($owner_earnings_growth_10y)
    {
        if (is_null($owner_earnings_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable owner_earnings_growth_10y cannot be null');
        }
        $this->container['owner_earnings_growth_10y'] = $owner_earnings_growth_10y;

        return $this;
    }

    /**
     * Gets owner_earnings_growth_1y
     *
     * @return float|null
     */
    public function getOwnerEarningsGrowth1y()
    {
        return $this->container['owner_earnings_growth_1y'];
    }

    /**
     * Sets owner_earnings_growth_1y
     *
     * @param float|null $owner_earnings_growth_1y owner_earnings_growth_1y
     *
     * @return self
     */
    public function setOwnerEarningsGrowth1y($owner_earnings_growth_1y)
    {
        if (is_null($owner_earnings_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable owner_earnings_growth_1y cannot be null');
        }
        $this->container['owner_earnings_growth_1y'] = $owner_earnings_growth_1y;

        return $this;
    }

    /**
     * Gets owner_earnings_growth_3y
     *
     * @return float|null
     */
    public function getOwnerEarningsGrowth3y()
    {
        return $this->container['owner_earnings_growth_3y'];
    }

    /**
     * Sets owner_earnings_growth_3y
     *
     * @param float|null $owner_earnings_growth_3y owner_earnings_growth_3y
     *
     * @return self
     */
    public function setOwnerEarningsGrowth3y($owner_earnings_growth_3y)
    {
        if (is_null($owner_earnings_growth_3y)) {
            throw new \InvalidArgumentException('non-nullable owner_earnings_growth_3y cannot be null');
        }
        $this->container['owner_earnings_growth_3y'] = $owner_earnings_growth_3y;

        return $this;
    }

    /**
     * Gets owner_earnings_growth_3y_high
     *
     * @return float|null
     */
    public function getOwnerEarningsGrowth3yHigh()
    {
        return $this->container['owner_earnings_growth_3y_high'];
    }

    /**
     * Sets owner_earnings_growth_3y_high
     *
     * @param float|null $owner_earnings_growth_3y_high owner_earnings_growth_3y_high
     *
     * @return self
     */
    public function setOwnerEarningsGrowth3yHigh($owner_earnings_growth_3y_high)
    {
        if (is_null($owner_earnings_growth_3y_high)) {
            throw new \InvalidArgumentException('non-nullable owner_earnings_growth_3y_high cannot be null');
        }
        $this->container['owner_earnings_growth_3y_high'] = $owner_earnings_growth_3y_high;

        return $this;
    }

    /**
     * Gets owner_earnings_growth_3y_low
     *
     * @return float|null
     */
    public function getOwnerEarningsGrowth3yLow()
    {
        return $this->container['owner_earnings_growth_3y_low'];
    }

    /**
     * Sets owner_earnings_growth_3y_low
     *
     * @param float|null $owner_earnings_growth_3y_low owner_earnings_growth_3y_low
     *
     * @return self
     */
    public function setOwnerEarningsGrowth3yLow($owner_earnings_growth_3y_low)
    {
        if (is_null($owner_earnings_growth_3y_low)) {
            throw new \InvalidArgumentException('non-nullable owner_earnings_growth_3y_low cannot be null');
        }
        $this->container['owner_earnings_growth_3y_low'] = $owner_earnings_growth_3y_low;

        return $this;
    }

    /**
     * Gets owner_earnings_growth_3y_med
     *
     * @return float|null
     */
    public function getOwnerEarningsGrowth3yMed()
    {
        return $this->container['owner_earnings_growth_3y_med'];
    }

    /**
     * Sets owner_earnings_growth_3y_med
     *
     * @param float|null $owner_earnings_growth_3y_med owner_earnings_growth_3y_med
     *
     * @return self
     */
    public function setOwnerEarningsGrowth3yMed($owner_earnings_growth_3y_med)
    {
        if (is_null($owner_earnings_growth_3y_med)) {
            throw new \InvalidArgumentException('non-nullable owner_earnings_growth_3y_med cannot be null');
        }
        $this->container['owner_earnings_growth_3y_med'] = $owner_earnings_growth_3y_med;

        return $this;
    }

    /**
     * Gets owner_earnings_growth_5y
     *
     * @return float|null
     */
    public function getOwnerEarningsGrowth5y()
    {
        return $this->container['owner_earnings_growth_5y'];
    }

    /**
     * Sets owner_earnings_growth_5y
     *
     * @param float|null $owner_earnings_growth_5y owner_earnings_growth_5y
     *
     * @return self
     */
    public function setOwnerEarningsGrowth5y($owner_earnings_growth_5y)
    {
        if (is_null($owner_earnings_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable owner_earnings_growth_5y cannot be null');
        }
        $this->container['owner_earnings_growth_5y'] = $owner_earnings_growth_5y;

        return $this;
    }

    /**
     * Gets rdcf_growth
     *
     * @return float|null
     */
    public function getRdcfGrowth()
    {
        return $this->container['rdcf_growth'];
    }

    /**
     * Sets rdcf_growth
     *
     * @param float|null $rdcf_growth With Reverse DCF what you get is the growth rate of the earnings that company needs to have to justify its current stock price.
     *
     * @return self
     */
    public function setRdcfGrowth($rdcf_growth)
    {
        if (is_null($rdcf_growth)) {
            throw new \InvalidArgumentException('non-nullable rdcf_growth cannot be null');
        }
        $this->container['rdcf_growth'] = $rdcf_growth;

        return $this;
    }

    /**
     * Gets rvn_growth_10y
     *
     * @return float|null
     */
    public function getRvnGrowth10y()
    {
        return $this->container['rvn_growth_10y'];
    }

    /**
     * Sets rvn_growth_10y
     *
     * @param float|null $rvn_growth_10y The compounded average growth rate of Revenue per share over the past ten years, computed using loglinear regression.
     *
     * @return self
     */
    public function setRvnGrowth10y($rvn_growth_10y)
    {
        if (is_null($rvn_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable rvn_growth_10y cannot be null');
        }
        $this->container['rvn_growth_10y'] = $rvn_growth_10y;

        return $this;
    }

    /**
     * Gets rvn_growth_1y
     *
     * @return float|null
     */
    public function getRvnGrowth1y()
    {
        return $this->container['rvn_growth_1y'];
    }

    /**
     * Sets rvn_growth_1y
     *
     * @param float|null $rvn_growth_1y The average growth rate of Revenue per share over the past year.
     *
     * @return self
     */
    public function setRvnGrowth1y($rvn_growth_1y)
    {
        if (is_null($rvn_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable rvn_growth_1y cannot be null');
        }
        $this->container['rvn_growth_1y'] = $rvn_growth_1y;

        return $this;
    }

    /**
     * Gets rvn_growth_3y
     *
     * @return float|null
     */
    public function getRvnGrowth3y()
    {
        return $this->container['rvn_growth_3y'];
    }

    /**
     * Sets rvn_growth_3y
     *
     * @param float|null $rvn_growth_3y The compounded average growth rate of Revenue per share over the past three years.
     *
     * @return self
     */
    public function setRvnGrowth3y($rvn_growth_3y)
    {
        if (is_null($rvn_growth_3y)) {
            throw new \InvalidArgumentException('non-nullable rvn_growth_3y cannot be null');
        }
        $this->container['rvn_growth_3y'] = $rvn_growth_3y;

        return $this;
    }

    /**
     * Gets rvn_growth_3y_high
     *
     * @return float|null
     */
    public function getRvnGrowth3yHigh()
    {
        return $this->container['rvn_growth_3y_high'];
    }

    /**
     * Sets rvn_growth_3y_high
     *
     * @param float|null $rvn_growth_3y_high Sales per share is a ratio that computes the total revenue earned per share over a designated period, whether quarterly, semi-annually, annually or trailing twelve months (TTM).
     *
     * @return self
     */
    public function setRvnGrowth3yHigh($rvn_growth_3y_high)
    {
        if (is_null($rvn_growth_3y_high)) {
            throw new \InvalidArgumentException('non-nullable rvn_growth_3y_high cannot be null');
        }
        $this->container['rvn_growth_3y_high'] = $rvn_growth_3y_high;

        return $this;
    }

    /**
     * Gets rvn_growth_3y_low
     *
     * @return float|null
     */
    public function getRvnGrowth3yLow()
    {
        return $this->container['rvn_growth_3y_low'];
    }

    /**
     * Sets rvn_growth_3y_low
     *
     * @param float|null $rvn_growth_3y_low Sales per share is a ratio that computes the total revenue earned per share over a designated period, whether quarterly, semi-annually, annually or trailing twelve months (TTM).
     *
     * @return self
     */
    public function setRvnGrowth3yLow($rvn_growth_3y_low)
    {
        if (is_null($rvn_growth_3y_low)) {
            throw new \InvalidArgumentException('non-nullable rvn_growth_3y_low cannot be null');
        }
        $this->container['rvn_growth_3y_low'] = $rvn_growth_3y_low;

        return $this;
    }

    /**
     * Gets rvn_growth_3y_med
     *
     * @return float|null
     */
    public function getRvnGrowth3yMed()
    {
        return $this->container['rvn_growth_3y_med'];
    }

    /**
     * Sets rvn_growth_3y_med
     *
     * @param float|null $rvn_growth_3y_med Sales per share is a ratio that computes the total revenue earned per share over a designated period, whether quarterly, semi-annually, annually or trailing twelve months (TTM).
     *
     * @return self
     */
    public function setRvnGrowth3yMed($rvn_growth_3y_med)
    {
        if (is_null($rvn_growth_3y_med)) {
            throw new \InvalidArgumentException('non-nullable rvn_growth_3y_med cannot be null');
        }
        $this->container['rvn_growth_3y_med'] = $rvn_growth_3y_med;

        return $this;
    }

    /**
     * Gets rvn_growth_5y
     *
     * @return float|null
     */
    public function getRvnGrowth5y()
    {
        return $this->container['rvn_growth_5y'];
    }

    /**
     * Sets rvn_growth_5y
     *
     * @param float|null $rvn_growth_5y The compounded average growth rate of Revenue per share over the past five years, computed using loglinear regression.
     *
     * @return self
     */
    public function setRvnGrowth5y($rvn_growth_5y)
    {
        if (is_null($rvn_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable rvn_growth_5y cannot be null');
        }
        $this->container['rvn_growth_5y'] = $rvn_growth_5y;

        return $this;
    }

    /**
     * Gets rvn_q1_growth
     *
     * @return float|null
     */
    public function getRvnQ1Growth()
    {
        return $this->container['rvn_q1_growth'];
    }

    /**
     * Sets rvn_q1_growth
     *
     * @param float|null $rvn_q1_growth The year-over-year Revenue growth for the most-recent quarter.
     *
     * @return self
     */
    public function setRvnQ1Growth($rvn_q1_growth)
    {
        if (is_null($rvn_q1_growth)) {
            throw new \InvalidArgumentException('non-nullable rvn_q1_growth cannot be null');
        }
        $this->container['rvn_q1_growth'] = $rvn_q1_growth;

        return $this;
    }

    /**
     * Gets rvn_q2_growth
     *
     * @return float|null
     */
    public function getRvnQ2Growth()
    {
        return $this->container['rvn_q2_growth'];
    }

    /**
     * Sets rvn_q2_growth
     *
     * @param float|null $rvn_q2_growth The year-over-year Revenue growth for the second most-recent quarter.
     *
     * @return self
     */
    public function setRvnQ2Growth($rvn_q2_growth)
    {
        if (is_null($rvn_q2_growth)) {
            throw new \InvalidArgumentException('non-nullable rvn_q2_growth cannot be null');
        }
        $this->container['rvn_q2_growth'] = $rvn_q2_growth;

        return $this;
    }

    /**
     * Gets rvn_q3_growth
     *
     * @return float|null
     */
    public function getRvnQ3Growth()
    {
        return $this->container['rvn_q3_growth'];
    }

    /**
     * Sets rvn_q3_growth
     *
     * @param float|null $rvn_q3_growth The year-over-year Revenue growth for the third most-recent quarter.
     *
     * @return self
     */
    public function setRvnQ3Growth($rvn_q3_growth)
    {
        if (is_null($rvn_q3_growth)) {
            throw new \InvalidArgumentException('non-nullable rvn_q3_growth cannot be null');
        }
        $this->container['rvn_q3_growth'] = $rvn_q3_growth;

        return $this;
    }

    /**
     * Gets rvn_q4_growth
     *
     * @return float|null
     */
    public function getRvnQ4Growth()
    {
        return $this->container['rvn_q4_growth'];
    }

    /**
     * Sets rvn_q4_growth
     *
     * @param float|null $rvn_q4_growth The year-over-year Revenue growth for the forth most-recent quarter.
     *
     * @return self
     */
    public function setRvnQ4Growth($rvn_q4_growth)
    {
        if (is_null($rvn_q4_growth)) {
            throw new \InvalidArgumentException('non-nullable rvn_q4_growth cannot be null');
        }
        $this->container['rvn_q4_growth'] = $rvn_q4_growth;

        return $this;
    }

    /**
     * Gets total_debt_growth_10y
     *
     * @return float|null
     */
    public function getTotalDebtGrowth10y()
    {
        return $this->container['total_debt_growth_10y'];
    }

    /**
     * Sets total_debt_growth_10y
     *
     * @param float|null $total_debt_growth_10y total_debt_growth_10y
     *
     * @return self
     */
    public function setTotalDebtGrowth10y($total_debt_growth_10y)
    {
        if (is_null($total_debt_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable total_debt_growth_10y cannot be null');
        }
        $this->container['total_debt_growth_10y'] = $total_debt_growth_10y;

        return $this;
    }

    /**
     * Gets total_debt_growth_1y
     *
     * @return float|null
     */
    public function getTotalDebtGrowth1y()
    {
        return $this->container['total_debt_growth_1y'];
    }

    /**
     * Sets total_debt_growth_1y
     *
     * @param float|null $total_debt_growth_1y total_debt_growth_1y
     *
     * @return self
     */
    public function setTotalDebtGrowth1y($total_debt_growth_1y)
    {
        if (is_null($total_debt_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable total_debt_growth_1y cannot be null');
        }
        $this->container['total_debt_growth_1y'] = $total_debt_growth_1y;

        return $this;
    }

    /**
     * Gets total_debt_growth_3y
     *
     * @return float|null
     */
    public function getTotalDebtGrowth3y()
    {
        return $this->container['total_debt_growth_3y'];
    }

    /**
     * Sets total_debt_growth_3y
     *
     * @param float|null $total_debt_growth_3y total_debt_growth_3y
     *
     * @return self
     */
    public function setTotalDebtGrowth3y($total_debt_growth_3y)
    {
        if (is_null($total_debt_growth_3y)) {
            throw new \InvalidArgumentException('non-nullable total_debt_growth_3y cannot be null');
        }
        $this->container['total_debt_growth_3y'] = $total_debt_growth_3y;

        return $this;
    }

    /**
     * Gets total_debt_growth_5y
     *
     * @return float|null
     */
    public function getTotalDebtGrowth5y()
    {
        return $this->container['total_debt_growth_5y'];
    }

    /**
     * Sets total_debt_growth_5y
     *
     * @param float|null $total_debt_growth_5y total_debt_growth_5y
     *
     * @return self
     */
    public function setTotalDebtGrowth5y($total_debt_growth_5y)
    {
        if (is_null($total_debt_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable total_debt_growth_5y cannot be null');
        }
        $this->container['total_debt_growth_5y'] = $total_debt_growth_5y;

        return $this;
    }

    /**
     * Gets total_ebitda_growth_10y
     *
     * @return float|null
     */
    public function getTotalEbitdaGrowth10y()
    {
        return $this->container['total_ebitda_growth_10y'];
    }

    /**
     * Sets total_ebitda_growth_10y
     *
     * @param float|null $total_ebitda_growth_10y EBITDA stands for earnings before interest, taxes, depreciation and amortization. EBITDA is a measure of a company's financial performance and is used as an alternative to earnings or net income in some circumstances.
     *
     * @return self
     */
    public function setTotalEbitdaGrowth10y($total_ebitda_growth_10y)
    {
        if (is_null($total_ebitda_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable total_ebitda_growth_10y cannot be null');
        }
        $this->container['total_ebitda_growth_10y'] = $total_ebitda_growth_10y;

        return $this;
    }

    /**
     * Gets total_ebitda_growth_1y
     *
     * @return float|null
     */
    public function getTotalEbitdaGrowth1y()
    {
        return $this->container['total_ebitda_growth_1y'];
    }

    /**
     * Sets total_ebitda_growth_1y
     *
     * @param float|null $total_ebitda_growth_1y EBITDA stands for earnings before interest, taxes, depreciation and amortization. EBITDA is a measure of a company's financial performance and is used as an alternative to earnings or net income in some circumstances.
     *
     * @return self
     */
    public function setTotalEbitdaGrowth1y($total_ebitda_growth_1y)
    {
        if (is_null($total_ebitda_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable total_ebitda_growth_1y cannot be null');
        }
        $this->container['total_ebitda_growth_1y'] = $total_ebitda_growth_1y;

        return $this;
    }

    /**
     * Gets total_ebitda_growth_3y
     *
     * @return float|null
     */
    public function getTotalEbitdaGrowth3y()
    {
        return $this->container['total_ebitda_growth_3y'];
    }

    /**
     * Sets total_ebitda_growth_3y
     *
     * @param float|null $total_ebitda_growth_3y EBITDA stands for earnings before interest, taxes, depreciation and amortization. EBITDA is a measure of a company's financial performance and is used as an alternative to earnings or net income in some circumstances.
     *
     * @return self
     */
    public function setTotalEbitdaGrowth3y($total_ebitda_growth_3y)
    {
        if (is_null($total_ebitda_growth_3y)) {
            throw new \InvalidArgumentException('non-nullable total_ebitda_growth_3y cannot be null');
        }
        $this->container['total_ebitda_growth_3y'] = $total_ebitda_growth_3y;

        return $this;
    }

    /**
     * Gets total_ebitda_growth_3y_high
     *
     * @return float|null
     */
    public function getTotalEbitdaGrowth3yHigh()
    {
        return $this->container['total_ebitda_growth_3y_high'];
    }

    /**
     * Sets total_ebitda_growth_3y_high
     *
     * @param float|null $total_ebitda_growth_3y_high EBITDA stands for earnings before interest, taxes, depreciation and amortization. EBITDA is a measure of a company's financial performance and is used as an alternative to earnings or net income in some circumstances.
     *
     * @return self
     */
    public function setTotalEbitdaGrowth3yHigh($total_ebitda_growth_3y_high)
    {
        if (is_null($total_ebitda_growth_3y_high)) {
            throw new \InvalidArgumentException('non-nullable total_ebitda_growth_3y_high cannot be null');
        }
        $this->container['total_ebitda_growth_3y_high'] = $total_ebitda_growth_3y_high;

        return $this;
    }

    /**
     * Gets total_ebitda_growth_3y_low
     *
     * @return float|null
     */
    public function getTotalEbitdaGrowth3yLow()
    {
        return $this->container['total_ebitda_growth_3y_low'];
    }

    /**
     * Sets total_ebitda_growth_3y_low
     *
     * @param float|null $total_ebitda_growth_3y_low EBITDA stands for earnings before interest, taxes, depreciation and amortization. EBITDA is a measure of a company's financial performance and is used as an alternative to earnings or net income in some circumstances.
     *
     * @return self
     */
    public function setTotalEbitdaGrowth3yLow($total_ebitda_growth_3y_low)
    {
        if (is_null($total_ebitda_growth_3y_low)) {
            throw new \InvalidArgumentException('non-nullable total_ebitda_growth_3y_low cannot be null');
        }
        $this->container['total_ebitda_growth_3y_low'] = $total_ebitda_growth_3y_low;

        return $this;
    }

    /**
     * Gets total_ebitda_growth_3y_med
     *
     * @return float|null
     */
    public function getTotalEbitdaGrowth3yMed()
    {
        return $this->container['total_ebitda_growth_3y_med'];
    }

    /**
     * Sets total_ebitda_growth_3y_med
     *
     * @param float|null $total_ebitda_growth_3y_med EBITDA stands for earnings before interest, taxes, depreciation and amortization. EBITDA is a measure of a company's financial performance and is used as an alternative to earnings or net income in some circumstances.
     *
     * @return self
     */
    public function setTotalEbitdaGrowth3yMed($total_ebitda_growth_3y_med)
    {
        if (is_null($total_ebitda_growth_3y_med)) {
            throw new \InvalidArgumentException('non-nullable total_ebitda_growth_3y_med cannot be null');
        }
        $this->container['total_ebitda_growth_3y_med'] = $total_ebitda_growth_3y_med;

        return $this;
    }

    /**
     * Gets total_ebitda_growth_5y
     *
     * @return float|null
     */
    public function getTotalEbitdaGrowth5y()
    {
        return $this->container['total_ebitda_growth_5y'];
    }

    /**
     * Sets total_ebitda_growth_5y
     *
     * @param float|null $total_ebitda_growth_5y EBITDA stands for earnings before interest, taxes, depreciation and amortization. EBITDA is a measure of a company's financial performance and is used as an alternative to earnings or net income in some circumstances.
     *
     * @return self
     */
    public function setTotalEbitdaGrowth5y($total_ebitda_growth_5y)
    {
        if (is_null($total_ebitda_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable total_ebitda_growth_5y cannot be null');
        }
        $this->container['total_ebitda_growth_5y'] = $total_ebitda_growth_5y;

        return $this;
    }

    /**
     * Gets total_netincome_growth_10y
     *
     * @return float|null
     */
    public function getTotalNetincomeGrowth10y()
    {
        return $this->container['total_netincome_growth_10y'];
    }

    /**
     * Sets total_netincome_growth_10y
     *
     * @param float|null $total_netincome_growth_10y Net Income is the net profit that a company earns after deducting all costs and losses including cost of goods, SGA, DDA, interest expenses, non-recurring items and tax.
     *
     * @return self
     */
    public function setTotalNetincomeGrowth10y($total_netincome_growth_10y)
    {
        if (is_null($total_netincome_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable total_netincome_growth_10y cannot be null');
        }
        $this->container['total_netincome_growth_10y'] = $total_netincome_growth_10y;

        return $this;
    }

    /**
     * Gets total_netincome_growth_1y
     *
     * @return float|null
     */
    public function getTotalNetincomeGrowth1y()
    {
        return $this->container['total_netincome_growth_1y'];
    }

    /**
     * Sets total_netincome_growth_1y
     *
     * @param float|null $total_netincome_growth_1y Net Income is the net profit that a company earns after deducting all costs and losses including cost of goods, SGA, DDA, interest expenses, non-recurring items and tax.
     *
     * @return self
     */
    public function setTotalNetincomeGrowth1y($total_netincome_growth_1y)
    {
        if (is_null($total_netincome_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable total_netincome_growth_1y cannot be null');
        }
        $this->container['total_netincome_growth_1y'] = $total_netincome_growth_1y;

        return $this;
    }

    /**
     * Gets total_netincome_growth_3y
     *
     * @return float|null
     */
    public function getTotalNetincomeGrowth3y()
    {
        return $this->container['total_netincome_growth_3y'];
    }

    /**
     * Sets total_netincome_growth_3y
     *
     * @param float|null $total_netincome_growth_3y Net Income is the net profit that a company earns after deducting all costs and losses including cost of goods, SGA, DDA, interest expenses, non-recurring items and tax.
     *
     * @return self
     */
    public function setTotalNetincomeGrowth3y($total_netincome_growth_3y)
    {
        if (is_null($total_netincome_growth_3y)) {
            throw new \InvalidArgumentException('non-nullable total_netincome_growth_3y cannot be null');
        }
        $this->container['total_netincome_growth_3y'] = $total_netincome_growth_3y;

        return $this;
    }

    /**
     * Gets total_netincome_growth_3y_high
     *
     * @return float|null
     */
    public function getTotalNetincomeGrowth3yHigh()
    {
        return $this->container['total_netincome_growth_3y_high'];
    }

    /**
     * Sets total_netincome_growth_3y_high
     *
     * @param float|null $total_netincome_growth_3y_high Net Income is the net profit that a company earns after deducting all costs and losses including cost of goods, SGA, DDA, interest expenses, non-recurring items and tax.
     *
     * @return self
     */
    public function setTotalNetincomeGrowth3yHigh($total_netincome_growth_3y_high)
    {
        if (is_null($total_netincome_growth_3y_high)) {
            throw new \InvalidArgumentException('non-nullable total_netincome_growth_3y_high cannot be null');
        }
        $this->container['total_netincome_growth_3y_high'] = $total_netincome_growth_3y_high;

        return $this;
    }

    /**
     * Gets total_netincome_growth_3y_low
     *
     * @return float|null
     */
    public function getTotalNetincomeGrowth3yLow()
    {
        return $this->container['total_netincome_growth_3y_low'];
    }

    /**
     * Sets total_netincome_growth_3y_low
     *
     * @param float|null $total_netincome_growth_3y_low Net Income is the net profit that a company earns after deducting all costs and losses including cost of goods, SGA, DDA, interest expenses, non-recurring items and tax.
     *
     * @return self
     */
    public function setTotalNetincomeGrowth3yLow($total_netincome_growth_3y_low)
    {
        if (is_null($total_netincome_growth_3y_low)) {
            throw new \InvalidArgumentException('non-nullable total_netincome_growth_3y_low cannot be null');
        }
        $this->container['total_netincome_growth_3y_low'] = $total_netincome_growth_3y_low;

        return $this;
    }

    /**
     * Gets total_netincome_growth_3y_med
     *
     * @return float|null
     */
    public function getTotalNetincomeGrowth3yMed()
    {
        return $this->container['total_netincome_growth_3y_med'];
    }

    /**
     * Sets total_netincome_growth_3y_med
     *
     * @param float|null $total_netincome_growth_3y_med Net Income is the net profit that a company earns after deducting all costs and losses including cost of goods, SGA, DDA, interest expenses, non-recurring items and tax.
     *
     * @return self
     */
    public function setTotalNetincomeGrowth3yMed($total_netincome_growth_3y_med)
    {
        if (is_null($total_netincome_growth_3y_med)) {
            throw new \InvalidArgumentException('non-nullable total_netincome_growth_3y_med cannot be null');
        }
        $this->container['total_netincome_growth_3y_med'] = $total_netincome_growth_3y_med;

        return $this;
    }

    /**
     * Gets total_netincome_growth_5y
     *
     * @return float|null
     */
    public function getTotalNetincomeGrowth5y()
    {
        return $this->container['total_netincome_growth_5y'];
    }

    /**
     * Sets total_netincome_growth_5y
     *
     * @param float|null $total_netincome_growth_5y Net Income is the net profit that a company earns after deducting all costs and losses including cost of goods, SGA, DDA, interest expenses, non-recurring items and tax.
     *
     * @return self
     */
    public function setTotalNetincomeGrowth5y($total_netincome_growth_5y)
    {
        if (is_null($total_netincome_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable total_netincome_growth_5y cannot be null');
        }
        $this->container['total_netincome_growth_5y'] = $total_netincome_growth_5y;

        return $this;
    }

    /**
     * Gets total_rvn_growth_10y
     *
     * @return float|null
     */
    public function getTotalRvnGrowth10y()
    {
        return $this->container['total_rvn_growth_10y'];
    }

    /**
     * Sets total_rvn_growth_10y
     *
     * @param float|null $total_rvn_growth_10y Revenue is the income that a business has from its normal business activities, usually from the sale of goods and services to customers.
     *
     * @return self
     */
    public function setTotalRvnGrowth10y($total_rvn_growth_10y)
    {
        if (is_null($total_rvn_growth_10y)) {
            throw new \InvalidArgumentException('non-nullable total_rvn_growth_10y cannot be null');
        }
        $this->container['total_rvn_growth_10y'] = $total_rvn_growth_10y;

        return $this;
    }

    /**
     * Gets total_rvn_growth_1y
     *
     * @return float|null
     */
    public function getTotalRvnGrowth1y()
    {
        return $this->container['total_rvn_growth_1y'];
    }

    /**
     * Sets total_rvn_growth_1y
     *
     * @param float|null $total_rvn_growth_1y Revenue is the income that a business has from its normal business activities, usually from the sale of goods and services to customers.
     *
     * @return self
     */
    public function setTotalRvnGrowth1y($total_rvn_growth_1y)
    {
        if (is_null($total_rvn_growth_1y)) {
            throw new \InvalidArgumentException('non-nullable total_rvn_growth_1y cannot be null');
        }
        $this->container['total_rvn_growth_1y'] = $total_rvn_growth_1y;

        return $this;
    }

    /**
     * Gets total_rvn_growth_3y
     *
     * @return float|null
     */
    public function getTotalRvnGrowth3y()
    {
        return $this->container['total_rvn_growth_3y'];
    }

    /**
     * Sets total_rvn_growth_3y
     *
     * @param float|null $total_rvn_growth_3y Revenue is the income that a business has from its normal business activities, usually from the sale of goods and services to customers.
     *
     * @return self
     */
    public function setTotalRvnGrowth3y($total_rvn_growth_3y)
    {
        if (is_null($total_rvn_growth_3y)) {
            throw new \InvalidArgumentException('non-nullable total_rvn_growth_3y cannot be null');
        }
        $this->container['total_rvn_growth_3y'] = $total_rvn_growth_3y;

        return $this;
    }

    /**
     * Gets total_rvn_growth_3y_high
     *
     * @return float|null
     */
    public function getTotalRvnGrowth3yHigh()
    {
        return $this->container['total_rvn_growth_3y_high'];
    }

    /**
     * Sets total_rvn_growth_3y_high
     *
     * @param float|null $total_rvn_growth_3y_high Revenue is the income that a business has from its normal business activities, usually from the sale of goods and services to customers.
     *
     * @return self
     */
    public function setTotalRvnGrowth3yHigh($total_rvn_growth_3y_high)
    {
        if (is_null($total_rvn_growth_3y_high)) {
            throw new \InvalidArgumentException('non-nullable total_rvn_growth_3y_high cannot be null');
        }
        $this->container['total_rvn_growth_3y_high'] = $total_rvn_growth_3y_high;

        return $this;
    }

    /**
     * Gets total_rvn_growth_3y_low
     *
     * @return float|null
     */
    public function getTotalRvnGrowth3yLow()
    {
        return $this->container['total_rvn_growth_3y_low'];
    }

    /**
     * Sets total_rvn_growth_3y_low
     *
     * @param float|null $total_rvn_growth_3y_low Revenue is the income that a business has from its normal business activities, usually from the sale of goods and services to customers.
     *
     * @return self
     */
    public function setTotalRvnGrowth3yLow($total_rvn_growth_3y_low)
    {
        if (is_null($total_rvn_growth_3y_low)) {
            throw new \InvalidArgumentException('non-nullable total_rvn_growth_3y_low cannot be null');
        }
        $this->container['total_rvn_growth_3y_low'] = $total_rvn_growth_3y_low;

        return $this;
    }

    /**
     * Gets total_rvn_growth_3y_med
     *
     * @return float|null
     */
    public function getTotalRvnGrowth3yMed()
    {
        return $this->container['total_rvn_growth_3y_med'];
    }

    /**
     * Sets total_rvn_growth_3y_med
     *
     * @param float|null $total_rvn_growth_3y_med Revenue is the income that a business has from its normal business activities, usually from the sale of goods and services to customers.
     *
     * @return self
     */
    public function setTotalRvnGrowth3yMed($total_rvn_growth_3y_med)
    {
        if (is_null($total_rvn_growth_3y_med)) {
            throw new \InvalidArgumentException('non-nullable total_rvn_growth_3y_med cannot be null');
        }
        $this->container['total_rvn_growth_3y_med'] = $total_rvn_growth_3y_med;

        return $this;
    }

    /**
     * Gets total_rvn_growth_5y
     *
     * @return float|null
     */
    public function getTotalRvnGrowth5y()
    {
        return $this->container['total_rvn_growth_5y'];
    }

    /**
     * Sets total_rvn_growth_5y
     *
     * @param float|null $total_rvn_growth_5y Revenue is the income that a business has from its normal business activities, usually from the sale of goods and services to customers.
     *
     * @return self
     */
    public function setTotalRvnGrowth5y($total_rvn_growth_5y)
    {
        if (is_null($total_rvn_growth_5y)) {
            throw new \InvalidArgumentException('non-nullable total_rvn_growth_5y cannot be null');
        }
        $this->container['total_rvn_growth_5y'] = $total_rvn_growth_5y;

        return $this;
    }

    /**
     * Gets total_rvn_growth_5y_est
     *
     * @return float|null
     */
    public function getTotalRvnGrowth5yEst()
    {
        return $this->container['total_rvn_growth_5y_est'];
    }

    /**
     * Sets total_rvn_growth_5y_est
     *
     * @param float|null $total_rvn_growth_5y_est The expected total revenue growth rate for the next 3-5 years.
     *
     * @return self
     */
    public function setTotalRvnGrowth5yEst($total_rvn_growth_5y_est)
    {
        if (is_null($total_rvn_growth_5y_est)) {
            throw new \InvalidArgumentException('non-nullable total_rvn_growth_5y_est cannot be null');
        }
        $this->container['total_rvn_growth_5y_est'] = $total_rvn_growth_5y_est;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


