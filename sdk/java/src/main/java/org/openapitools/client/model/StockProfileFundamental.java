/*
 * Gurufocus Data Package API
 * API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StockProfileFundamental
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-11T01:10:00.357398434Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class StockProfileFundamental {
  public static final String SERIALIZED_NAME_EFFECTIVE_INTEREST_RATE = "EffectiveInterestRate";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_INTEREST_RATE)
  @javax.annotation.Nullable
  private BigDecimal effectiveInterestRate;

  public static final String SERIALIZED_NAME_INSIDER_SHARES_OWNED = "InsiderSharesOwned";
  @SerializedName(SERIALIZED_NAME_INSIDER_SHARES_OWNED)
  @javax.annotation.Nullable
  private BigDecimal insiderSharesOwned;

  public static final String SERIALIZED_NAME_INSTITUTION_SHARES_HELD = "InstitutionSharesHeld";
  @SerializedName(SERIALIZED_NAME_INSTITUTION_SHARES_HELD)
  @javax.annotation.Nullable
  private BigDecimal institutionSharesHeld;

  public static final String SERIALIZED_NAME_P_F_D = "PFD";
  @SerializedName(SERIALIZED_NAME_P_F_D)
  @javax.annotation.Nullable
  private BigDecimal PFD;

  public static final String SERIALIZED_NAME_R_O_C_J_O_E_L = "ROC_JOEL";
  @SerializedName(SERIALIZED_NAME_R_O_C_J_O_E_L)
  @javax.annotation.Nullable
  private BigDecimal ROC_JOEL;

  public static final String SERIALIZED_NAME_RO_C_J_O_E_L_HIGH = "ROC_JOEL_high";
  @SerializedName(SERIALIZED_NAME_RO_C_J_O_E_L_HIGH)
  @javax.annotation.Nullable
  private BigDecimal roCJOELHigh;

  public static final String SERIALIZED_NAME_RO_C_J_O_E_L_LOW = "ROC_JOEL_low";
  @SerializedName(SERIALIZED_NAME_RO_C_J_O_E_L_LOW)
  @javax.annotation.Nullable
  private BigDecimal roCJOELLow;

  public static final String SERIALIZED_NAME_RO_C_J_O_E_L_MED = "ROC_JOEL_med";
  @SerializedName(SERIALIZED_NAME_RO_C_J_O_E_L_MED)
  @javax.annotation.Nullable
  private BigDecimal roCJOELMed;

  public static final String SERIALIZED_NAME_RO_C_J_O_E_L_MED5Y = "ROC_JOEL_med_5y";
  @SerializedName(SERIALIZED_NAME_RO_C_J_O_E_L_MED5Y)
  @javax.annotation.Nullable
  private BigDecimal roCJOELMed5y;

  public static final String SERIALIZED_NAME_R_O_T_A = "ROTA";
  @SerializedName(SERIALIZED_NAME_R_O_T_A)
  @javax.annotation.Nullable
  private BigDecimal ROTA;

  public static final String SERIALIZED_NAME_RO_T_A_HIGH = "ROTA_high";
  @SerializedName(SERIALIZED_NAME_RO_T_A_HIGH)
  @javax.annotation.Nullable
  private BigDecimal roTAHigh;

  public static final String SERIALIZED_NAME_RO_T_A_LOW = "ROTA_low";
  @SerializedName(SERIALIZED_NAME_RO_T_A_LOW)
  @javax.annotation.Nullable
  private BigDecimal roTALow;

  public static final String SERIALIZED_NAME_RO_T_A_MED = "ROTA_med";
  @SerializedName(SERIALIZED_NAME_RO_T_A_MED)
  @javax.annotation.Nullable
  private BigDecimal roTAMed;

  public static final String SERIALIZED_NAME_R_O_T_E = "ROTE";
  @SerializedName(SERIALIZED_NAME_R_O_T_E)
  @javax.annotation.Nullable
  private BigDecimal ROTE;

  public static final String SERIALIZED_NAME_RO_T_E_HIGH = "ROTE_high";
  @SerializedName(SERIALIZED_NAME_RO_T_E_HIGH)
  @javax.annotation.Nullable
  private BigDecimal roTEHigh;

  public static final String SERIALIZED_NAME_RO_T_E_LOW = "ROTE_low";
  @SerializedName(SERIALIZED_NAME_RO_T_E_LOW)
  @javax.annotation.Nullable
  private BigDecimal roTELow;

  public static final String SERIALIZED_NAME_RO_T_E_MED = "ROTE_med";
  @SerializedName(SERIALIZED_NAME_RO_T_E_MED)
  @javax.annotation.Nullable
  private BigDecimal roTEMed;

  public static final String SERIALIZED_NAME_RO_T_E_MED5Y = "ROTE_med_5y";
  @SerializedName(SERIALIZED_NAME_RO_T_E_MED5Y)
  @javax.annotation.Nullable
  private BigDecimal roTEMed5y;

  public static final String SERIALIZED_NAME_S_G_A = "SGA";
  @SerializedName(SERIALIZED_NAME_S_G_A)
  @javax.annotation.Nullable
  private BigDecimal SGA;

  public static final String SERIALIZED_NAME_S_N_O_A = "SNOA";
  @SerializedName(SERIALIZED_NAME_S_N_O_A)
  @javax.annotation.Nullable
  private BigDecimal SNOA;

  public static final String SERIALIZED_NAME_TOTAL_PAYOUT_RATIO = "TotalPayoutRatio";
  @SerializedName(SERIALIZED_NAME_TOTAL_PAYOUT_RATIO)
  @javax.annotation.Nullable
  private BigDecimal totalPayoutRatio;

  public static final String SERIALIZED_NAME_TOTAL_PAYOUT_YIELD = "TotalPayoutYield";
  @SerializedName(SERIALIZED_NAME_TOTAL_PAYOUT_YIELD)
  @javax.annotation.Nullable
  private BigDecimal totalPayoutYield;

  public static final String SERIALIZED_NAME_AFINANCIALS_START_DATE = "afinancials_start_date";
  @SerializedName(SERIALIZED_NAME_AFINANCIALS_START_DATE)
  @javax.annotation.Nullable
  private String afinancialsStartDate;

  public static final String SERIALIZED_NAME_ASSET = "asset";
  @SerializedName(SERIALIZED_NAME_ASSET)
  @javax.annotation.Nullable
  private BigDecimal asset;

  public static final String SERIALIZED_NAME_BOOK = "book";
  @SerializedName(SERIALIZED_NAME_BOOK)
  @javax.annotation.Nullable
  private BigDecimal book;

  public static final String SERIALIZED_NAME_BUYBACK_YIELD = "buyback_yield";
  @SerializedName(SERIALIZED_NAME_BUYBACK_YIELD)
  @javax.annotation.Nullable
  private BigDecimal buybackYield;

  public static final String SERIALIZED_NAME_BUYBACK_YIELD_HIGH = "buyback_yield_high";
  @SerializedName(SERIALIZED_NAME_BUYBACK_YIELD_HIGH)
  @javax.annotation.Nullable
  private BigDecimal buybackYieldHigh;

  public static final String SERIALIZED_NAME_BUYBACK_YIELD_LOW = "buyback_yield_low";
  @SerializedName(SERIALIZED_NAME_BUYBACK_YIELD_LOW)
  @javax.annotation.Nullable
  private BigDecimal buybackYieldLow;

  public static final String SERIALIZED_NAME_BUYBACK_YIELD_MED = "buyback_yield_med";
  @SerializedName(SERIALIZED_NAME_BUYBACK_YIELD_MED)
  @javax.annotation.Nullable
  private BigDecimal buybackYieldMed;

  public static final String SERIALIZED_NAME_CASH2DEBT = "cash2debt";
  @SerializedName(SERIALIZED_NAME_CASH2DEBT)
  @javax.annotation.Nullable
  private BigDecimal cash2debt;

  public static final String SERIALIZED_NAME_CASH2DEBT_HIGH = "cash2debt_high";
  @SerializedName(SERIALIZED_NAME_CASH2DEBT_HIGH)
  @javax.annotation.Nullable
  private BigDecimal cash2debtHigh;

  public static final String SERIALIZED_NAME_CASH2DEBT_LOW = "cash2debt_low";
  @SerializedName(SERIALIZED_NAME_CASH2DEBT_LOW)
  @javax.annotation.Nullable
  private BigDecimal cash2debtLow;

  public static final String SERIALIZED_NAME_CASH2DEBT_MED = "cash2debt_med";
  @SerializedName(SERIALIZED_NAME_CASH2DEBT_MED)
  @javax.annotation.Nullable
  private BigDecimal cash2debtMed;

  public static final String SERIALIZED_NAME_CASH_RATIO = "cash_ratio";
  @SerializedName(SERIALIZED_NAME_CASH_RATIO)
  @javax.annotation.Nullable
  private BigDecimal cashRatio;

  public static final String SERIALIZED_NAME_CASH_RATIO_HIGH = "cash_ratio_high";
  @SerializedName(SERIALIZED_NAME_CASH_RATIO_HIGH)
  @javax.annotation.Nullable
  private BigDecimal cashRatioHigh;

  public static final String SERIALIZED_NAME_CASH_RATIO_LOW = "cash_ratio_low";
  @SerializedName(SERIALIZED_NAME_CASH_RATIO_LOW)
  @javax.annotation.Nullable
  private BigDecimal cashRatioLow;

  public static final String SERIALIZED_NAME_CASH_RATIO_MED = "cash_ratio_med";
  @SerializedName(SERIALIZED_NAME_CASH_RATIO_MED)
  @javax.annotation.Nullable
  private BigDecimal cashRatioMed;

  public static final String SERIALIZED_NAME_CCC = "ccc";
  @SerializedName(SERIALIZED_NAME_CCC)
  @javax.annotation.Nullable
  private BigDecimal ccc;

  public static final String SERIALIZED_NAME_CORRELATION_BOOK = "correlation_book";
  @SerializedName(SERIALIZED_NAME_CORRELATION_BOOK)
  @javax.annotation.Nullable
  private BigDecimal correlationBook;

  public static final String SERIALIZED_NAME_CORRELATION_EPS_NRI = "correlation_eps_nri";
  @SerializedName(SERIALIZED_NAME_CORRELATION_EPS_NRI)
  @javax.annotation.Nullable
  private BigDecimal correlationEpsNri;

  public static final String SERIALIZED_NAME_CORRELATION_EV_VS_EBIT = "correlation_ev_vs_ebit";
  @SerializedName(SERIALIZED_NAME_CORRELATION_EV_VS_EBIT)
  @javax.annotation.Nullable
  private BigDecimal correlationEvVsEbit;

  public static final String SERIALIZED_NAME_CORRELATION_EV_VS_EBITDA = "correlation_ev_vs_ebitda";
  @SerializedName(SERIALIZED_NAME_CORRELATION_EV_VS_EBITDA)
  @javax.annotation.Nullable
  private BigDecimal correlationEvVsEbitda;

  public static final String SERIALIZED_NAME_CORRELATION_EV_VS_FCF = "correlation_ev_vs_fcf";
  @SerializedName(SERIALIZED_NAME_CORRELATION_EV_VS_FCF)
  @javax.annotation.Nullable
  private BigDecimal correlationEvVsFcf;

  public static final String SERIALIZED_NAME_CORRELATION_EV_VS_PRETAX_INCOME = "correlation_ev_vs_pretax_income";
  @SerializedName(SERIALIZED_NAME_CORRELATION_EV_VS_PRETAX_INCOME)
  @javax.annotation.Nullable
  private BigDecimal correlationEvVsPretaxIncome;

  public static final String SERIALIZED_NAME_CORRELATION_EV_VS_REV = "correlation_ev_vs_rev";
  @SerializedName(SERIALIZED_NAME_CORRELATION_EV_VS_REV)
  @javax.annotation.Nullable
  private BigDecimal correlationEvVsRev;

  public static final String SERIALIZED_NAME_CORRELATION_OCF = "correlation_ocf";
  @SerializedName(SERIALIZED_NAME_CORRELATION_OCF)
  @javax.annotation.Nullable
  private BigDecimal correlationOcf;

  public static final String SERIALIZED_NAME_CORRELATION_REV = "correlation_rev";
  @SerializedName(SERIALIZED_NAME_CORRELATION_REV)
  @javax.annotation.Nullable
  private BigDecimal correlationRev;

  public static final String SERIALIZED_NAME_CURRENT_RATIO = "current_ratio";
  @SerializedName(SERIALIZED_NAME_CURRENT_RATIO)
  @javax.annotation.Nullable
  private BigDecimal currentRatio;

  public static final String SERIALIZED_NAME_CURRENT_RATIO_HIGH = "current_ratio_high";
  @SerializedName(SERIALIZED_NAME_CURRENT_RATIO_HIGH)
  @javax.annotation.Nullable
  private BigDecimal currentRatioHigh;

  public static final String SERIALIZED_NAME_CURRENT_RATIO_LOW = "current_ratio_low";
  @SerializedName(SERIALIZED_NAME_CURRENT_RATIO_LOW)
  @javax.annotation.Nullable
  private BigDecimal currentRatioLow;

  public static final String SERIALIZED_NAME_CURRENT_RATIO_MED = "current_ratio_med";
  @SerializedName(SERIALIZED_NAME_CURRENT_RATIO_MED)
  @javax.annotation.Nullable
  private BigDecimal currentRatioMed;

  public static final String SERIALIZED_NAME_DAYSINVENTORY = "daysinventory";
  @SerializedName(SERIALIZED_NAME_DAYSINVENTORY)
  @javax.annotation.Nullable
  private BigDecimal daysinventory;

  public static final String SERIALIZED_NAME_DAYSINVENTORY_HIGH = "daysinventory_high";
  @SerializedName(SERIALIZED_NAME_DAYSINVENTORY_HIGH)
  @javax.annotation.Nullable
  private BigDecimal daysinventoryHigh;

  public static final String SERIALIZED_NAME_DAYSINVENTORY_LOW = "daysinventory_low";
  @SerializedName(SERIALIZED_NAME_DAYSINVENTORY_LOW)
  @javax.annotation.Nullable
  private BigDecimal daysinventoryLow;

  public static final String SERIALIZED_NAME_DAYSINVENTORY_MED = "daysinventory_med";
  @SerializedName(SERIALIZED_NAME_DAYSINVENTORY_MED)
  @javax.annotation.Nullable
  private BigDecimal daysinventoryMed;

  public static final String SERIALIZED_NAME_DAYSPAYABLE = "dayspayable";
  @SerializedName(SERIALIZED_NAME_DAYSPAYABLE)
  @javax.annotation.Nullable
  private BigDecimal dayspayable;

  public static final String SERIALIZED_NAME_DAYSPAYABLE_HIGH = "dayspayable_high";
  @SerializedName(SERIALIZED_NAME_DAYSPAYABLE_HIGH)
  @javax.annotation.Nullable
  private BigDecimal dayspayableHigh;

  public static final String SERIALIZED_NAME_DAYSPAYABLE_LOW = "dayspayable_low";
  @SerializedName(SERIALIZED_NAME_DAYSPAYABLE_LOW)
  @javax.annotation.Nullable
  private BigDecimal dayspayableLow;

  public static final String SERIALIZED_NAME_DAYSPAYABLE_MED = "dayspayable_med";
  @SerializedName(SERIALIZED_NAME_DAYSPAYABLE_MED)
  @javax.annotation.Nullable
  private BigDecimal dayspayableMed;

  public static final String SERIALIZED_NAME_DAYSSALESOUTSTAND = "dayssalesoutstand";
  @SerializedName(SERIALIZED_NAME_DAYSSALESOUTSTAND)
  @javax.annotation.Nullable
  private BigDecimal dayssalesoutstand;

  public static final String SERIALIZED_NAME_DAYSSALESOUTSTAND_HIGH = "dayssalesoutstand_high";
  @SerializedName(SERIALIZED_NAME_DAYSSALESOUTSTAND_HIGH)
  @javax.annotation.Nullable
  private BigDecimal dayssalesoutstandHigh;

  public static final String SERIALIZED_NAME_DAYSSALESOUTSTAND_LOW = "dayssalesoutstand_low";
  @SerializedName(SERIALIZED_NAME_DAYSSALESOUTSTAND_LOW)
  @javax.annotation.Nullable
  private BigDecimal dayssalesoutstandLow;

  public static final String SERIALIZED_NAME_DAYSSALESOUTSTAND_MED = "dayssalesoutstand_med";
  @SerializedName(SERIALIZED_NAME_DAYSSALESOUTSTAND_MED)
  @javax.annotation.Nullable
  private BigDecimal dayssalesoutstandMed;

  public static final String SERIALIZED_NAME_DEBT2ASSET = "debt2asset";
  @SerializedName(SERIALIZED_NAME_DEBT2ASSET)
  @javax.annotation.Nullable
  private BigDecimal debt2asset;

  public static final String SERIALIZED_NAME_DEBT2EBITDA = "debt2ebitda";
  @SerializedName(SERIALIZED_NAME_DEBT2EBITDA)
  @javax.annotation.Nullable
  private BigDecimal debt2ebitda;

  public static final String SERIALIZED_NAME_DEBT2EBITDA_HIGH = "debt2ebitda_high";
  @SerializedName(SERIALIZED_NAME_DEBT2EBITDA_HIGH)
  @javax.annotation.Nullable
  private BigDecimal debt2ebitdaHigh;

  public static final String SERIALIZED_NAME_DEBT2EBITDA_LOW = "debt2ebitda_low";
  @SerializedName(SERIALIZED_NAME_DEBT2EBITDA_LOW)
  @javax.annotation.Nullable
  private BigDecimal debt2ebitdaLow;

  public static final String SERIALIZED_NAME_DEBT2EBITDA_MED = "debt2ebitda_med";
  @SerializedName(SERIALIZED_NAME_DEBT2EBITDA_MED)
  @javax.annotation.Nullable
  private BigDecimal debt2ebitdaMed;

  public static final String SERIALIZED_NAME_DEBT2EQUITY = "debt2equity";
  @SerializedName(SERIALIZED_NAME_DEBT2EQUITY)
  @javax.annotation.Nullable
  private BigDecimal debt2equity;

  public static final String SERIALIZED_NAME_DEBT2EQUITY_HIGH = "debt2equity_high";
  @SerializedName(SERIALIZED_NAME_DEBT2EQUITY_HIGH)
  @javax.annotation.Nullable
  private BigDecimal debt2equityHigh;

  public static final String SERIALIZED_NAME_DEBT2EQUITY_LOW = "debt2equity_low";
  @SerializedName(SERIALIZED_NAME_DEBT2EQUITY_LOW)
  @javax.annotation.Nullable
  private BigDecimal debt2equityLow;

  public static final String SERIALIZED_NAME_DEBT2EQUITY_MED = "debt2equity_med";
  @SerializedName(SERIALIZED_NAME_DEBT2EQUITY_MED)
  @javax.annotation.Nullable
  private BigDecimal debt2equityMed;

  public static final String SERIALIZED_NAME_DEBT2REV = "debt2rev";
  @SerializedName(SERIALIZED_NAME_DEBT2REV)
  @javax.annotation.Nullable
  private BigDecimal debt2rev;

  public static final String SERIALIZED_NAME_EPS = "eps";
  @SerializedName(SERIALIZED_NAME_EPS)
  @javax.annotation.Nullable
  private BigDecimal eps;

  public static final String SERIALIZED_NAME_EPS_LATEST_Q = "eps_latest_q";
  @SerializedName(SERIALIZED_NAME_EPS_LATEST_Q)
  @javax.annotation.Nullable
  private BigDecimal epsLatestQ;

  public static final String SERIALIZED_NAME_EPS_NRI = "eps_nri";
  @SerializedName(SERIALIZED_NAME_EPS_NRI)
  @javax.annotation.Nullable
  private BigDecimal epsNri;

  public static final String SERIALIZED_NAME_EQUITY2ASSET = "equity2asset";
  @SerializedName(SERIALIZED_NAME_EQUITY2ASSET)
  @javax.annotation.Nullable
  private BigDecimal equity2asset;

  public static final String SERIALIZED_NAME_EQUITY2ASSET_HIGH = "equity2asset_high";
  @SerializedName(SERIALIZED_NAME_EQUITY2ASSET_HIGH)
  @javax.annotation.Nullable
  private BigDecimal equity2assetHigh;

  public static final String SERIALIZED_NAME_EQUITY2ASSET_LOW = "equity2asset_low";
  @SerializedName(SERIALIZED_NAME_EQUITY2ASSET_LOW)
  @javax.annotation.Nullable
  private BigDecimal equity2assetLow;

  public static final String SERIALIZED_NAME_EQUITY2ASSET_MED = "equity2asset_med";
  @SerializedName(SERIALIZED_NAME_EQUITY2ASSET_MED)
  @javax.annotation.Nullable
  private BigDecimal equity2assetMed;

  public static final String SERIALIZED_NAME_EV_MORN = "ev_morn";
  @SerializedName(SERIALIZED_NAME_EV_MORN)
  @javax.annotation.Nullable
  private BigDecimal evMorn;

  public static final String SERIALIZED_NAME_EV_MORN_NORM = "ev_morn_norm";
  @SerializedName(SERIALIZED_NAME_EV_MORN_NORM)
  @javax.annotation.Nullable
  private BigDecimal evMornNorm;

  public static final String SERIALIZED_NAME_FSCORE = "fscore";
  @SerializedName(SERIALIZED_NAME_FSCORE)
  @javax.annotation.Nullable
  private BigDecimal fscore;

  public static final String SERIALIZED_NAME_FSCORE_HIGH = "fscore_high";
  @SerializedName(SERIALIZED_NAME_FSCORE_HIGH)
  @javax.annotation.Nullable
  private BigDecimal fscoreHigh;

  public static final String SERIALIZED_NAME_FSCORE_LOW = "fscore_low";
  @SerializedName(SERIALIZED_NAME_FSCORE_LOW)
  @javax.annotation.Nullable
  private BigDecimal fscoreLow;

  public static final String SERIALIZED_NAME_FSCORE_MED = "fscore_med";
  @SerializedName(SERIALIZED_NAME_FSCORE_MED)
  @javax.annotation.Nullable
  private BigDecimal fscoreMed;

  public static final String SERIALIZED_NAME_GOODWILL2ASSET = "goodwill2asset";
  @SerializedName(SERIALIZED_NAME_GOODWILL2ASSET)
  @javax.annotation.Nullable
  private BigDecimal goodwill2asset;

  public static final String SERIALIZED_NAME_GROSSPROFIT = "grossprofit";
  @SerializedName(SERIALIZED_NAME_GROSSPROFIT)
  @javax.annotation.Nullable
  private BigDecimal grossprofit;

  public static final String SERIALIZED_NAME_GROSSPROFIT2ASSET = "grossprofit2asset";
  @SerializedName(SERIALIZED_NAME_GROSSPROFIT2ASSET)
  @javax.annotation.Nullable
  private BigDecimal grossprofit2asset;

  public static final String SERIALIZED_NAME_GROSSPROFIT2TANGIBLEASSET = "grossprofit2tangibleasset";
  @SerializedName(SERIALIZED_NAME_GROSSPROFIT2TANGIBLEASSET)
  @javax.annotation.Nullable
  private BigDecimal grossprofit2tangibleasset;

  public static final String SERIALIZED_NAME_INSIDER_OWNERSHIP = "insider_ownership";
  @SerializedName(SERIALIZED_NAME_INSIDER_OWNERSHIP)
  @javax.annotation.Nullable
  private BigDecimal insiderOwnership;

  public static final String SERIALIZED_NAME_INST_OWNERSHIP = "inst_ownership";
  @SerializedName(SERIALIZED_NAME_INST_OWNERSHIP)
  @javax.annotation.Nullable
  private BigDecimal instOwnership;

  public static final String SERIALIZED_NAME_INTEREST_COVERAGE = "interest_coverage";
  @SerializedName(SERIALIZED_NAME_INTEREST_COVERAGE)
  @javax.annotation.Nullable
  private BigDecimal interestCoverage;

  public static final String SERIALIZED_NAME_INTEREST_COVERAGE_HIGH = "interest_coverage_high";
  @SerializedName(SERIALIZED_NAME_INTEREST_COVERAGE_HIGH)
  @javax.annotation.Nullable
  private BigDecimal interestCoverageHigh;

  public static final String SERIALIZED_NAME_INTEREST_COVERAGE_LOW = "interest_coverage_low";
  @SerializedName(SERIALIZED_NAME_INTEREST_COVERAGE_LOW)
  @javax.annotation.Nullable
  private BigDecimal interestCoverageLow;

  public static final String SERIALIZED_NAME_INTEREST_COVERAGE_MED = "interest_coverage_med";
  @SerializedName(SERIALIZED_NAME_INTEREST_COVERAGE_MED)
  @javax.annotation.Nullable
  private BigDecimal interestCoverageMed;

  public static final String SERIALIZED_NAME_INVENTORY2SALES = "inventory2sales";
  @SerializedName(SERIALIZED_NAME_INVENTORY2SALES)
  @javax.annotation.Nullable
  private BigDecimal inventory2sales;

  public static final String SERIALIZED_NAME_INVENTORY_TURNOVER = "inventory_turnover";
  @SerializedName(SERIALIZED_NAME_INVENTORY_TURNOVER)
  @javax.annotation.Nullable
  private BigDecimal inventoryTurnover;

  public static final String SERIALIZED_NAME_LATEST_EARNINGS_RELEASE_DATE = "latest_earnings_release_date";
  @SerializedName(SERIALIZED_NAME_LATEST_EARNINGS_RELEASE_DATE)
  @javax.annotation.Nullable
  private String latestEarningsReleaseDate;

  public static final String SERIALIZED_NAME_LIABILITIES_TO_ASSETS = "liabilities_to_assets";
  @SerializedName(SERIALIZED_NAME_LIABILITIES_TO_ASSETS)
  @javax.annotation.Nullable
  private BigDecimal liabilitiesToAssets;

  public static final String SERIALIZED_NAME_MKTCAP = "mktcap";
  @SerializedName(SERIALIZED_NAME_MKTCAP)
  @javax.annotation.Nullable
  private BigDecimal mktcap;

  public static final String SERIALIZED_NAME_MKTCAP_NORM = "mktcap_norm";
  @SerializedName(SERIALIZED_NAME_MKTCAP_NORM)
  @javax.annotation.Nullable
  private BigDecimal mktcapNorm;

  public static final String SERIALIZED_NAME_MSCORE = "mscore";
  @SerializedName(SERIALIZED_NAME_MSCORE)
  @javax.annotation.Nullable
  private BigDecimal mscore;

  public static final String SERIALIZED_NAME_MSCORE_HIGH = "mscore_high";
  @SerializedName(SERIALIZED_NAME_MSCORE_HIGH)
  @javax.annotation.Nullable
  private BigDecimal mscoreHigh;

  public static final String SERIALIZED_NAME_MSCORE_LOW = "mscore_low";
  @SerializedName(SERIALIZED_NAME_MSCORE_LOW)
  @javax.annotation.Nullable
  private BigDecimal mscoreLow;

  public static final String SERIALIZED_NAME_MSCORE_MED = "mscore_med";
  @SerializedName(SERIALIZED_NAME_MSCORE_MED)
  @javax.annotation.Nullable
  private BigDecimal mscoreMed;

  public static final String SERIALIZED_NAME_NET_DEBT_PAYDOWN_YIELD = "net_debt_paydown_yield";
  @SerializedName(SERIALIZED_NAME_NET_DEBT_PAYDOWN_YIELD)
  @javax.annotation.Nullable
  private BigDecimal netDebtPaydownYield;

  public static final String SERIALIZED_NAME_NET_DEBT_PAYDOWN_YIELD_HIGH = "net_debt_paydown_yield_high";
  @SerializedName(SERIALIZED_NAME_NET_DEBT_PAYDOWN_YIELD_HIGH)
  @javax.annotation.Nullable
  private BigDecimal netDebtPaydownYieldHigh;

  public static final String SERIALIZED_NAME_NET_DEBT_PAYDOWN_YIELD_LOW = "net_debt_paydown_yield_low";
  @SerializedName(SERIALIZED_NAME_NET_DEBT_PAYDOWN_YIELD_LOW)
  @javax.annotation.Nullable
  private BigDecimal netDebtPaydownYieldLow;

  public static final String SERIALIZED_NAME_NET_DEBT_PAYDOWN_YIELD_MED = "net_debt_paydown_yield_med";
  @SerializedName(SERIALIZED_NAME_NET_DEBT_PAYDOWN_YIELD_MED)
  @javax.annotation.Nullable
  private BigDecimal netDebtPaydownYieldMed;

  public static final String SERIALIZED_NAME_NEXT_EARNINGS_DATE = "next_earnings_date";
  @SerializedName(SERIALIZED_NAME_NEXT_EARNINGS_DATE)
  @javax.annotation.Nullable
  private String nextEarningsDate;

  public static final String SERIALIZED_NAME_NUM_GOOD_SIGNS = "num_good_signs";
  @SerializedName(SERIALIZED_NAME_NUM_GOOD_SIGNS)
  @javax.annotation.Nullable
  private BigDecimal numGoodSigns;

  public static final String SERIALIZED_NAME_NUM_WARNING_SIGNS_MEIDUM = "num_warning_signs_meidum";
  @SerializedName(SERIALIZED_NAME_NUM_WARNING_SIGNS_MEIDUM)
  @javax.annotation.Nullable
  private BigDecimal numWarningSignsMeidum;

  public static final String SERIALIZED_NAME_NUM_WARNING_SIGNS_SEVERE = "num_warning_signs_severe";
  @SerializedName(SERIALIZED_NAME_NUM_WARNING_SIGNS_SEVERE)
  @javax.annotation.Nullable
  private BigDecimal numWarningSignsSevere;

  public static final String SERIALIZED_NAME_PAST_EARNINGS_DATE = "past_earnings_date";
  @SerializedName(SERIALIZED_NAME_PAST_EARNINGS_DATE)
  @javax.annotation.Nullable
  private String pastEarningsDate;

  public static final String SERIALIZED_NAME_QUICK_RATIO = "quick_ratio";
  @SerializedName(SERIALIZED_NAME_QUICK_RATIO)
  @javax.annotation.Nullable
  private BigDecimal quickRatio;

  public static final String SERIALIZED_NAME_QUICK_RATIO_HIGH = "quick_ratio_high";
  @SerializedName(SERIALIZED_NAME_QUICK_RATIO_HIGH)
  @javax.annotation.Nullable
  private BigDecimal quickRatioHigh;

  public static final String SERIALIZED_NAME_QUICK_RATIO_LOW = "quick_ratio_low";
  @SerializedName(SERIALIZED_NAME_QUICK_RATIO_LOW)
  @javax.annotation.Nullable
  private BigDecimal quickRatioLow;

  public static final String SERIALIZED_NAME_QUICK_RATIO_MED = "quick_ratio_med";
  @SerializedName(SERIALIZED_NAME_QUICK_RATIO_MED)
  @javax.annotation.Nullable
  private BigDecimal quickRatioMed;

  public static final String SERIALIZED_NAME_RECEIVABLES_TURNOVER = "receivables_turnover";
  @SerializedName(SERIALIZED_NAME_RECEIVABLES_TURNOVER)
  @javax.annotation.Nullable
  private BigDecimal receivablesTurnover;

  public static final String SERIALIZED_NAME_RELATED_COMP = "related_comp";
  @SerializedName(SERIALIZED_NAME_RELATED_COMP)
  @javax.annotation.Nullable
  private String relatedComp;

  public static final String SERIALIZED_NAME_ROA = "roa";
  @SerializedName(SERIALIZED_NAME_ROA)
  @javax.annotation.Nullable
  private BigDecimal roa;

  public static final String SERIALIZED_NAME_ROA_HIGH = "roa_high";
  @SerializedName(SERIALIZED_NAME_ROA_HIGH)
  @javax.annotation.Nullable
  private BigDecimal roaHigh;

  public static final String SERIALIZED_NAME_ROA_LOW = "roa_low";
  @SerializedName(SERIALIZED_NAME_ROA_LOW)
  @javax.annotation.Nullable
  private BigDecimal roaLow;

  public static final String SERIALIZED_NAME_ROA_MED = "roa_med";
  @SerializedName(SERIALIZED_NAME_ROA_MED)
  @javax.annotation.Nullable
  private BigDecimal roaMed;

  public static final String SERIALIZED_NAME_ROA_MED5Y = "roa_med_5y";
  @SerializedName(SERIALIZED_NAME_ROA_MED5Y)
  @javax.annotation.Nullable
  private BigDecimal roaMed5y;

  public static final String SERIALIZED_NAME_ROC = "roc";
  @SerializedName(SERIALIZED_NAME_ROC)
  @javax.annotation.Nullable
  private BigDecimal roc;

  public static final String SERIALIZED_NAME_ROCE = "roce";
  @SerializedName(SERIALIZED_NAME_ROCE)
  @javax.annotation.Nullable
  private BigDecimal roce;

  public static final String SERIALIZED_NAME_ROCE_HIGH = "roce_high";
  @SerializedName(SERIALIZED_NAME_ROCE_HIGH)
  @javax.annotation.Nullable
  private BigDecimal roceHigh;

  public static final String SERIALIZED_NAME_ROCE_LOW = "roce_low";
  @SerializedName(SERIALIZED_NAME_ROCE_LOW)
  @javax.annotation.Nullable
  private BigDecimal roceLow;

  public static final String SERIALIZED_NAME_ROCE_MED = "roce_med";
  @SerializedName(SERIALIZED_NAME_ROCE_MED)
  @javax.annotation.Nullable
  private BigDecimal roceMed;

  public static final String SERIALIZED_NAME_ROCE_MED5Y = "roce_med_5y";
  @SerializedName(SERIALIZED_NAME_ROCE_MED5Y)
  @javax.annotation.Nullable
  private BigDecimal roceMed5y;

  public static final String SERIALIZED_NAME_ROE = "roe";
  @SerializedName(SERIALIZED_NAME_ROE)
  @javax.annotation.Nullable
  private BigDecimal roe;

  public static final String SERIALIZED_NAME_ROE_ADJ = "roe_adj";
  @SerializedName(SERIALIZED_NAME_ROE_ADJ)
  @javax.annotation.Nullable
  private BigDecimal roeAdj;

  public static final String SERIALIZED_NAME_ROE_HIGH = "roe_high";
  @SerializedName(SERIALIZED_NAME_ROE_HIGH)
  @javax.annotation.Nullable
  private BigDecimal roeHigh;

  public static final String SERIALIZED_NAME_ROE_LOW = "roe_low";
  @SerializedName(SERIALIZED_NAME_ROE_LOW)
  @javax.annotation.Nullable
  private BigDecimal roeLow;

  public static final String SERIALIZED_NAME_ROE_MED = "roe_med";
  @SerializedName(SERIALIZED_NAME_ROE_MED)
  @javax.annotation.Nullable
  private BigDecimal roeMed;

  public static final String SERIALIZED_NAME_ROE_MED5Y = "roe_med_5y";
  @SerializedName(SERIALIZED_NAME_ROE_MED5Y)
  @javax.annotation.Nullable
  private BigDecimal roeMed5y;

  public static final String SERIALIZED_NAME_ROIC = "roic";
  @SerializedName(SERIALIZED_NAME_ROIC)
  @javax.annotation.Nullable
  private BigDecimal roic;

  public static final String SERIALIZED_NAME_ROIC_HIGH = "roic_high";
  @SerializedName(SERIALIZED_NAME_ROIC_HIGH)
  @javax.annotation.Nullable
  private BigDecimal roicHigh;

  public static final String SERIALIZED_NAME_ROIC_LOW = "roic_low";
  @SerializedName(SERIALIZED_NAME_ROIC_LOW)
  @javax.annotation.Nullable
  private BigDecimal roicLow;

  public static final String SERIALIZED_NAME_ROIC_MED = "roic_med";
  @SerializedName(SERIALIZED_NAME_ROIC_MED)
  @javax.annotation.Nullable
  private BigDecimal roicMed;

  public static final String SERIALIZED_NAME_ROIC_MED5Y = "roic_med_5y";
  @SerializedName(SERIALIZED_NAME_ROIC_MED5Y)
  @javax.annotation.Nullable
  private BigDecimal roicMed5y;

  public static final String SERIALIZED_NAME_ROIIC3Y = "roiic_3y";
  @SerializedName(SERIALIZED_NAME_ROIIC3Y)
  @javax.annotation.Nullable
  private BigDecimal roiic3y;

  public static final String SERIALIZED_NAME_ROIIC3Y_HIGH = "roiic_3y_high";
  @SerializedName(SERIALIZED_NAME_ROIIC3Y_HIGH)
  @javax.annotation.Nullable
  private BigDecimal roiic3yHigh;

  public static final String SERIALIZED_NAME_ROIIC3Y_LOW = "roiic_3y_low";
  @SerializedName(SERIALIZED_NAME_ROIIC3Y_LOW)
  @javax.annotation.Nullable
  private BigDecimal roiic3yLow;

  public static final String SERIALIZED_NAME_ROIIC3Y_MED = "roiic_3y_med";
  @SerializedName(SERIALIZED_NAME_ROIIC3Y_MED)
  @javax.annotation.Nullable
  private BigDecimal roiic3yMed;

  public static final String SERIALIZED_NAME_RVN_PREDC10Y = "rvn_predc_10y";
  @SerializedName(SERIALIZED_NAME_RVN_PREDC10Y)
  @javax.annotation.Nullable
  private BigDecimal rvnPredc10y;

  public static final String SERIALIZED_NAME_SALES = "sales";
  @SerializedName(SERIALIZED_NAME_SALES)
  @javax.annotation.Nullable
  private BigDecimal sales;

  public static final String SERIALIZED_NAME_SALES_LATEST_Q = "sales_latest_q";
  @SerializedName(SERIALIZED_NAME_SALES_LATEST_Q)
  @javax.annotation.Nullable
  private BigDecimal salesLatestQ;

  public static final String SERIALIZED_NAME_SALES_LATEST_Q_NORM = "sales_latest_q_norm";
  @SerializedName(SERIALIZED_NAME_SALES_LATEST_Q_NORM)
  @javax.annotation.Nullable
  private BigDecimal salesLatestQNorm;

  public static final String SERIALIZED_NAME_SHAREHOLDER_YIELD = "shareholder_yield";
  @SerializedName(SERIALIZED_NAME_SHAREHOLDER_YIELD)
  @javax.annotation.Nullable
  private BigDecimal shareholderYield;

  public static final String SERIALIZED_NAME_SHAREHOLDER_YIELD_HIGH = "shareholder_yield_high";
  @SerializedName(SERIALIZED_NAME_SHAREHOLDER_YIELD_HIGH)
  @javax.annotation.Nullable
  private BigDecimal shareholderYieldHigh;

  public static final String SERIALIZED_NAME_SHAREHOLDER_YIELD_LOW = "shareholder_yield_low";
  @SerializedName(SERIALIZED_NAME_SHAREHOLDER_YIELD_LOW)
  @javax.annotation.Nullable
  private BigDecimal shareholderYieldLow;

  public static final String SERIALIZED_NAME_SHAREHOLDER_YIELD_MED = "shareholder_yield_med";
  @SerializedName(SERIALIZED_NAME_SHAREHOLDER_YIELD_MED)
  @javax.annotation.Nullable
  private BigDecimal shareholderYieldMed;

  public static final String SERIALIZED_NAME_SHARES = "shares";
  @SerializedName(SERIALIZED_NAME_SHARES)
  @javax.annotation.Nullable
  private BigDecimal shares;

  public static final String SERIALIZED_NAME_SLOANRATIO = "sloanratio";
  @SerializedName(SERIALIZED_NAME_SLOANRATIO)
  @javax.annotation.Nullable
  private BigDecimal sloanratio;

  public static final String SERIALIZED_NAME_TAX_RATE_MED5Y = "tax_rate_med_5y";
  @SerializedName(SERIALIZED_NAME_TAX_RATE_MED5Y)
  @javax.annotation.Nullable
  private BigDecimal taxRateMed5y;

  public static final String SERIALIZED_NAME_TOTAL_BUYBACK10Y = "total_buyback_10y";
  @SerializedName(SERIALIZED_NAME_TOTAL_BUYBACK10Y)
  @javax.annotation.Nullable
  private BigDecimal totalBuyback10y;

  public static final String SERIALIZED_NAME_TOTAL_BUYBACK1Y = "total_buyback_1y";
  @SerializedName(SERIALIZED_NAME_TOTAL_BUYBACK1Y)
  @javax.annotation.Nullable
  private BigDecimal totalBuyback1y;

  public static final String SERIALIZED_NAME_TOTAL_BUYBACK3Y = "total_buyback_3y";
  @SerializedName(SERIALIZED_NAME_TOTAL_BUYBACK3Y)
  @javax.annotation.Nullable
  private BigDecimal totalBuyback3y;

  public static final String SERIALIZED_NAME_TOTAL_BUYBACK3Y_HIGH = "total_buyback_3y_high";
  @SerializedName(SERIALIZED_NAME_TOTAL_BUYBACK3Y_HIGH)
  @javax.annotation.Nullable
  private BigDecimal totalBuyback3yHigh;

  public static final String SERIALIZED_NAME_TOTAL_BUYBACK3Y_LOW = "total_buyback_3y_low";
  @SerializedName(SERIALIZED_NAME_TOTAL_BUYBACK3Y_LOW)
  @javax.annotation.Nullable
  private BigDecimal totalBuyback3yLow;

  public static final String SERIALIZED_NAME_TOTAL_BUYBACK3Y_MED = "total_buyback_3y_med";
  @SerializedName(SERIALIZED_NAME_TOTAL_BUYBACK3Y_MED)
  @javax.annotation.Nullable
  private BigDecimal totalBuyback3yMed;

  public static final String SERIALIZED_NAME_TOTAL_BUYBACK5Y = "total_buyback_5y";
  @SerializedName(SERIALIZED_NAME_TOTAL_BUYBACK5Y)
  @javax.annotation.Nullable
  private BigDecimal totalBuyback5y;

  public static final String SERIALIZED_NAME_TTM_E_B_I_T = "ttm_EBIT";
  @SerializedName(SERIALIZED_NAME_TTM_E_B_I_T)
  @javax.annotation.Nullable
  private BigDecimal ttmEBIT;

  public static final String SERIALIZED_NAME_TTM_E_B_I_T_D_A = "ttm_EBITDA";
  @SerializedName(SERIALIZED_NAME_TTM_E_B_I_T_D_A)
  @javax.annotation.Nullable
  private BigDecimal ttmEBITDA;

  public static final String SERIALIZED_NAME_TTM_EPS = "ttm_eps";
  @SerializedName(SERIALIZED_NAME_TTM_EPS)
  @javax.annotation.Nullable
  private BigDecimal ttmEps;

  public static final String SERIALIZED_NAME_TTM_EPS_NRI = "ttm_eps_nri";
  @SerializedName(SERIALIZED_NAME_TTM_EPS_NRI)
  @javax.annotation.Nullable
  private BigDecimal ttmEpsNri;

  public static final String SERIALIZED_NAME_TTM_FCF_PER_SHARE = "ttm_fcf_per_share";
  @SerializedName(SERIALIZED_NAME_TTM_FCF_PER_SHARE)
  @javax.annotation.Nullable
  private BigDecimal ttmFcfPerShare;

  public static final String SERIALIZED_NAME_TTM_PRETAXINCOME = "ttm_pretaxincome";
  @SerializedName(SERIALIZED_NAME_TTM_PRETAXINCOME)
  @javax.annotation.Nullable
  private BigDecimal ttmPretaxincome;

  public static final String SERIALIZED_NAME_TTM_SALES = "ttm_sales";
  @SerializedName(SERIALIZED_NAME_TTM_SALES)
  @javax.annotation.Nullable
  private BigDecimal ttmSales;

  public static final String SERIALIZED_NAME_TURNOVER = "turnover";
  @SerializedName(SERIALIZED_NAME_TURNOVER)
  @javax.annotation.Nullable
  private BigDecimal turnover;

  public static final String SERIALIZED_NAME_WACC = "wacc";
  @SerializedName(SERIALIZED_NAME_WACC)
  @javax.annotation.Nullable
  private BigDecimal wacc;

  public static final String SERIALIZED_NAME_WACC_HIGH = "wacc_high";
  @SerializedName(SERIALIZED_NAME_WACC_HIGH)
  @javax.annotation.Nullable
  private BigDecimal waccHigh;

  public static final String SERIALIZED_NAME_WACC_LOW = "wacc_low";
  @SerializedName(SERIALIZED_NAME_WACC_LOW)
  @javax.annotation.Nullable
  private BigDecimal waccLow;

  public static final String SERIALIZED_NAME_WACC_MED = "wacc_med";
  @SerializedName(SERIALIZED_NAME_WACC_MED)
  @javax.annotation.Nullable
  private BigDecimal waccMed;

  public static final String SERIALIZED_NAME_WACC_MED5Y = "wacc_med_5y";
  @SerializedName(SERIALIZED_NAME_WACC_MED5Y)
  @javax.annotation.Nullable
  private BigDecimal waccMed5y;

  public static final String SERIALIZED_NAME_YEARS_OF_FINANCIAL_HISTORY = "years_of_financial_history";
  @SerializedName(SERIALIZED_NAME_YEARS_OF_FINANCIAL_HISTORY)
  @javax.annotation.Nullable
  private BigDecimal yearsOfFinancialHistory;

  public static final String SERIALIZED_NAME_ZSCORE = "zscore";
  @SerializedName(SERIALIZED_NAME_ZSCORE)
  @javax.annotation.Nullable
  private BigDecimal zscore;

  public static final String SERIALIZED_NAME_ZSCORE_HIGH = "zscore_high";
  @SerializedName(SERIALIZED_NAME_ZSCORE_HIGH)
  @javax.annotation.Nullable
  private BigDecimal zscoreHigh;

  public static final String SERIALIZED_NAME_ZSCORE_LOW = "zscore_low";
  @SerializedName(SERIALIZED_NAME_ZSCORE_LOW)
  @javax.annotation.Nullable
  private BigDecimal zscoreLow;

  public static final String SERIALIZED_NAME_ZSCORE_MED = "zscore_med";
  @SerializedName(SERIALIZED_NAME_ZSCORE_MED)
  @javax.annotation.Nullable
  private BigDecimal zscoreMed;

  public StockProfileFundamental() {
  }

  public StockProfileFundamental effectiveInterestRate(@javax.annotation.Nullable BigDecimal effectiveInterestRate) {
    this.effectiveInterestRate = effectiveInterestRate;
    return this;
  }

  /**
   * Effective interest rate on debt is the usage rate that a borrower actually pays on a debt. It is calculated as the positive value of interest expense divided by its average total debt.
   * @return effectiveInterestRate
   */
  @javax.annotation.Nullable
  public BigDecimal getEffectiveInterestRate() {
    return effectiveInterestRate;
  }

  public void setEffectiveInterestRate(@javax.annotation.Nullable BigDecimal effectiveInterestRate) {
    this.effectiveInterestRate = effectiveInterestRate;
  }


  public StockProfileFundamental insiderSharesOwned(@javax.annotation.Nullable BigDecimal insiderSharesOwned) {
    this.insiderSharesOwned = insiderSharesOwned;
    return this;
  }

  /**
   * The number of shares owned by insiders, in millions
   * @return insiderSharesOwned
   */
  @javax.annotation.Nullable
  public BigDecimal getInsiderSharesOwned() {
    return insiderSharesOwned;
  }

  public void setInsiderSharesOwned(@javax.annotation.Nullable BigDecimal insiderSharesOwned) {
    this.insiderSharesOwned = insiderSharesOwned;
  }


  public StockProfileFundamental institutionSharesHeld(@javax.annotation.Nullable BigDecimal institutionSharesHeld) {
    this.institutionSharesHeld = institutionSharesHeld;
    return this;
  }

  /**
   * The number of shares owned by institutions, in millions
   * @return institutionSharesHeld
   */
  @javax.annotation.Nullable
  public BigDecimal getInstitutionSharesHeld() {
    return institutionSharesHeld;
  }

  public void setInstitutionSharesHeld(@javax.annotation.Nullable BigDecimal institutionSharesHeld) {
    this.institutionSharesHeld = institutionSharesHeld;
  }


  public StockProfileFundamental PFD(@javax.annotation.Nullable BigDecimal PFD) {
    this.PFD = PFD;
    return this;
  }

  /**
   * The probability of financial distress, as computed using the Campbell, Hilscher and Szilagyi model.
   * @return PFD
   */
  @javax.annotation.Nullable
  public BigDecimal getPFD() {
    return PFD;
  }

  public void setPFD(@javax.annotation.Nullable BigDecimal PFD) {
    this.PFD = PFD;
  }


  public StockProfileFundamental ROC_JOEL(@javax.annotation.Nullable BigDecimal ROC_JOEL) {
    this.ROC_JOEL = ROC_JOEL;
    return this;
  }

  /**
   * Joel Greenblatt defined Return on Capital differently in his book The Little Book That Still Beats the Market (Little Books. Big Profits). He defines Return on Capital as EBIT divided by the total of Property, Plant and Equipment and net working capital.
   * @return ROC_JOEL
   */
  @javax.annotation.Nullable
  public BigDecimal getROCJOEL() {
    return ROC_JOEL;
  }

  public void setROCJOEL(@javax.annotation.Nullable BigDecimal ROC_JOEL) {
    this.ROC_JOEL = ROC_JOEL;
  }


  public StockProfileFundamental roCJOELHigh(@javax.annotation.Nullable BigDecimal roCJOELHigh) {
    this.roCJOELHigh = roCJOELHigh;
    return this;
  }

  /**
   * Joel Greenblatt defined Return on Capital differently in his book The Little Book That Still Beats the Market (Little Books. Big Profits). He defines Return on Capital as EBIT divided by the total of Property, Plant and Equipment and net working capital.
   * @return roCJOELHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getRoCJOELHigh() {
    return roCJOELHigh;
  }

  public void setRoCJOELHigh(@javax.annotation.Nullable BigDecimal roCJOELHigh) {
    this.roCJOELHigh = roCJOELHigh;
  }


  public StockProfileFundamental roCJOELLow(@javax.annotation.Nullable BigDecimal roCJOELLow) {
    this.roCJOELLow = roCJOELLow;
    return this;
  }

  /**
   * Joel Greenblatt defined Return on Capital differently in his book The Little Book That Still Beats the Market (Little Books. Big Profits). He defines Return on Capital as EBIT divided by the total of Property, Plant and Equipment and net working capital.
   * @return roCJOELLow
   */
  @javax.annotation.Nullable
  public BigDecimal getRoCJOELLow() {
    return roCJOELLow;
  }

  public void setRoCJOELLow(@javax.annotation.Nullable BigDecimal roCJOELLow) {
    this.roCJOELLow = roCJOELLow;
  }


  public StockProfileFundamental roCJOELMed(@javax.annotation.Nullable BigDecimal roCJOELMed) {
    this.roCJOELMed = roCJOELMed;
    return this;
  }

  /**
   * Joel Greenblatt defined Return on Capital differently in his book The Little Book That Still Beats the Market (Little Books. Big Profits). He defines Return on Capital as EBIT divided by the total of Property, Plant and Equipment and net working capital.
   * @return roCJOELMed
   */
  @javax.annotation.Nullable
  public BigDecimal getRoCJOELMed() {
    return roCJOELMed;
  }

  public void setRoCJOELMed(@javax.annotation.Nullable BigDecimal roCJOELMed) {
    this.roCJOELMed = roCJOELMed;
  }


  public StockProfileFundamental roCJOELMed5y(@javax.annotation.Nullable BigDecimal roCJOELMed5y) {
    this.roCJOELMed5y = roCJOELMed5y;
    return this;
  }

  /**
   * Joel Greenblatt defined Return on Capital differently in his book The Little Book That Still Beats the Market (Little Books. Big Profits). He defines Return on Capital as EBIT divided by the total of Property, Plant and Equipment and net working capital.
   * @return roCJOELMed5y
   */
  @javax.annotation.Nullable
  public BigDecimal getRoCJOELMed5y() {
    return roCJOELMed5y;
  }

  public void setRoCJOELMed5y(@javax.annotation.Nullable BigDecimal roCJOELMed5y) {
    this.roCJOELMed5y = roCJOELMed5y;
  }


  public StockProfileFundamental ROTA(@javax.annotation.Nullable BigDecimal ROTA) {
    this.ROTA = ROTA;
    return this;
  }

  /**
   * Return on tangible assets is calculated as Net Income divided by its average total tangible assets. Total tangible assets equals to Total Assets minus Intangible Assets.
   * @return ROTA
   */
  @javax.annotation.Nullable
  public BigDecimal getROTA() {
    return ROTA;
  }

  public void setROTA(@javax.annotation.Nullable BigDecimal ROTA) {
    this.ROTA = ROTA;
  }


  public StockProfileFundamental roTAHigh(@javax.annotation.Nullable BigDecimal roTAHigh) {
    this.roTAHigh = roTAHigh;
    return this;
  }

  /**
   * Return on tangible assets is calculated as Net Income divided by its average total tangible assets. Total tangible assets equals to Total Assets minus Intangible Assets.
   * @return roTAHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getRoTAHigh() {
    return roTAHigh;
  }

  public void setRoTAHigh(@javax.annotation.Nullable BigDecimal roTAHigh) {
    this.roTAHigh = roTAHigh;
  }


  public StockProfileFundamental roTALow(@javax.annotation.Nullable BigDecimal roTALow) {
    this.roTALow = roTALow;
    return this;
  }

  /**
   * Return on tangible assets is calculated as Net Income divided by its average total tangible assets. Total tangible assets equals to Total Assets minus Intangible Assets.
   * @return roTALow
   */
  @javax.annotation.Nullable
  public BigDecimal getRoTALow() {
    return roTALow;
  }

  public void setRoTALow(@javax.annotation.Nullable BigDecimal roTALow) {
    this.roTALow = roTALow;
  }


  public StockProfileFundamental roTAMed(@javax.annotation.Nullable BigDecimal roTAMed) {
    this.roTAMed = roTAMed;
    return this;
  }

  /**
   * Return on tangible assets is calculated as Net Income divided by its average total tangible assets. Total tangible assets equals to Total Assets minus Intangible Assets.
   * @return roTAMed
   */
  @javax.annotation.Nullable
  public BigDecimal getRoTAMed() {
    return roTAMed;
  }

  public void setRoTAMed(@javax.annotation.Nullable BigDecimal roTAMed) {
    this.roTAMed = roTAMed;
  }


  public StockProfileFundamental ROTE(@javax.annotation.Nullable BigDecimal ROTE) {
    this.ROTE = ROTE;
    return this;
  }

  /**
   * Return on tangible equity is calculated as Net Income attributable to Common Stockholders divided by its average total shareholder tangible equity.
   * @return ROTE
   */
  @javax.annotation.Nullable
  public BigDecimal getROTE() {
    return ROTE;
  }

  public void setROTE(@javax.annotation.Nullable BigDecimal ROTE) {
    this.ROTE = ROTE;
  }


  public StockProfileFundamental roTEHigh(@javax.annotation.Nullable BigDecimal roTEHigh) {
    this.roTEHigh = roTEHigh;
    return this;
  }

  /**
   * Return on tangible equity is calculated as Net Income attributable to Common Stockholders divided by its average total shareholder tangible equity.
   * @return roTEHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getRoTEHigh() {
    return roTEHigh;
  }

  public void setRoTEHigh(@javax.annotation.Nullable BigDecimal roTEHigh) {
    this.roTEHigh = roTEHigh;
  }


  public StockProfileFundamental roTELow(@javax.annotation.Nullable BigDecimal roTELow) {
    this.roTELow = roTELow;
    return this;
  }

  /**
   * Return on tangible equity is calculated as Net Income attributable to Common Stockholders divided by its average total shareholder tangible equity.
   * @return roTELow
   */
  @javax.annotation.Nullable
  public BigDecimal getRoTELow() {
    return roTELow;
  }

  public void setRoTELow(@javax.annotation.Nullable BigDecimal roTELow) {
    this.roTELow = roTELow;
  }


  public StockProfileFundamental roTEMed(@javax.annotation.Nullable BigDecimal roTEMed) {
    this.roTEMed = roTEMed;
    return this;
  }

  /**
   * Return on tangible equity is calculated as Net Income attributable to Common Stockholders divided by its average total shareholder tangible equity.
   * @return roTEMed
   */
  @javax.annotation.Nullable
  public BigDecimal getRoTEMed() {
    return roTEMed;
  }

  public void setRoTEMed(@javax.annotation.Nullable BigDecimal roTEMed) {
    this.roTEMed = roTEMed;
  }


  public StockProfileFundamental roTEMed5y(@javax.annotation.Nullable BigDecimal roTEMed5y) {
    this.roTEMed5y = roTEMed5y;
    return this;
  }

  /**
   * Return on tangible equity is calculated as Net Income attributable to Common Stockholders divided by its average total shareholder tangible equity.
   * @return roTEMed5y
   */
  @javax.annotation.Nullable
  public BigDecimal getRoTEMed5y() {
    return roTEMed5y;
  }

  public void setRoTEMed5y(@javax.annotation.Nullable BigDecimal roTEMed5y) {
    this.roTEMed5y = roTEMed5y;
  }


  public StockProfileFundamental SGA(@javax.annotation.Nullable BigDecimal SGA) {
    this.SGA = SGA;
    return this;
  }

  /**
   * Selling, General, &amp; Admin. Expense (SGA) includes the direct and indirect costs and all general and administrative expenses of a company. For instance, personnel cost, advertising, rent, communication costs are all part of SGA.
   * @return SGA
   */
  @javax.annotation.Nullable
  public BigDecimal getSGA() {
    return SGA;
  }

  public void setSGA(@javax.annotation.Nullable BigDecimal SGA) {
    this.SGA = SGA;
  }


  public StockProfileFundamental SNOA(@javax.annotation.Nullable BigDecimal SNOA) {
    this.SNOA = SNOA;
    return this;
  }

  /**
   * Scaled net operating assets (SNOA) is calculated as the difference between  operating assets and operating liabilities, scaled by lagged total assets.
   * @return SNOA
   */
  @javax.annotation.Nullable
  public BigDecimal getSNOA() {
    return SNOA;
  }

  public void setSNOA(@javax.annotation.Nullable BigDecimal SNOA) {
    this.SNOA = SNOA;
  }


  public StockProfileFundamental totalPayoutRatio(@javax.annotation.Nullable BigDecimal totalPayoutRatio) {
    this.totalPayoutRatio = totalPayoutRatio;
    return this;
  }

  /**
   * The total payout ratio is the ratio of the total amount of dividends and share repurchases to the company&#39;s net income.
   * @return totalPayoutRatio
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalPayoutRatio() {
    return totalPayoutRatio;
  }

  public void setTotalPayoutRatio(@javax.annotation.Nullable BigDecimal totalPayoutRatio) {
    this.totalPayoutRatio = totalPayoutRatio;
  }


  public StockProfileFundamental totalPayoutYield(@javax.annotation.Nullable BigDecimal totalPayoutYield) {
    this.totalPayoutYield = totalPayoutYield;
    return this;
  }

  /**
   * Get totalPayoutYield
   * @return totalPayoutYield
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalPayoutYield() {
    return totalPayoutYield;
  }

  public void setTotalPayoutYield(@javax.annotation.Nullable BigDecimal totalPayoutYield) {
    this.totalPayoutYield = totalPayoutYield;
  }


  public StockProfileFundamental afinancialsStartDate(@javax.annotation.Nullable String afinancialsStartDate) {
    this.afinancialsStartDate = afinancialsStartDate;
    return this;
  }

  /**
   * Get afinancialsStartDate
   * @return afinancialsStartDate
   */
  @javax.annotation.Nullable
  public String getAfinancialsStartDate() {
    return afinancialsStartDate;
  }

  public void setAfinancialsStartDate(@javax.annotation.Nullable String afinancialsStartDate) {
    this.afinancialsStartDate = afinancialsStartDate;
  }


  public StockProfileFundamental asset(@javax.annotation.Nullable BigDecimal asset) {
    this.asset = asset;
    return this;
  }

  /**
   * The total amount of current assets
   * @return asset
   */
  @javax.annotation.Nullable
  public BigDecimal getAsset() {
    return asset;
  }

  public void setAsset(@javax.annotation.Nullable BigDecimal asset) {
    this.asset = asset;
  }


  public StockProfileFundamental book(@javax.annotation.Nullable BigDecimal book) {
    this.book = book;
    return this;
  }

  /**
   * Per share value of a company based on common shareholders&#39; equity in the company.
   * @return book
   */
  @javax.annotation.Nullable
  public BigDecimal getBook() {
    return book;
  }

  public void setBook(@javax.annotation.Nullable BigDecimal book) {
    this.book = book;
  }


  public StockProfileFundamental buybackYield(@javax.annotation.Nullable BigDecimal buybackYield) {
    this.buybackYield = buybackYield;
    return this;
  }

  /**
   * Get buybackYield
   * @return buybackYield
   */
  @javax.annotation.Nullable
  public BigDecimal getBuybackYield() {
    return buybackYield;
  }

  public void setBuybackYield(@javax.annotation.Nullable BigDecimal buybackYield) {
    this.buybackYield = buybackYield;
  }


  public StockProfileFundamental buybackYieldHigh(@javax.annotation.Nullable BigDecimal buybackYieldHigh) {
    this.buybackYieldHigh = buybackYieldHigh;
    return this;
  }

  /**
   * Get buybackYieldHigh
   * @return buybackYieldHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getBuybackYieldHigh() {
    return buybackYieldHigh;
  }

  public void setBuybackYieldHigh(@javax.annotation.Nullable BigDecimal buybackYieldHigh) {
    this.buybackYieldHigh = buybackYieldHigh;
  }


  public StockProfileFundamental buybackYieldLow(@javax.annotation.Nullable BigDecimal buybackYieldLow) {
    this.buybackYieldLow = buybackYieldLow;
    return this;
  }

  /**
   * Get buybackYieldLow
   * @return buybackYieldLow
   */
  @javax.annotation.Nullable
  public BigDecimal getBuybackYieldLow() {
    return buybackYieldLow;
  }

  public void setBuybackYieldLow(@javax.annotation.Nullable BigDecimal buybackYieldLow) {
    this.buybackYieldLow = buybackYieldLow;
  }


  public StockProfileFundamental buybackYieldMed(@javax.annotation.Nullable BigDecimal buybackYieldMed) {
    this.buybackYieldMed = buybackYieldMed;
    return this;
  }

  /**
   * Get buybackYieldMed
   * @return buybackYieldMed
   */
  @javax.annotation.Nullable
  public BigDecimal getBuybackYieldMed() {
    return buybackYieldMed;
  }

  public void setBuybackYieldMed(@javax.annotation.Nullable BigDecimal buybackYieldMed) {
    this.buybackYieldMed = buybackYieldMed;
  }


  public StockProfileFundamental cash2debt(@javax.annotation.Nullable BigDecimal cash2debt) {
    this.cash2debt = cash2debt;
    return this;
  }

  /**
   * Cash to Debt Ratio measures the financial strength of a company. It is calculated as a company&#39;s {{cash_equivalents_marketable_securities}} divided by its {{total_debt}}.
   * @return cash2debt
   */
  @javax.annotation.Nullable
  public BigDecimal getCash2debt() {
    return cash2debt;
  }

  public void setCash2debt(@javax.annotation.Nullable BigDecimal cash2debt) {
    this.cash2debt = cash2debt;
  }


  public StockProfileFundamental cash2debtHigh(@javax.annotation.Nullable BigDecimal cash2debtHigh) {
    this.cash2debtHigh = cash2debtHigh;
    return this;
  }

  /**
   * Cash to Debt Ratio measures the financial strength of a company. It is calculated as a company&#39;s cash, cash equivalents, and marketable securities divide by its debt.
   * @return cash2debtHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getCash2debtHigh() {
    return cash2debtHigh;
  }

  public void setCash2debtHigh(@javax.annotation.Nullable BigDecimal cash2debtHigh) {
    this.cash2debtHigh = cash2debtHigh;
  }


  public StockProfileFundamental cash2debtLow(@javax.annotation.Nullable BigDecimal cash2debtLow) {
    this.cash2debtLow = cash2debtLow;
    return this;
  }

  /**
   * Cash to Debt Ratio measures the financial strength of a company. It is calculated as a company&#39;s cash, cash equivalents, and marketable securities divide by its debt.
   * @return cash2debtLow
   */
  @javax.annotation.Nullable
  public BigDecimal getCash2debtLow() {
    return cash2debtLow;
  }

  public void setCash2debtLow(@javax.annotation.Nullable BigDecimal cash2debtLow) {
    this.cash2debtLow = cash2debtLow;
  }


  public StockProfileFundamental cash2debtMed(@javax.annotation.Nullable BigDecimal cash2debtMed) {
    this.cash2debtMed = cash2debtMed;
    return this;
  }

  /**
   * Cash to Debt Ratio measures the financial strength of a company. It is calculated as a company&#39;s cash, cash equivalents, and marketable securities divide by its debt.
   * @return cash2debtMed
   */
  @javax.annotation.Nullable
  public BigDecimal getCash2debtMed() {
    return cash2debtMed;
  }

  public void setCash2debtMed(@javax.annotation.Nullable BigDecimal cash2debtMed) {
    this.cash2debtMed = cash2debtMed;
  }


  public StockProfileFundamental cashRatio(@javax.annotation.Nullable BigDecimal cashRatio) {
    this.cashRatio = cashRatio;
    return this;
  }

  /**
   * The Cash Ratio measures a company’s ability to meet its short-term obligations with cash and near-cash resources. 
   * @return cashRatio
   */
  @javax.annotation.Nullable
  public BigDecimal getCashRatio() {
    return cashRatio;
  }

  public void setCashRatio(@javax.annotation.Nullable BigDecimal cashRatio) {
    this.cashRatio = cashRatio;
  }


  public StockProfileFundamental cashRatioHigh(@javax.annotation.Nullable BigDecimal cashRatioHigh) {
    this.cashRatioHigh = cashRatioHigh;
    return this;
  }

  /**
   * Get cashRatioHigh
   * @return cashRatioHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getCashRatioHigh() {
    return cashRatioHigh;
  }

  public void setCashRatioHigh(@javax.annotation.Nullable BigDecimal cashRatioHigh) {
    this.cashRatioHigh = cashRatioHigh;
  }


  public StockProfileFundamental cashRatioLow(@javax.annotation.Nullable BigDecimal cashRatioLow) {
    this.cashRatioLow = cashRatioLow;
    return this;
  }

  /**
   * Get cashRatioLow
   * @return cashRatioLow
   */
  @javax.annotation.Nullable
  public BigDecimal getCashRatioLow() {
    return cashRatioLow;
  }

  public void setCashRatioLow(@javax.annotation.Nullable BigDecimal cashRatioLow) {
    this.cashRatioLow = cashRatioLow;
  }


  public StockProfileFundamental cashRatioMed(@javax.annotation.Nullable BigDecimal cashRatioMed) {
    this.cashRatioMed = cashRatioMed;
    return this;
  }

  /**
   * Get cashRatioMed
   * @return cashRatioMed
   */
  @javax.annotation.Nullable
  public BigDecimal getCashRatioMed() {
    return cashRatioMed;
  }

  public void setCashRatioMed(@javax.annotation.Nullable BigDecimal cashRatioMed) {
    this.cashRatioMed = cashRatioMed;
  }


  public StockProfileFundamental ccc(@javax.annotation.Nullable BigDecimal ccc) {
    this.ccc = ccc;
    return this;
  }

  /**
   * Cash Conversion Cycle is one of several measures of management effectiveness. It equals Days Sales Outstanding + Days Inventory - Days Payable.
   * @return ccc
   */
  @javax.annotation.Nullable
  public BigDecimal getCcc() {
    return ccc;
  }

  public void setCcc(@javax.annotation.Nullable BigDecimal ccc) {
    this.ccc = ccc;
  }


  public StockProfileFundamental correlationBook(@javax.annotation.Nullable BigDecimal correlationBook) {
    this.correlationBook = correlationBook;
    return this;
  }

  /**
   * The Price vs Book Correlation is the correlation coefficient between the stock price and the book value per share over the past five years.
   * @return correlationBook
   */
  @javax.annotation.Nullable
  public BigDecimal getCorrelationBook() {
    return correlationBook;
  }

  public void setCorrelationBook(@javax.annotation.Nullable BigDecimal correlationBook) {
    this.correlationBook = correlationBook;
  }


  public StockProfileFundamental correlationEpsNri(@javax.annotation.Nullable BigDecimal correlationEpsNri) {
    this.correlationEpsNri = correlationEpsNri;
    return this;
  }

  /**
   * The Price vs EPS without NRI Correlation is the correlation coefficient between the stock price and the EPS without NRI over the past five years.
   * @return correlationEpsNri
   */
  @javax.annotation.Nullable
  public BigDecimal getCorrelationEpsNri() {
    return correlationEpsNri;
  }

  public void setCorrelationEpsNri(@javax.annotation.Nullable BigDecimal correlationEpsNri) {
    this.correlationEpsNri = correlationEpsNri;
  }


  public StockProfileFundamental correlationEvVsEbit(@javax.annotation.Nullable BigDecimal correlationEvVsEbit) {
    this.correlationEvVsEbit = correlationEvVsEbit;
    return this;
  }

  /**
   * Get correlationEvVsEbit
   * @return correlationEvVsEbit
   */
  @javax.annotation.Nullable
  public BigDecimal getCorrelationEvVsEbit() {
    return correlationEvVsEbit;
  }

  public void setCorrelationEvVsEbit(@javax.annotation.Nullable BigDecimal correlationEvVsEbit) {
    this.correlationEvVsEbit = correlationEvVsEbit;
  }


  public StockProfileFundamental correlationEvVsEbitda(@javax.annotation.Nullable BigDecimal correlationEvVsEbitda) {
    this.correlationEvVsEbitda = correlationEvVsEbitda;
    return this;
  }

  /**
   * Get correlationEvVsEbitda
   * @return correlationEvVsEbitda
   */
  @javax.annotation.Nullable
  public BigDecimal getCorrelationEvVsEbitda() {
    return correlationEvVsEbitda;
  }

  public void setCorrelationEvVsEbitda(@javax.annotation.Nullable BigDecimal correlationEvVsEbitda) {
    this.correlationEvVsEbitda = correlationEvVsEbitda;
  }


  public StockProfileFundamental correlationEvVsFcf(@javax.annotation.Nullable BigDecimal correlationEvVsFcf) {
    this.correlationEvVsFcf = correlationEvVsFcf;
    return this;
  }

  /**
   * Get correlationEvVsFcf
   * @return correlationEvVsFcf
   */
  @javax.annotation.Nullable
  public BigDecimal getCorrelationEvVsFcf() {
    return correlationEvVsFcf;
  }

  public void setCorrelationEvVsFcf(@javax.annotation.Nullable BigDecimal correlationEvVsFcf) {
    this.correlationEvVsFcf = correlationEvVsFcf;
  }


  public StockProfileFundamental correlationEvVsPretaxIncome(@javax.annotation.Nullable BigDecimal correlationEvVsPretaxIncome) {
    this.correlationEvVsPretaxIncome = correlationEvVsPretaxIncome;
    return this;
  }

  /**
   * Get correlationEvVsPretaxIncome
   * @return correlationEvVsPretaxIncome
   */
  @javax.annotation.Nullable
  public BigDecimal getCorrelationEvVsPretaxIncome() {
    return correlationEvVsPretaxIncome;
  }

  public void setCorrelationEvVsPretaxIncome(@javax.annotation.Nullable BigDecimal correlationEvVsPretaxIncome) {
    this.correlationEvVsPretaxIncome = correlationEvVsPretaxIncome;
  }


  public StockProfileFundamental correlationEvVsRev(@javax.annotation.Nullable BigDecimal correlationEvVsRev) {
    this.correlationEvVsRev = correlationEvVsRev;
    return this;
  }

  /**
   * Get correlationEvVsRev
   * @return correlationEvVsRev
   */
  @javax.annotation.Nullable
  public BigDecimal getCorrelationEvVsRev() {
    return correlationEvVsRev;
  }

  public void setCorrelationEvVsRev(@javax.annotation.Nullable BigDecimal correlationEvVsRev) {
    this.correlationEvVsRev = correlationEvVsRev;
  }


  public StockProfileFundamental correlationOcf(@javax.annotation.Nullable BigDecimal correlationOcf) {
    this.correlationOcf = correlationOcf;
    return this;
  }

  /**
   * The Price vs Operating Cash Flow Correlation is the correlation coefficient between the stock price and the operating cash flow per share over the past five years.
   * @return correlationOcf
   */
  @javax.annotation.Nullable
  public BigDecimal getCorrelationOcf() {
    return correlationOcf;
  }

  public void setCorrelationOcf(@javax.annotation.Nullable BigDecimal correlationOcf) {
    this.correlationOcf = correlationOcf;
  }


  public StockProfileFundamental correlationRev(@javax.annotation.Nullable BigDecimal correlationRev) {
    this.correlationRev = correlationRev;
    return this;
  }

  /**
   * The Price vs Revenue Correlation is the correlation coefficient between the stock price and the revenue per share over the past five years.
   * @return correlationRev
   */
  @javax.annotation.Nullable
  public BigDecimal getCorrelationRev() {
    return correlationRev;
  }

  public void setCorrelationRev(@javax.annotation.Nullable BigDecimal correlationRev) {
    this.correlationRev = correlationRev;
  }


  public StockProfileFundamental currentRatio(@javax.annotation.Nullable BigDecimal currentRatio) {
    this.currentRatio = currentRatio;
    return this;
  }

  /**
   * The current ratio is a liquidity ratio that measures a company&#39;s ability to pay short-term obligations. It is calculated as a company&#39;s Total Current Assets divides by its Total Current Liabilities.
   * @return currentRatio
   */
  @javax.annotation.Nullable
  public BigDecimal getCurrentRatio() {
    return currentRatio;
  }

  public void setCurrentRatio(@javax.annotation.Nullable BigDecimal currentRatio) {
    this.currentRatio = currentRatio;
  }


  public StockProfileFundamental currentRatioHigh(@javax.annotation.Nullable BigDecimal currentRatioHigh) {
    this.currentRatioHigh = currentRatioHigh;
    return this;
  }

  /**
   * The current ratio is a liquidity ratio that measures a company&#39;s ability to pay short-term obligations. It is calculated as a company&#39;s Total Current Assets divides by its Total Current Liabilities.
   * @return currentRatioHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getCurrentRatioHigh() {
    return currentRatioHigh;
  }

  public void setCurrentRatioHigh(@javax.annotation.Nullable BigDecimal currentRatioHigh) {
    this.currentRatioHigh = currentRatioHigh;
  }


  public StockProfileFundamental currentRatioLow(@javax.annotation.Nullable BigDecimal currentRatioLow) {
    this.currentRatioLow = currentRatioLow;
    return this;
  }

  /**
   * The current ratio is a liquidity ratio that measures a company&#39;s ability to pay short-term obligations. It is calculated as a company&#39;s Total Current Assets divides by its Total Current Liabilities.
   * @return currentRatioLow
   */
  @javax.annotation.Nullable
  public BigDecimal getCurrentRatioLow() {
    return currentRatioLow;
  }

  public void setCurrentRatioLow(@javax.annotation.Nullable BigDecimal currentRatioLow) {
    this.currentRatioLow = currentRatioLow;
  }


  public StockProfileFundamental currentRatioMed(@javax.annotation.Nullable BigDecimal currentRatioMed) {
    this.currentRatioMed = currentRatioMed;
    return this;
  }

  /**
   * The current ratio is a liquidity ratio that measures a company&#39;s ability to pay short-term obligations. It is calculated as a company&#39;s Total Current Assets divides by its Total Current Liabilities.
   * @return currentRatioMed
   */
  @javax.annotation.Nullable
  public BigDecimal getCurrentRatioMed() {
    return currentRatioMed;
  }

  public void setCurrentRatioMed(@javax.annotation.Nullable BigDecimal currentRatioMed) {
    this.currentRatioMed = currentRatioMed;
  }


  public StockProfileFundamental daysinventory(@javax.annotation.Nullable BigDecimal daysinventory) {
    this.daysinventory = daysinventory;
    return this;
  }

  /**
   * The Days Inventory is an efficiency ratio that measures the average number of days the company holds its inventory before selling it. The ratio measures the number of days funds are tied up in inventory. Inventory levels (measured at cost) are divided by sales per day (also measured at cost rather than selling price.)
   * @return daysinventory
   */
  @javax.annotation.Nullable
  public BigDecimal getDaysinventory() {
    return daysinventory;
  }

  public void setDaysinventory(@javax.annotation.Nullable BigDecimal daysinventory) {
    this.daysinventory = daysinventory;
  }


  public StockProfileFundamental daysinventoryHigh(@javax.annotation.Nullable BigDecimal daysinventoryHigh) {
    this.daysinventoryHigh = daysinventoryHigh;
    return this;
  }

  /**
   * The Days Inventory is an efficiency ratio that measures the average number of days the company holds its inventory before selling it. The ratio measures the number of days funds are tied up in inventory. Inventory levels (measured at cost) are divided by sales per day (also measured at cost rather than selling price.)
   * @return daysinventoryHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getDaysinventoryHigh() {
    return daysinventoryHigh;
  }

  public void setDaysinventoryHigh(@javax.annotation.Nullable BigDecimal daysinventoryHigh) {
    this.daysinventoryHigh = daysinventoryHigh;
  }


  public StockProfileFundamental daysinventoryLow(@javax.annotation.Nullable BigDecimal daysinventoryLow) {
    this.daysinventoryLow = daysinventoryLow;
    return this;
  }

  /**
   * The Days Inventory is an efficiency ratio that measures the average number of days the company holds its inventory before selling it. The ratio measures the number of days funds are tied up in inventory. Inventory levels (measured at cost) are divided by sales per day (also measured at cost rather than selling price.)
   * @return daysinventoryLow
   */
  @javax.annotation.Nullable
  public BigDecimal getDaysinventoryLow() {
    return daysinventoryLow;
  }

  public void setDaysinventoryLow(@javax.annotation.Nullable BigDecimal daysinventoryLow) {
    this.daysinventoryLow = daysinventoryLow;
  }


  public StockProfileFundamental daysinventoryMed(@javax.annotation.Nullable BigDecimal daysinventoryMed) {
    this.daysinventoryMed = daysinventoryMed;
    return this;
  }

  /**
   * The Days Inventory is an efficiency ratio that measures the average number of days the company holds its inventory before selling it. The ratio measures the number of days funds are tied up in inventory. Inventory levels (measured at cost) are divided by sales per day (also measured at cost rather than selling price.)
   * @return daysinventoryMed
   */
  @javax.annotation.Nullable
  public BigDecimal getDaysinventoryMed() {
    return daysinventoryMed;
  }

  public void setDaysinventoryMed(@javax.annotation.Nullable BigDecimal daysinventoryMed) {
    this.daysinventoryMed = daysinventoryMed;
  }


  public StockProfileFundamental dayspayable(@javax.annotation.Nullable BigDecimal dayspayable) {
    this.dayspayable = dayspayable;
    return this;
  }

  /**
   * Days payable outstanding (DPO) is an efficiency ratio that measures the average number of days a company takes to pay its suppliers.
   * @return dayspayable
   */
  @javax.annotation.Nullable
  public BigDecimal getDayspayable() {
    return dayspayable;
  }

  public void setDayspayable(@javax.annotation.Nullable BigDecimal dayspayable) {
    this.dayspayable = dayspayable;
  }


  public StockProfileFundamental dayspayableHigh(@javax.annotation.Nullable BigDecimal dayspayableHigh) {
    this.dayspayableHigh = dayspayableHigh;
    return this;
  }

  /**
   * Days payable outstanding (DPO) is an efficiency ratio that measures the average number of days a company takes to pay its suppliers.
   * @return dayspayableHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getDayspayableHigh() {
    return dayspayableHigh;
  }

  public void setDayspayableHigh(@javax.annotation.Nullable BigDecimal dayspayableHigh) {
    this.dayspayableHigh = dayspayableHigh;
  }


  public StockProfileFundamental dayspayableLow(@javax.annotation.Nullable BigDecimal dayspayableLow) {
    this.dayspayableLow = dayspayableLow;
    return this;
  }

  /**
   * Days payable outstanding (DPO) is an efficiency ratio that measures the average number of days a company takes to pay its suppliers.
   * @return dayspayableLow
   */
  @javax.annotation.Nullable
  public BigDecimal getDayspayableLow() {
    return dayspayableLow;
  }

  public void setDayspayableLow(@javax.annotation.Nullable BigDecimal dayspayableLow) {
    this.dayspayableLow = dayspayableLow;
  }


  public StockProfileFundamental dayspayableMed(@javax.annotation.Nullable BigDecimal dayspayableMed) {
    this.dayspayableMed = dayspayableMed;
    return this;
  }

  /**
   * Days payable outstanding (DPO) is an efficiency ratio that measures the average number of days a company takes to pay its suppliers.
   * @return dayspayableMed
   */
  @javax.annotation.Nullable
  public BigDecimal getDayspayableMed() {
    return dayspayableMed;
  }

  public void setDayspayableMed(@javax.annotation.Nullable BigDecimal dayspayableMed) {
    this.dayspayableMed = dayspayableMed;
  }


  public StockProfileFundamental dayssalesoutstand(@javax.annotation.Nullable BigDecimal dayssalesoutstand) {
    this.dayssalesoutstand = dayssalesoutstand;
    return this;
  }

  /**
   * Days sales outstanding (DSO) is a measure of the average number of days that it takes a company to collect payment after a sale has been made.
   * @return dayssalesoutstand
   */
  @javax.annotation.Nullable
  public BigDecimal getDayssalesoutstand() {
    return dayssalesoutstand;
  }

  public void setDayssalesoutstand(@javax.annotation.Nullable BigDecimal dayssalesoutstand) {
    this.dayssalesoutstand = dayssalesoutstand;
  }


  public StockProfileFundamental dayssalesoutstandHigh(@javax.annotation.Nullable BigDecimal dayssalesoutstandHigh) {
    this.dayssalesoutstandHigh = dayssalesoutstandHigh;
    return this;
  }

  /**
   * Days sales outstanding (DSO) is a measure of the average number of days that it takes a company to collect payment after a sale has been made.
   * @return dayssalesoutstandHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getDayssalesoutstandHigh() {
    return dayssalesoutstandHigh;
  }

  public void setDayssalesoutstandHigh(@javax.annotation.Nullable BigDecimal dayssalesoutstandHigh) {
    this.dayssalesoutstandHigh = dayssalesoutstandHigh;
  }


  public StockProfileFundamental dayssalesoutstandLow(@javax.annotation.Nullable BigDecimal dayssalesoutstandLow) {
    this.dayssalesoutstandLow = dayssalesoutstandLow;
    return this;
  }

  /**
   * Days sales outstanding (DSO) is a measure of the average number of days that it takes a company to collect payment after a sale has been made.
   * @return dayssalesoutstandLow
   */
  @javax.annotation.Nullable
  public BigDecimal getDayssalesoutstandLow() {
    return dayssalesoutstandLow;
  }

  public void setDayssalesoutstandLow(@javax.annotation.Nullable BigDecimal dayssalesoutstandLow) {
    this.dayssalesoutstandLow = dayssalesoutstandLow;
  }


  public StockProfileFundamental dayssalesoutstandMed(@javax.annotation.Nullable BigDecimal dayssalesoutstandMed) {
    this.dayssalesoutstandMed = dayssalesoutstandMed;
    return this;
  }

  /**
   * Days sales outstanding (DSO) is a measure of the average number of days that it takes a company to collect payment after a sale has been made.
   * @return dayssalesoutstandMed
   */
  @javax.annotation.Nullable
  public BigDecimal getDayssalesoutstandMed() {
    return dayssalesoutstandMed;
  }

  public void setDayssalesoutstandMed(@javax.annotation.Nullable BigDecimal dayssalesoutstandMed) {
    this.dayssalesoutstandMed = dayssalesoutstandMed;
  }


  public StockProfileFundamental debt2asset(@javax.annotation.Nullable BigDecimal debt2asset) {
    this.debt2asset = debt2asset;
    return this;
  }

  /**
   * Debt to assets is a leverage ratio that defines the total amount of debt relative to assets
   * @return debt2asset
   */
  @javax.annotation.Nullable
  public BigDecimal getDebt2asset() {
    return debt2asset;
  }

  public void setDebt2asset(@javax.annotation.Nullable BigDecimal debt2asset) {
    this.debt2asset = debt2asset;
  }


  public StockProfileFundamental debt2ebitda(@javax.annotation.Nullable BigDecimal debt2ebitda) {
    this.debt2ebitda = debt2ebitda;
    return this;
  }

  /**
   * Debt-to-EBITDA measures a company&#39;s ability to pay off its debt.
   * @return debt2ebitda
   */
  @javax.annotation.Nullable
  public BigDecimal getDebt2ebitda() {
    return debt2ebitda;
  }

  public void setDebt2ebitda(@javax.annotation.Nullable BigDecimal debt2ebitda) {
    this.debt2ebitda = debt2ebitda;
  }


  public StockProfileFundamental debt2ebitdaHigh(@javax.annotation.Nullable BigDecimal debt2ebitdaHigh) {
    this.debt2ebitdaHigh = debt2ebitdaHigh;
    return this;
  }

  /**
   * Debt-to-EBITDA measures a company&#39;s ability to pay off its debt.
   * @return debt2ebitdaHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getDebt2ebitdaHigh() {
    return debt2ebitdaHigh;
  }

  public void setDebt2ebitdaHigh(@javax.annotation.Nullable BigDecimal debt2ebitdaHigh) {
    this.debt2ebitdaHigh = debt2ebitdaHigh;
  }


  public StockProfileFundamental debt2ebitdaLow(@javax.annotation.Nullable BigDecimal debt2ebitdaLow) {
    this.debt2ebitdaLow = debt2ebitdaLow;
    return this;
  }

  /**
   * Debt-to-EBITDA measures a company&#39;s ability to pay off its debt.
   * @return debt2ebitdaLow
   */
  @javax.annotation.Nullable
  public BigDecimal getDebt2ebitdaLow() {
    return debt2ebitdaLow;
  }

  public void setDebt2ebitdaLow(@javax.annotation.Nullable BigDecimal debt2ebitdaLow) {
    this.debt2ebitdaLow = debt2ebitdaLow;
  }


  public StockProfileFundamental debt2ebitdaMed(@javax.annotation.Nullable BigDecimal debt2ebitdaMed) {
    this.debt2ebitdaMed = debt2ebitdaMed;
    return this;
  }

  /**
   * Debt-to-EBITDA measures a company&#39;s ability to pay off its debt.
   * @return debt2ebitdaMed
   */
  @javax.annotation.Nullable
  public BigDecimal getDebt2ebitdaMed() {
    return debt2ebitdaMed;
  }

  public void setDebt2ebitdaMed(@javax.annotation.Nullable BigDecimal debt2ebitdaMed) {
    this.debt2ebitdaMed = debt2ebitdaMed;
  }


  public StockProfileFundamental debt2equity(@javax.annotation.Nullable BigDecimal debt2equity) {
    this.debt2equity = debt2equity;
    return this;
  }

  /**
   * The Debt/Equity (D/E) Ratio is calculated by dividing a company’s total liabilities by its shareholder equity. The ratio is used to evaluate a company&#39;s financial leverage.
   * @return debt2equity
   */
  @javax.annotation.Nullable
  public BigDecimal getDebt2equity() {
    return debt2equity;
  }

  public void setDebt2equity(@javax.annotation.Nullable BigDecimal debt2equity) {
    this.debt2equity = debt2equity;
  }


  public StockProfileFundamental debt2equityHigh(@javax.annotation.Nullable BigDecimal debt2equityHigh) {
    this.debt2equityHigh = debt2equityHigh;
    return this;
  }

  /**
   * The Debt/Equity (D/E) Ratio is calculated by dividing a company’s total liabilities by its shareholder equity. The ratio is used to evaluate a company&#39;s financial leverage.
   * @return debt2equityHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getDebt2equityHigh() {
    return debt2equityHigh;
  }

  public void setDebt2equityHigh(@javax.annotation.Nullable BigDecimal debt2equityHigh) {
    this.debt2equityHigh = debt2equityHigh;
  }


  public StockProfileFundamental debt2equityLow(@javax.annotation.Nullable BigDecimal debt2equityLow) {
    this.debt2equityLow = debt2equityLow;
    return this;
  }

  /**
   * The Debt/Equity (D/E) Ratio is calculated by dividing a company’s total liabilities by its shareholder equity. The ratio is used to evaluate a company&#39;s financial leverage.
   * @return debt2equityLow
   */
  @javax.annotation.Nullable
  public BigDecimal getDebt2equityLow() {
    return debt2equityLow;
  }

  public void setDebt2equityLow(@javax.annotation.Nullable BigDecimal debt2equityLow) {
    this.debt2equityLow = debt2equityLow;
  }


  public StockProfileFundamental debt2equityMed(@javax.annotation.Nullable BigDecimal debt2equityMed) {
    this.debt2equityMed = debt2equityMed;
    return this;
  }

  /**
   * The Debt/Equity (D/E) Ratio is calculated by dividing a company’s total liabilities by its shareholder equity. The ratio is used to evaluate a company&#39;s financial leverage.
   * @return debt2equityMed
   */
  @javax.annotation.Nullable
  public BigDecimal getDebt2equityMed() {
    return debt2equityMed;
  }

  public void setDebt2equityMed(@javax.annotation.Nullable BigDecimal debt2equityMed) {
    this.debt2equityMed = debt2equityMed;
  }


  public StockProfileFundamental debt2rev(@javax.annotation.Nullable BigDecimal debt2rev) {
    this.debt2rev = debt2rev;
    return this;
  }

  /**
   * The ratio of long-term debt to revenue
   * @return debt2rev
   */
  @javax.annotation.Nullable
  public BigDecimal getDebt2rev() {
    return debt2rev;
  }

  public void setDebt2rev(@javax.annotation.Nullable BigDecimal debt2rev) {
    this.debt2rev = debt2rev;
  }


  public StockProfileFundamental eps(@javax.annotation.Nullable BigDecimal eps) {
    this.eps = eps;
    return this;
  }

  /**
   * Earnings per share (EPS) is the portion of a company&#39;s profit allocated to each share of common stock.
   * @return eps
   */
  @javax.annotation.Nullable
  public BigDecimal getEps() {
    return eps;
  }

  public void setEps(@javax.annotation.Nullable BigDecimal eps) {
    this.eps = eps;
  }


  public StockProfileFundamental epsLatestQ(@javax.annotation.Nullable BigDecimal epsLatestQ) {
    this.epsLatestQ = epsLatestQ;
    return this;
  }

  /**
   * Get epsLatestQ
   * @return epsLatestQ
   */
  @javax.annotation.Nullable
  public BigDecimal getEpsLatestQ() {
    return epsLatestQ;
  }

  public void setEpsLatestQ(@javax.annotation.Nullable BigDecimal epsLatestQ) {
    this.epsLatestQ = epsLatestQ;
  }


  public StockProfileFundamental epsNri(@javax.annotation.Nullable BigDecimal epsNri) {
    this.epsNri = epsNri;
    return this;
  }

  /**
   * Earnings Per Share (EPS) is the single most important variable used by Wall Street in determining the earnings power of a company. But investors need to be aware that Earnings per Share can be easily manipulated by adjusting depreciation and amortization rate or non-recurring items. That&#39;s why GuruFocus lists Earnings per share without Non-Recurring Items, which better reflects the company&#39;s underlying performance.    Earnings Per Share without Non-Recurring Items is the amount of earnings without non-recurring items per outstanding share of the company&amp;#146;s stock. In calculating earnings per share without non-recurring items, the dividends of preferred stocks and non-recurring items need to subtracted from the total net income first.
   * @return epsNri
   */
  @javax.annotation.Nullable
  public BigDecimal getEpsNri() {
    return epsNri;
  }

  public void setEpsNri(@javax.annotation.Nullable BigDecimal epsNri) {
    this.epsNri = epsNri;
  }


  public StockProfileFundamental equity2asset(@javax.annotation.Nullable BigDecimal equity2asset) {
    this.equity2asset = equity2asset;
    return this;
  }

  /**
   * Equity to Asset ratio is calculated as shareholder&#39;s tangible equity divided by its total asset.
   * @return equity2asset
   */
  @javax.annotation.Nullable
  public BigDecimal getEquity2asset() {
    return equity2asset;
  }

  public void setEquity2asset(@javax.annotation.Nullable BigDecimal equity2asset) {
    this.equity2asset = equity2asset;
  }


  public StockProfileFundamental equity2assetHigh(@javax.annotation.Nullable BigDecimal equity2assetHigh) {
    this.equity2assetHigh = equity2assetHigh;
    return this;
  }

  /**
   * Equity to Asset ratio is calculated as shareholder&#39;s tangible equity divided by its total asset.
   * @return equity2assetHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getEquity2assetHigh() {
    return equity2assetHigh;
  }

  public void setEquity2assetHigh(@javax.annotation.Nullable BigDecimal equity2assetHigh) {
    this.equity2assetHigh = equity2assetHigh;
  }


  public StockProfileFundamental equity2assetLow(@javax.annotation.Nullable BigDecimal equity2assetLow) {
    this.equity2assetLow = equity2assetLow;
    return this;
  }

  /**
   * Equity to Asset ratio is calculated as shareholder&#39;s tangible equity divided by its total asset.
   * @return equity2assetLow
   */
  @javax.annotation.Nullable
  public BigDecimal getEquity2assetLow() {
    return equity2assetLow;
  }

  public void setEquity2assetLow(@javax.annotation.Nullable BigDecimal equity2assetLow) {
    this.equity2assetLow = equity2assetLow;
  }


  public StockProfileFundamental equity2assetMed(@javax.annotation.Nullable BigDecimal equity2assetMed) {
    this.equity2assetMed = equity2assetMed;
    return this;
  }

  /**
   * Equity to Asset ratio is calculated as shareholder&#39;s tangible equity divided by its total asset.
   * @return equity2assetMed
   */
  @javax.annotation.Nullable
  public BigDecimal getEquity2assetMed() {
    return equity2assetMed;
  }

  public void setEquity2assetMed(@javax.annotation.Nullable BigDecimal equity2assetMed) {
    this.equity2assetMed = equity2assetMed;
  }


  public StockProfileFundamental evMorn(@javax.annotation.Nullable BigDecimal evMorn) {
    this.evMorn = evMorn;
    return this;
  }

  /**
   * Enterprise Value is calculated as the market cap plus debt and minority interest and preferred shares, minus total cash, cash equivalents, and marketable securities.
   * @return evMorn
   */
  @javax.annotation.Nullable
  public BigDecimal getEvMorn() {
    return evMorn;
  }

  public void setEvMorn(@javax.annotation.Nullable BigDecimal evMorn) {
    this.evMorn = evMorn;
  }


  public StockProfileFundamental evMornNorm(@javax.annotation.Nullable BigDecimal evMornNorm) {
    this.evMornNorm = evMornNorm;
    return this;
  }

  /**
   * Enterprise Value is calculated as the market cap plus debt and minority interest and preferred shares, minus total cash, cash equivalents, and marketable securities.
   * @return evMornNorm
   */
  @javax.annotation.Nullable
  public BigDecimal getEvMornNorm() {
    return evMornNorm;
  }

  public void setEvMornNorm(@javax.annotation.Nullable BigDecimal evMornNorm) {
    this.evMornNorm = evMornNorm;
  }


  public StockProfileFundamental fscore(@javax.annotation.Nullable BigDecimal fscore) {
    this.fscore = fscore;
    return this;
  }

  /**
   * Piotroski F-Score is a number between 0-9 which is used to assess strength of company&#39;s financial position.
   * @return fscore
   */
  @javax.annotation.Nullable
  public BigDecimal getFscore() {
    return fscore;
  }

  public void setFscore(@javax.annotation.Nullable BigDecimal fscore) {
    this.fscore = fscore;
  }


  public StockProfileFundamental fscoreHigh(@javax.annotation.Nullable BigDecimal fscoreHigh) {
    this.fscoreHigh = fscoreHigh;
    return this;
  }

  /**
   * Piotroski F-Score is a number between 0-9 which is used to assess strength of company&#39;s financial position.
   * @return fscoreHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getFscoreHigh() {
    return fscoreHigh;
  }

  public void setFscoreHigh(@javax.annotation.Nullable BigDecimal fscoreHigh) {
    this.fscoreHigh = fscoreHigh;
  }


  public StockProfileFundamental fscoreLow(@javax.annotation.Nullable BigDecimal fscoreLow) {
    this.fscoreLow = fscoreLow;
    return this;
  }

  /**
   * Piotroski F-Score is a number between 0-9 which is used to assess strength of company&#39;s financial position.
   * @return fscoreLow
   */
  @javax.annotation.Nullable
  public BigDecimal getFscoreLow() {
    return fscoreLow;
  }

  public void setFscoreLow(@javax.annotation.Nullable BigDecimal fscoreLow) {
    this.fscoreLow = fscoreLow;
  }


  public StockProfileFundamental fscoreMed(@javax.annotation.Nullable BigDecimal fscoreMed) {
    this.fscoreMed = fscoreMed;
    return this;
  }

  /**
   * Piotroski F-Score is a number between 0-9 which is used to assess strength of company&#39;s financial position.
   * @return fscoreMed
   */
  @javax.annotation.Nullable
  public BigDecimal getFscoreMed() {
    return fscoreMed;
  }

  public void setFscoreMed(@javax.annotation.Nullable BigDecimal fscoreMed) {
    this.fscoreMed = fscoreMed;
  }


  public StockProfileFundamental goodwill2asset(@javax.annotation.Nullable BigDecimal goodwill2asset) {
    this.goodwill2asset = goodwill2asset;
    return this;
  }

  /**
   * It is a ratio that measures how much goodwill a company is recording compared to the total level of its assets.
   * @return goodwill2asset
   */
  @javax.annotation.Nullable
  public BigDecimal getGoodwill2asset() {
    return goodwill2asset;
  }

  public void setGoodwill2asset(@javax.annotation.Nullable BigDecimal goodwill2asset) {
    this.goodwill2asset = goodwill2asset;
  }


  public StockProfileFundamental grossprofit(@javax.annotation.Nullable BigDecimal grossprofit) {
    this.grossprofit = grossprofit;
    return this;
  }

  /**
   * The gross profit over the trailing 12 months
   * @return grossprofit
   */
  @javax.annotation.Nullable
  public BigDecimal getGrossprofit() {
    return grossprofit;
  }

  public void setGrossprofit(@javax.annotation.Nullable BigDecimal grossprofit) {
    this.grossprofit = grossprofit;
  }


  public StockProfileFundamental grossprofit2asset(@javax.annotation.Nullable BigDecimal grossprofit2asset) {
    this.grossprofit2asset = grossprofit2asset;
    return this;
  }

  /**
   * The ratio of a company&#39;s gross profit to total assets
   * @return grossprofit2asset
   */
  @javax.annotation.Nullable
  public BigDecimal getGrossprofit2asset() {
    return grossprofit2asset;
  }

  public void setGrossprofit2asset(@javax.annotation.Nullable BigDecimal grossprofit2asset) {
    this.grossprofit2asset = grossprofit2asset;
  }


  public StockProfileFundamental grossprofit2tangibleasset(@javax.annotation.Nullable BigDecimal grossprofit2tangibleasset) {
    this.grossprofit2tangibleasset = grossprofit2tangibleasset;
    return this;
  }

  /**
   * The ratio of a company&#39;s gross profit to tangible assets
   * @return grossprofit2tangibleasset
   */
  @javax.annotation.Nullable
  public BigDecimal getGrossprofit2tangibleasset() {
    return grossprofit2tangibleasset;
  }

  public void setGrossprofit2tangibleasset(@javax.annotation.Nullable BigDecimal grossprofit2tangibleasset) {
    this.grossprofit2tangibleasset = grossprofit2tangibleasset;
  }


  public StockProfileFundamental insiderOwnership(@javax.annotation.Nullable BigDecimal insiderOwnership) {
    this.insiderOwnership = insiderOwnership;
    return this;
  }

  /**
   * Insider ownership is the percentage of shares that are owned by company insiders relative to the total shares outstanding.
   * @return insiderOwnership
   */
  @javax.annotation.Nullable
  public BigDecimal getInsiderOwnership() {
    return insiderOwnership;
  }

  public void setInsiderOwnership(@javax.annotation.Nullable BigDecimal insiderOwnership) {
    this.insiderOwnership = insiderOwnership;
  }


  public StockProfileFundamental instOwnership(@javax.annotation.Nullable BigDecimal instOwnership) {
    this.instOwnership = instOwnership;
    return this;
  }

  /**
   * Institutional ownership is the percentage of shares that are owned by institutions out of the total shares outstanding.
   * @return instOwnership
   */
  @javax.annotation.Nullable
  public BigDecimal getInstOwnership() {
    return instOwnership;
  }

  public void setInstOwnership(@javax.annotation.Nullable BigDecimal instOwnership) {
    this.instOwnership = instOwnership;
  }


  public StockProfileFundamental interestCoverage(@javax.annotation.Nullable BigDecimal interestCoverage) {
    this.interestCoverage = interestCoverage;
    return this;
  }

  /**
   * Interest Coverage is a ratio that determines how easily a company can pay interest expenses on outstanding debt.
   * @return interestCoverage
   */
  @javax.annotation.Nullable
  public BigDecimal getInterestCoverage() {
    return interestCoverage;
  }

  public void setInterestCoverage(@javax.annotation.Nullable BigDecimal interestCoverage) {
    this.interestCoverage = interestCoverage;
  }


  public StockProfileFundamental interestCoverageHigh(@javax.annotation.Nullable BigDecimal interestCoverageHigh) {
    this.interestCoverageHigh = interestCoverageHigh;
    return this;
  }

  /**
   * Interest Coverage is a ratio that determines how easily a company can pay interest expenses on outstanding debt.
   * @return interestCoverageHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getInterestCoverageHigh() {
    return interestCoverageHigh;
  }

  public void setInterestCoverageHigh(@javax.annotation.Nullable BigDecimal interestCoverageHigh) {
    this.interestCoverageHigh = interestCoverageHigh;
  }


  public StockProfileFundamental interestCoverageLow(@javax.annotation.Nullable BigDecimal interestCoverageLow) {
    this.interestCoverageLow = interestCoverageLow;
    return this;
  }

  /**
   * Interest Coverage is a ratio that determines how easily a company can pay interest expenses on outstanding debt.
   * @return interestCoverageLow
   */
  @javax.annotation.Nullable
  public BigDecimal getInterestCoverageLow() {
    return interestCoverageLow;
  }

  public void setInterestCoverageLow(@javax.annotation.Nullable BigDecimal interestCoverageLow) {
    this.interestCoverageLow = interestCoverageLow;
  }


  public StockProfileFundamental interestCoverageMed(@javax.annotation.Nullable BigDecimal interestCoverageMed) {
    this.interestCoverageMed = interestCoverageMed;
    return this;
  }

  /**
   * Interest Coverage is a ratio that determines how easily a company can pay interest expenses on outstanding debt.
   * @return interestCoverageMed
   */
  @javax.annotation.Nullable
  public BigDecimal getInterestCoverageMed() {
    return interestCoverageMed;
  }

  public void setInterestCoverageMed(@javax.annotation.Nullable BigDecimal interestCoverageMed) {
    this.interestCoverageMed = interestCoverageMed;
  }


  public StockProfileFundamental inventory2sales(@javax.annotation.Nullable BigDecimal inventory2sales) {
    this.inventory2sales = inventory2sales;
    return this;
  }

  /**
   * The ratio of total inventory to total revenues
   * @return inventory2sales
   */
  @javax.annotation.Nullable
  public BigDecimal getInventory2sales() {
    return inventory2sales;
  }

  public void setInventory2sales(@javax.annotation.Nullable BigDecimal inventory2sales) {
    this.inventory2sales = inventory2sales;
  }


  public StockProfileFundamental inventoryTurnover(@javax.annotation.Nullable BigDecimal inventoryTurnover) {
    this.inventoryTurnover = inventoryTurnover;
    return this;
  }

  /**
   * The ratio of cost of goods sold to total inventories
   * @return inventoryTurnover
   */
  @javax.annotation.Nullable
  public BigDecimal getInventoryTurnover() {
    return inventoryTurnover;
  }

  public void setInventoryTurnover(@javax.annotation.Nullable BigDecimal inventoryTurnover) {
    this.inventoryTurnover = inventoryTurnover;
  }


  public StockProfileFundamental latestEarningsReleaseDate(@javax.annotation.Nullable String latestEarningsReleaseDate) {
    this.latestEarningsReleaseDate = latestEarningsReleaseDate;
    return this;
  }

  /**
   * Get latestEarningsReleaseDate
   * @return latestEarningsReleaseDate
   */
  @javax.annotation.Nullable
  public String getLatestEarningsReleaseDate() {
    return latestEarningsReleaseDate;
  }

  public void setLatestEarningsReleaseDate(@javax.annotation.Nullable String latestEarningsReleaseDate) {
    this.latestEarningsReleaseDate = latestEarningsReleaseDate;
  }


  public StockProfileFundamental liabilitiesToAssets(@javax.annotation.Nullable BigDecimal liabilitiesToAssets) {
    this.liabilitiesToAssets = liabilitiesToAssets;
    return this;
  }

  /**
   * Get liabilitiesToAssets
   * @return liabilitiesToAssets
   */
  @javax.annotation.Nullable
  public BigDecimal getLiabilitiesToAssets() {
    return liabilitiesToAssets;
  }

  public void setLiabilitiesToAssets(@javax.annotation.Nullable BigDecimal liabilitiesToAssets) {
    this.liabilitiesToAssets = liabilitiesToAssets;
  }


  public StockProfileFundamental mktcap(@javax.annotation.Nullable BigDecimal mktcap) {
    this.mktcap = mktcap;
    return this;
  }

  /**
   * Market cap is the short version of market capitalization. It is the total market value to buy the whole company. It is equal to the share price times the number of shares outstanding.
   * @return mktcap
   */
  @javax.annotation.Nullable
  public BigDecimal getMktcap() {
    return mktcap;
  }

  public void setMktcap(@javax.annotation.Nullable BigDecimal mktcap) {
    this.mktcap = mktcap;
  }


  public StockProfileFundamental mktcapNorm(@javax.annotation.Nullable BigDecimal mktcapNorm) {
    this.mktcapNorm = mktcapNorm;
    return this;
  }

  /**
   * Market cap is the total market value to buy the whole company. It is equal to the share price times the number of Shares Outstanding (EOP).
   * @return mktcapNorm
   */
  @javax.annotation.Nullable
  public BigDecimal getMktcapNorm() {
    return mktcapNorm;
  }

  public void setMktcapNorm(@javax.annotation.Nullable BigDecimal mktcapNorm) {
    this.mktcapNorm = mktcapNorm;
  }


  public StockProfileFundamental mscore(@javax.annotation.Nullable BigDecimal mscore) {
    this.mscore = mscore;
    return this;
  }

  /**
   * Beneish&#39;s M-Score is a mathematical model that uses eight financial ratios weighted by coefficients to identify whether a company has manipulated its profits.
   * @return mscore
   */
  @javax.annotation.Nullable
  public BigDecimal getMscore() {
    return mscore;
  }

  public void setMscore(@javax.annotation.Nullable BigDecimal mscore) {
    this.mscore = mscore;
  }


  public StockProfileFundamental mscoreHigh(@javax.annotation.Nullable BigDecimal mscoreHigh) {
    this.mscoreHigh = mscoreHigh;
    return this;
  }

  /**
   * Beneish&#39;s M-Score is a mathematical model that uses eight financial ratios weighted by coefficients to identify whether a company has manipulated its profits.
   * @return mscoreHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getMscoreHigh() {
    return mscoreHigh;
  }

  public void setMscoreHigh(@javax.annotation.Nullable BigDecimal mscoreHigh) {
    this.mscoreHigh = mscoreHigh;
  }


  public StockProfileFundamental mscoreLow(@javax.annotation.Nullable BigDecimal mscoreLow) {
    this.mscoreLow = mscoreLow;
    return this;
  }

  /**
   * Beneish&#39;s M-Score is a mathematical model that uses eight financial ratios weighted by coefficients to identify whether a company has manipulated its profits.
   * @return mscoreLow
   */
  @javax.annotation.Nullable
  public BigDecimal getMscoreLow() {
    return mscoreLow;
  }

  public void setMscoreLow(@javax.annotation.Nullable BigDecimal mscoreLow) {
    this.mscoreLow = mscoreLow;
  }


  public StockProfileFundamental mscoreMed(@javax.annotation.Nullable BigDecimal mscoreMed) {
    this.mscoreMed = mscoreMed;
    return this;
  }

  /**
   * Beneish&#39;s M-Score is a mathematical model that uses eight financial ratios weighted by coefficients to identify whether a company has manipulated its profits.
   * @return mscoreMed
   */
  @javax.annotation.Nullable
  public BigDecimal getMscoreMed() {
    return mscoreMed;
  }

  public void setMscoreMed(@javax.annotation.Nullable BigDecimal mscoreMed) {
    this.mscoreMed = mscoreMed;
  }


  public StockProfileFundamental netDebtPaydownYield(@javax.annotation.Nullable BigDecimal netDebtPaydownYield) {
    this.netDebtPaydownYield = netDebtPaydownYield;
    return this;
  }

  /**
   * Net Debt Paydown Yield is a metric that evaluates the total amount of debt a company has paid in relation to its market capitalization. This metric provides insight into a company&#39;s willingness and ability to reduce its debt.
   * @return netDebtPaydownYield
   */
  @javax.annotation.Nullable
  public BigDecimal getNetDebtPaydownYield() {
    return netDebtPaydownYield;
  }

  public void setNetDebtPaydownYield(@javax.annotation.Nullable BigDecimal netDebtPaydownYield) {
    this.netDebtPaydownYield = netDebtPaydownYield;
  }


  public StockProfileFundamental netDebtPaydownYieldHigh(@javax.annotation.Nullable BigDecimal netDebtPaydownYieldHigh) {
    this.netDebtPaydownYieldHigh = netDebtPaydownYieldHigh;
    return this;
  }

  /**
   * Get netDebtPaydownYieldHigh
   * @return netDebtPaydownYieldHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getNetDebtPaydownYieldHigh() {
    return netDebtPaydownYieldHigh;
  }

  public void setNetDebtPaydownYieldHigh(@javax.annotation.Nullable BigDecimal netDebtPaydownYieldHigh) {
    this.netDebtPaydownYieldHigh = netDebtPaydownYieldHigh;
  }


  public StockProfileFundamental netDebtPaydownYieldLow(@javax.annotation.Nullable BigDecimal netDebtPaydownYieldLow) {
    this.netDebtPaydownYieldLow = netDebtPaydownYieldLow;
    return this;
  }

  /**
   * Get netDebtPaydownYieldLow
   * @return netDebtPaydownYieldLow
   */
  @javax.annotation.Nullable
  public BigDecimal getNetDebtPaydownYieldLow() {
    return netDebtPaydownYieldLow;
  }

  public void setNetDebtPaydownYieldLow(@javax.annotation.Nullable BigDecimal netDebtPaydownYieldLow) {
    this.netDebtPaydownYieldLow = netDebtPaydownYieldLow;
  }


  public StockProfileFundamental netDebtPaydownYieldMed(@javax.annotation.Nullable BigDecimal netDebtPaydownYieldMed) {
    this.netDebtPaydownYieldMed = netDebtPaydownYieldMed;
    return this;
  }

  /**
   * Get netDebtPaydownYieldMed
   * @return netDebtPaydownYieldMed
   */
  @javax.annotation.Nullable
  public BigDecimal getNetDebtPaydownYieldMed() {
    return netDebtPaydownYieldMed;
  }

  public void setNetDebtPaydownYieldMed(@javax.annotation.Nullable BigDecimal netDebtPaydownYieldMed) {
    this.netDebtPaydownYieldMed = netDebtPaydownYieldMed;
  }


  public StockProfileFundamental nextEarningsDate(@javax.annotation.Nullable String nextEarningsDate) {
    this.nextEarningsDate = nextEarningsDate;
    return this;
  }

  /**
   * The next day a company releases its earnings
   * @return nextEarningsDate
   */
  @javax.annotation.Nullable
  public String getNextEarningsDate() {
    return nextEarningsDate;
  }

  public void setNextEarningsDate(@javax.annotation.Nullable String nextEarningsDate) {
    this.nextEarningsDate = nextEarningsDate;
  }


  public StockProfileFundamental numGoodSigns(@javax.annotation.Nullable BigDecimal numGoodSigns) {
    this.numGoodSigns = numGoodSigns;
    return this;
  }

  /**
   * The number of positive investing signs
   * @return numGoodSigns
   */
  @javax.annotation.Nullable
  public BigDecimal getNumGoodSigns() {
    return numGoodSigns;
  }

  public void setNumGoodSigns(@javax.annotation.Nullable BigDecimal numGoodSigns) {
    this.numGoodSigns = numGoodSigns;
  }


  public StockProfileFundamental numWarningSignsMeidum(@javax.annotation.Nullable BigDecimal numWarningSignsMeidum) {
    this.numWarningSignsMeidum = numWarningSignsMeidum;
    return this;
  }

  /**
   * The number of medium warning signs
   * @return numWarningSignsMeidum
   */
  @javax.annotation.Nullable
  public BigDecimal getNumWarningSignsMeidum() {
    return numWarningSignsMeidum;
  }

  public void setNumWarningSignsMeidum(@javax.annotation.Nullable BigDecimal numWarningSignsMeidum) {
    this.numWarningSignsMeidum = numWarningSignsMeidum;
  }


  public StockProfileFundamental numWarningSignsSevere(@javax.annotation.Nullable BigDecimal numWarningSignsSevere) {
    this.numWarningSignsSevere = numWarningSignsSevere;
    return this;
  }

  /**
   * The number of severe warning signs
   * @return numWarningSignsSevere
   */
  @javax.annotation.Nullable
  public BigDecimal getNumWarningSignsSevere() {
    return numWarningSignsSevere;
  }

  public void setNumWarningSignsSevere(@javax.annotation.Nullable BigDecimal numWarningSignsSevere) {
    this.numWarningSignsSevere = numWarningSignsSevere;
  }


  public StockProfileFundamental pastEarningsDate(@javax.annotation.Nullable String pastEarningsDate) {
    this.pastEarningsDate = pastEarningsDate;
    return this;
  }

  /**
   * The most-recent financial update of a company
   * @return pastEarningsDate
   */
  @javax.annotation.Nullable
  public String getPastEarningsDate() {
    return pastEarningsDate;
  }

  public void setPastEarningsDate(@javax.annotation.Nullable String pastEarningsDate) {
    this.pastEarningsDate = pastEarningsDate;
  }


  public StockProfileFundamental quickRatio(@javax.annotation.Nullable BigDecimal quickRatio) {
    this.quickRatio = quickRatio;
    return this;
  }

  /**
   * The quick ratio measures a company&#39;s ability to meet its short-term obligations with its most liquid assets.
   * @return quickRatio
   */
  @javax.annotation.Nullable
  public BigDecimal getQuickRatio() {
    return quickRatio;
  }

  public void setQuickRatio(@javax.annotation.Nullable BigDecimal quickRatio) {
    this.quickRatio = quickRatio;
  }


  public StockProfileFundamental quickRatioHigh(@javax.annotation.Nullable BigDecimal quickRatioHigh) {
    this.quickRatioHigh = quickRatioHigh;
    return this;
  }

  /**
   * The quick ratio measures a company&#39;s ability to meet its short-term obligations with its most liquid assets.
   * @return quickRatioHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getQuickRatioHigh() {
    return quickRatioHigh;
  }

  public void setQuickRatioHigh(@javax.annotation.Nullable BigDecimal quickRatioHigh) {
    this.quickRatioHigh = quickRatioHigh;
  }


  public StockProfileFundamental quickRatioLow(@javax.annotation.Nullable BigDecimal quickRatioLow) {
    this.quickRatioLow = quickRatioLow;
    return this;
  }

  /**
   * The quick ratio measures a company&#39;s ability to meet its short-term obligations with its most liquid assets.
   * @return quickRatioLow
   */
  @javax.annotation.Nullable
  public BigDecimal getQuickRatioLow() {
    return quickRatioLow;
  }

  public void setQuickRatioLow(@javax.annotation.Nullable BigDecimal quickRatioLow) {
    this.quickRatioLow = quickRatioLow;
  }


  public StockProfileFundamental quickRatioMed(@javax.annotation.Nullable BigDecimal quickRatioMed) {
    this.quickRatioMed = quickRatioMed;
    return this;
  }

  /**
   * The quick ratio measures a company&#39;s ability to meet its short-term obligations with its most liquid assets.
   * @return quickRatioMed
   */
  @javax.annotation.Nullable
  public BigDecimal getQuickRatioMed() {
    return quickRatioMed;
  }

  public void setQuickRatioMed(@javax.annotation.Nullable BigDecimal quickRatioMed) {
    this.quickRatioMed = quickRatioMed;
  }


  public StockProfileFundamental receivablesTurnover(@javax.annotation.Nullable BigDecimal receivablesTurnover) {
    this.receivablesTurnover = receivablesTurnover;
    return this;
  }

  /**
   * The accounts receivables turnover ratio measures the number of times a company collects its average accounts receivable balance. It is calculated as Revenue divided by Average Accounts Receivable.
   * @return receivablesTurnover
   */
  @javax.annotation.Nullable
  public BigDecimal getReceivablesTurnover() {
    return receivablesTurnover;
  }

  public void setReceivablesTurnover(@javax.annotation.Nullable BigDecimal receivablesTurnover) {
    this.receivablesTurnover = receivablesTurnover;
  }


  public StockProfileFundamental relatedComp(@javax.annotation.Nullable String relatedComp) {
    this.relatedComp = relatedComp;
    return this;
  }

  /**
   * A list of the company&#39;s competitors.
   * @return relatedComp
   */
  @javax.annotation.Nullable
  public String getRelatedComp() {
    return relatedComp;
  }

  public void setRelatedComp(@javax.annotation.Nullable String relatedComp) {
    this.relatedComp = relatedComp;
  }


  public StockProfileFundamental roa(@javax.annotation.Nullable BigDecimal roa) {
    this.roa = roa;
    return this;
  }

  /**
   * Return on assets is calculated as Net Income divided by its Total Assets.
   * @return roa
   */
  @javax.annotation.Nullable
  public BigDecimal getRoa() {
    return roa;
  }

  public void setRoa(@javax.annotation.Nullable BigDecimal roa) {
    this.roa = roa;
  }


  public StockProfileFundamental roaHigh(@javax.annotation.Nullable BigDecimal roaHigh) {
    this.roaHigh = roaHigh;
    return this;
  }

  /**
   * Return on assets is calculated as Net Income divided by its Total Assets.
   * @return roaHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getRoaHigh() {
    return roaHigh;
  }

  public void setRoaHigh(@javax.annotation.Nullable BigDecimal roaHigh) {
    this.roaHigh = roaHigh;
  }


  public StockProfileFundamental roaLow(@javax.annotation.Nullable BigDecimal roaLow) {
    this.roaLow = roaLow;
    return this;
  }

  /**
   * Return on assets is calculated as Net Income divided by its Total Assets.
   * @return roaLow
   */
  @javax.annotation.Nullable
  public BigDecimal getRoaLow() {
    return roaLow;
  }

  public void setRoaLow(@javax.annotation.Nullable BigDecimal roaLow) {
    this.roaLow = roaLow;
  }


  public StockProfileFundamental roaMed(@javax.annotation.Nullable BigDecimal roaMed) {
    this.roaMed = roaMed;
    return this;
  }

  /**
   * Return on assets is calculated as Net Income divided by its Total Assets.
   * @return roaMed
   */
  @javax.annotation.Nullable
  public BigDecimal getRoaMed() {
    return roaMed;
  }

  public void setRoaMed(@javax.annotation.Nullable BigDecimal roaMed) {
    this.roaMed = roaMed;
  }


  public StockProfileFundamental roaMed5y(@javax.annotation.Nullable BigDecimal roaMed5y) {
    this.roaMed5y = roaMed5y;
    return this;
  }

  /**
   * Return on assets is calculated as Net Income divided by its Total Assets.
   * @return roaMed5y
   */
  @javax.annotation.Nullable
  public BigDecimal getRoaMed5y() {
    return roaMed5y;
  }

  public void setRoaMed5y(@javax.annotation.Nullable BigDecimal roaMed5y) {
    this.roaMed5y = roaMed5y;
  }


  public StockProfileFundamental roc(@javax.annotation.Nullable BigDecimal roc) {
    this.roc = roc;
    return this;
  }

  /**
   * Return on capital measures how well a company generates cash flow relative to the capital it has invested in its business. It is also called ROIC %.
   * @return roc
   */
  @javax.annotation.Nullable
  public BigDecimal getRoc() {
    return roc;
  }

  public void setRoc(@javax.annotation.Nullable BigDecimal roc) {
    this.roc = roc;
  }


  public StockProfileFundamental roce(@javax.annotation.Nullable BigDecimal roce) {
    this.roce = roce;
    return this;
  }

  /**
   * ROCE % measures how well a company generates profits from its capital.
   * @return roce
   */
  @javax.annotation.Nullable
  public BigDecimal getRoce() {
    return roce;
  }

  public void setRoce(@javax.annotation.Nullable BigDecimal roce) {
    this.roce = roce;
  }


  public StockProfileFundamental roceHigh(@javax.annotation.Nullable BigDecimal roceHigh) {
    this.roceHigh = roceHigh;
    return this;
  }

  /**
   * Get roceHigh
   * @return roceHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getRoceHigh() {
    return roceHigh;
  }

  public void setRoceHigh(@javax.annotation.Nullable BigDecimal roceHigh) {
    this.roceHigh = roceHigh;
  }


  public StockProfileFundamental roceLow(@javax.annotation.Nullable BigDecimal roceLow) {
    this.roceLow = roceLow;
    return this;
  }

  /**
   * Get roceLow
   * @return roceLow
   */
  @javax.annotation.Nullable
  public BigDecimal getRoceLow() {
    return roceLow;
  }

  public void setRoceLow(@javax.annotation.Nullable BigDecimal roceLow) {
    this.roceLow = roceLow;
  }


  public StockProfileFundamental roceMed(@javax.annotation.Nullable BigDecimal roceMed) {
    this.roceMed = roceMed;
    return this;
  }

  /**
   * Get roceMed
   * @return roceMed
   */
  @javax.annotation.Nullable
  public BigDecimal getRoceMed() {
    return roceMed;
  }

  public void setRoceMed(@javax.annotation.Nullable BigDecimal roceMed) {
    this.roceMed = roceMed;
  }


  public StockProfileFundamental roceMed5y(@javax.annotation.Nullable BigDecimal roceMed5y) {
    this.roceMed5y = roceMed5y;
    return this;
  }

  /**
   * Get roceMed5y
   * @return roceMed5y
   */
  @javax.annotation.Nullable
  public BigDecimal getRoceMed5y() {
    return roceMed5y;
  }

  public void setRoceMed5y(@javax.annotation.Nullable BigDecimal roceMed5y) {
    this.roceMed5y = roceMed5y;
  }


  public StockProfileFundamental roe(@javax.annotation.Nullable BigDecimal roe) {
    this.roe = roe;
    return this;
  }

  /**
   * Return on equity is calculated as Net Income attributable to Common Stockholders (Net Income minus the preferred dividends paid) divided by its Total Stockholders Equity
   * @return roe
   */
  @javax.annotation.Nullable
  public BigDecimal getRoe() {
    return roe;
  }

  public void setRoe(@javax.annotation.Nullable BigDecimal roe) {
    this.roe = roe;
  }


  public StockProfileFundamental roeAdj(@javax.annotation.Nullable BigDecimal roeAdj) {
    this.roeAdj = roeAdj;
    return this;
  }

  /**
   * The return on equity adjusted to book values
   * @return roeAdj
   */
  @javax.annotation.Nullable
  public BigDecimal getRoeAdj() {
    return roeAdj;
  }

  public void setRoeAdj(@javax.annotation.Nullable BigDecimal roeAdj) {
    this.roeAdj = roeAdj;
  }


  public StockProfileFundamental roeHigh(@javax.annotation.Nullable BigDecimal roeHigh) {
    this.roeHigh = roeHigh;
    return this;
  }

  /**
   * Return on equity is calculated as Net Income attributable to Common Stockholders (Net Income minus the preferred dividends paid) divided by its Total Stockholders Equity
   * @return roeHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getRoeHigh() {
    return roeHigh;
  }

  public void setRoeHigh(@javax.annotation.Nullable BigDecimal roeHigh) {
    this.roeHigh = roeHigh;
  }


  public StockProfileFundamental roeLow(@javax.annotation.Nullable BigDecimal roeLow) {
    this.roeLow = roeLow;
    return this;
  }

  /**
   * Return on equity is calculated as Net Income attributable to Common Stockholders (Net Income minus the preferred dividends paid) divided by its Total Stockholders Equity
   * @return roeLow
   */
  @javax.annotation.Nullable
  public BigDecimal getRoeLow() {
    return roeLow;
  }

  public void setRoeLow(@javax.annotation.Nullable BigDecimal roeLow) {
    this.roeLow = roeLow;
  }


  public StockProfileFundamental roeMed(@javax.annotation.Nullable BigDecimal roeMed) {
    this.roeMed = roeMed;
    return this;
  }

  /**
   * Return on equity is calculated as Net Income attributable to Common Stockholders (Net Income minus the preferred dividends paid) divided by its Total Stockholders Equity
   * @return roeMed
   */
  @javax.annotation.Nullable
  public BigDecimal getRoeMed() {
    return roeMed;
  }

  public void setRoeMed(@javax.annotation.Nullable BigDecimal roeMed) {
    this.roeMed = roeMed;
  }


  public StockProfileFundamental roeMed5y(@javax.annotation.Nullable BigDecimal roeMed5y) {
    this.roeMed5y = roeMed5y;
    return this;
  }

  /**
   * Return on equity is calculated as Net Income attributable to Common Stockholders (Net Income minus the preferred dividends paid) divided by its Total Stockholders Equity
   * @return roeMed5y
   */
  @javax.annotation.Nullable
  public BigDecimal getRoeMed5y() {
    return roeMed5y;
  }

  public void setRoeMed5y(@javax.annotation.Nullable BigDecimal roeMed5y) {
    this.roeMed5y = roeMed5y;
  }


  public StockProfileFundamental roic(@javax.annotation.Nullable BigDecimal roic) {
    this.roic = roic;
    return this;
  }

  /**
   * Return on Invested Capital (ROIC) is calculated as follows:    Return on Invested Capital (ROIC) &#x3D; (EBIT - Adjusted Taxes) / (Book Value of Debt + Book Value of Equity - Cash)
   * @return roic
   */
  @javax.annotation.Nullable
  public BigDecimal getRoic() {
    return roic;
  }

  public void setRoic(@javax.annotation.Nullable BigDecimal roic) {
    this.roic = roic;
  }


  public StockProfileFundamental roicHigh(@javax.annotation.Nullable BigDecimal roicHigh) {
    this.roicHigh = roicHigh;
    return this;
  }

  /**
   * The highest return on invested capital over the past 10 years
   * @return roicHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getRoicHigh() {
    return roicHigh;
  }

  public void setRoicHigh(@javax.annotation.Nullable BigDecimal roicHigh) {
    this.roicHigh = roicHigh;
  }


  public StockProfileFundamental roicLow(@javax.annotation.Nullable BigDecimal roicLow) {
    this.roicLow = roicLow;
    return this;
  }

  /**
   * The lowest return on invested capital over the past 10 years
   * @return roicLow
   */
  @javax.annotation.Nullable
  public BigDecimal getRoicLow() {
    return roicLow;
  }

  public void setRoicLow(@javax.annotation.Nullable BigDecimal roicLow) {
    this.roicLow = roicLow;
  }


  public StockProfileFundamental roicMed(@javax.annotation.Nullable BigDecimal roicMed) {
    this.roicMed = roicMed;
    return this;
  }

  /**
   * The median return on capital over the past 10 years
   * @return roicMed
   */
  @javax.annotation.Nullable
  public BigDecimal getRoicMed() {
    return roicMed;
  }

  public void setRoicMed(@javax.annotation.Nullable BigDecimal roicMed) {
    this.roicMed = roicMed;
  }


  public StockProfileFundamental roicMed5y(@javax.annotation.Nullable BigDecimal roicMed5y) {
    this.roicMed5y = roicMed5y;
    return this;
  }

  /**
   * The median return on capital over the past five years
   * @return roicMed5y
   */
  @javax.annotation.Nullable
  public BigDecimal getRoicMed5y() {
    return roicMed5y;
  }

  public void setRoicMed5y(@javax.annotation.Nullable BigDecimal roicMed5y) {
    this.roicMed5y = roicMed5y;
  }


  public StockProfileFundamental roiic3y(@javax.annotation.Nullable BigDecimal roiic3y) {
    this.roiic3y = roiic3y;
    return this;
  }

  /**
   * 3-Year Return on Invested Incremental Capital (3-Year ROIIC %) measures the change in earnings as a percentage of change in investment over 3-year.
   * @return roiic3y
   */
  @javax.annotation.Nullable
  public BigDecimal getRoiic3y() {
    return roiic3y;
  }

  public void setRoiic3y(@javax.annotation.Nullable BigDecimal roiic3y) {
    this.roiic3y = roiic3y;
  }


  public StockProfileFundamental roiic3yHigh(@javax.annotation.Nullable BigDecimal roiic3yHigh) {
    this.roiic3yHigh = roiic3yHigh;
    return this;
  }

  /**
   * Get roiic3yHigh
   * @return roiic3yHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getRoiic3yHigh() {
    return roiic3yHigh;
  }

  public void setRoiic3yHigh(@javax.annotation.Nullable BigDecimal roiic3yHigh) {
    this.roiic3yHigh = roiic3yHigh;
  }


  public StockProfileFundamental roiic3yLow(@javax.annotation.Nullable BigDecimal roiic3yLow) {
    this.roiic3yLow = roiic3yLow;
    return this;
  }

  /**
   * Get roiic3yLow
   * @return roiic3yLow
   */
  @javax.annotation.Nullable
  public BigDecimal getRoiic3yLow() {
    return roiic3yLow;
  }

  public void setRoiic3yLow(@javax.annotation.Nullable BigDecimal roiic3yLow) {
    this.roiic3yLow = roiic3yLow;
  }


  public StockProfileFundamental roiic3yMed(@javax.annotation.Nullable BigDecimal roiic3yMed) {
    this.roiic3yMed = roiic3yMed;
    return this;
  }

  /**
   * Get roiic3yMed
   * @return roiic3yMed
   */
  @javax.annotation.Nullable
  public BigDecimal getRoiic3yMed() {
    return roiic3yMed;
  }

  public void setRoiic3yMed(@javax.annotation.Nullable BigDecimal roiic3yMed) {
    this.roiic3yMed = roiic3yMed;
  }


  public StockProfileFundamental rvnPredc10y(@javax.annotation.Nullable BigDecimal rvnPredc10y) {
    this.rvnPredc10y = rvnPredc10y;
    return this;
  }

  /**
   * The predictability of a company&#39;s revenue
   * @return rvnPredc10y
   */
  @javax.annotation.Nullable
  public BigDecimal getRvnPredc10y() {
    return rvnPredc10y;
  }

  public void setRvnPredc10y(@javax.annotation.Nullable BigDecimal rvnPredc10y) {
    this.rvnPredc10y = rvnPredc10y;
  }


  public StockProfileFundamental sales(@javax.annotation.Nullable BigDecimal sales) {
    this.sales = sales;
    return this;
  }

  /**
   * Also referred as sales, revenue is income that a company receives from its normal business activities, usually from the sale of goods and services to customers.
   * @return sales
   */
  @javax.annotation.Nullable
  public BigDecimal getSales() {
    return sales;
  }

  public void setSales(@javax.annotation.Nullable BigDecimal sales) {
    this.sales = sales;
  }


  public StockProfileFundamental salesLatestQ(@javax.annotation.Nullable BigDecimal salesLatestQ) {
    this.salesLatestQ = salesLatestQ;
    return this;
  }

  /**
   * Revenue is the income that a business has from its normal business activities, usually from the sale of goods and services to customers.
   * @return salesLatestQ
   */
  @javax.annotation.Nullable
  public BigDecimal getSalesLatestQ() {
    return salesLatestQ;
  }

  public void setSalesLatestQ(@javax.annotation.Nullable BigDecimal salesLatestQ) {
    this.salesLatestQ = salesLatestQ;
  }


  public StockProfileFundamental salesLatestQNorm(@javax.annotation.Nullable BigDecimal salesLatestQNorm) {
    this.salesLatestQNorm = salesLatestQNorm;
    return this;
  }

  /**
   * Revenue is the income that a business has from its normal business activities, usually from the sale of goods and services to customers.
   * @return salesLatestQNorm
   */
  @javax.annotation.Nullable
  public BigDecimal getSalesLatestQNorm() {
    return salesLatestQNorm;
  }

  public void setSalesLatestQNorm(@javax.annotation.Nullable BigDecimal salesLatestQNorm) {
    this.salesLatestQNorm = salesLatestQNorm;
  }


  public StockProfileFundamental shareholderYield(@javax.annotation.Nullable BigDecimal shareholderYield) {
    this.shareholderYield = shareholderYield;
    return this;
  }

  /**
   * Get shareholderYield
   * @return shareholderYield
   */
  @javax.annotation.Nullable
  public BigDecimal getShareholderYield() {
    return shareholderYield;
  }

  public void setShareholderYield(@javax.annotation.Nullable BigDecimal shareholderYield) {
    this.shareholderYield = shareholderYield;
  }


  public StockProfileFundamental shareholderYieldHigh(@javax.annotation.Nullable BigDecimal shareholderYieldHigh) {
    this.shareholderYieldHigh = shareholderYieldHigh;
    return this;
  }

  /**
   * Get shareholderYieldHigh
   * @return shareholderYieldHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getShareholderYieldHigh() {
    return shareholderYieldHigh;
  }

  public void setShareholderYieldHigh(@javax.annotation.Nullable BigDecimal shareholderYieldHigh) {
    this.shareholderYieldHigh = shareholderYieldHigh;
  }


  public StockProfileFundamental shareholderYieldLow(@javax.annotation.Nullable BigDecimal shareholderYieldLow) {
    this.shareholderYieldLow = shareholderYieldLow;
    return this;
  }

  /**
   * Get shareholderYieldLow
   * @return shareholderYieldLow
   */
  @javax.annotation.Nullable
  public BigDecimal getShareholderYieldLow() {
    return shareholderYieldLow;
  }

  public void setShareholderYieldLow(@javax.annotation.Nullable BigDecimal shareholderYieldLow) {
    this.shareholderYieldLow = shareholderYieldLow;
  }


  public StockProfileFundamental shareholderYieldMed(@javax.annotation.Nullable BigDecimal shareholderYieldMed) {
    this.shareholderYieldMed = shareholderYieldMed;
    return this;
  }

  /**
   * Get shareholderYieldMed
   * @return shareholderYieldMed
   */
  @javax.annotation.Nullable
  public BigDecimal getShareholderYieldMed() {
    return shareholderYieldMed;
  }

  public void setShareholderYieldMed(@javax.annotation.Nullable BigDecimal shareholderYieldMed) {
    this.shareholderYieldMed = shareholderYieldMed;
  }


  public StockProfileFundamental shares(@javax.annotation.Nullable BigDecimal shares) {
    this.shares = shares;
    return this;
  }

  /**
   * Outstanding shares refer to a company&#39;s stock currently held by all its shareholders, including share blocks held by institutional investors and restricted shares owned by the company&#39;s officers and insiders.
   * @return shares
   */
  @javax.annotation.Nullable
  public BigDecimal getShares() {
    return shares;
  }

  public void setShares(@javax.annotation.Nullable BigDecimal shares) {
    this.shares = shares;
  }


  public StockProfileFundamental sloanratio(@javax.annotation.Nullable BigDecimal sloanratio) {
    this.sloanratio = sloanratio;
    return this;
  }

  /**
   * Richard Sloan from the University of Michigan was first to document what is referred to as the &#39;accrual anomaly&#39;. His 1996 paper found that shares of companies with small or negative accruals vastly outperform (+10%) those of companies with large ones.
   * @return sloanratio
   */
  @javax.annotation.Nullable
  public BigDecimal getSloanratio() {
    return sloanratio;
  }

  public void setSloanratio(@javax.annotation.Nullable BigDecimal sloanratio) {
    this.sloanratio = sloanratio;
  }


  public StockProfileFundamental taxRateMed5y(@javax.annotation.Nullable BigDecimal taxRateMed5y) {
    this.taxRateMed5y = taxRateMed5y;
    return this;
  }

  /**
   * Tax paid by the company. It is computed in by multiplying the income before tax number, as reported to shareholders, by the appropriate tax rate. In reality, the computation is typically considerably more complex due to things such as expenses considered not deductible by taxing authorities (\\\&quot;add backs\\\&quot;), the range of tax rates applicable to various levels of income, different tax rates in different jurisdictions, multiple layers of tax on income, and other issues.
   * @return taxRateMed5y
   */
  @javax.annotation.Nullable
  public BigDecimal getTaxRateMed5y() {
    return taxRateMed5y;
  }

  public void setTaxRateMed5y(@javax.annotation.Nullable BigDecimal taxRateMed5y) {
    this.taxRateMed5y = taxRateMed5y;
  }


  public StockProfileFundamental totalBuyback10y(@javax.annotation.Nullable BigDecimal totalBuyback10y) {
    this.totalBuyback10y = totalBuyback10y;
    return this;
  }

  /**
   * This is the average share buyback rate of the company over the past 10 years. A negative number means the company might be issuing new shares. A positive number indicates that the company is buying back shares.
   * @return totalBuyback10y
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalBuyback10y() {
    return totalBuyback10y;
  }

  public void setTotalBuyback10y(@javax.annotation.Nullable BigDecimal totalBuyback10y) {
    this.totalBuyback10y = totalBuyback10y;
  }


  public StockProfileFundamental totalBuyback1y(@javax.annotation.Nullable BigDecimal totalBuyback1y) {
    this.totalBuyback1y = totalBuyback1y;
    return this;
  }

  /**
   * This is the average share buyback rate of the company over the past 1 year. A negative number means the company might be issuing new shares. A positive number indicates that the company is buying back shares.
   * @return totalBuyback1y
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalBuyback1y() {
    return totalBuyback1y;
  }

  public void setTotalBuyback1y(@javax.annotation.Nullable BigDecimal totalBuyback1y) {
    this.totalBuyback1y = totalBuyback1y;
  }


  public StockProfileFundamental totalBuyback3y(@javax.annotation.Nullable BigDecimal totalBuyback3y) {
    this.totalBuyback3y = totalBuyback3y;
    return this;
  }

  /**
   * This is the average share buyback rate of the company over the past 1 year. A negative number means the company might be issuing new shares. A positive number indicates that the company is buying back shares.
   * @return totalBuyback3y
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalBuyback3y() {
    return totalBuyback3y;
  }

  public void setTotalBuyback3y(@javax.annotation.Nullable BigDecimal totalBuyback3y) {
    this.totalBuyback3y = totalBuyback3y;
  }


  public StockProfileFundamental totalBuyback3yHigh(@javax.annotation.Nullable BigDecimal totalBuyback3yHigh) {
    this.totalBuyback3yHigh = totalBuyback3yHigh;
    return this;
  }

  /**
   * This is the average share buyback rate of the company over the past 1 year. A negative number means the company might be issuing new shares. A positive number indicates that the company is buying back shares.
   * @return totalBuyback3yHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalBuyback3yHigh() {
    return totalBuyback3yHigh;
  }

  public void setTotalBuyback3yHigh(@javax.annotation.Nullable BigDecimal totalBuyback3yHigh) {
    this.totalBuyback3yHigh = totalBuyback3yHigh;
  }


  public StockProfileFundamental totalBuyback3yLow(@javax.annotation.Nullable BigDecimal totalBuyback3yLow) {
    this.totalBuyback3yLow = totalBuyback3yLow;
    return this;
  }

  /**
   * This is the average share buyback rate of the company over the past 1 year. A negative number means the company might be issuing new shares. A positive number indicates that the company is buying back shares.
   * @return totalBuyback3yLow
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalBuyback3yLow() {
    return totalBuyback3yLow;
  }

  public void setTotalBuyback3yLow(@javax.annotation.Nullable BigDecimal totalBuyback3yLow) {
    this.totalBuyback3yLow = totalBuyback3yLow;
  }


  public StockProfileFundamental totalBuyback3yMed(@javax.annotation.Nullable BigDecimal totalBuyback3yMed) {
    this.totalBuyback3yMed = totalBuyback3yMed;
    return this;
  }

  /**
   * This is the average share buyback rate of the company over the past 1 year. A negative number means the company might be issuing new shares. A positive number indicates that the company is buying back shares.
   * @return totalBuyback3yMed
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalBuyback3yMed() {
    return totalBuyback3yMed;
  }

  public void setTotalBuyback3yMed(@javax.annotation.Nullable BigDecimal totalBuyback3yMed) {
    this.totalBuyback3yMed = totalBuyback3yMed;
  }


  public StockProfileFundamental totalBuyback5y(@javax.annotation.Nullable BigDecimal totalBuyback5y) {
    this.totalBuyback5y = totalBuyback5y;
    return this;
  }

  /**
   * This is the average share buyback rate of the company over the past 5 years. A negative number means the company might be issuing new shares. A positive number indicates that the company is buying back shares.
   * @return totalBuyback5y
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalBuyback5y() {
    return totalBuyback5y;
  }

  public void setTotalBuyback5y(@javax.annotation.Nullable BigDecimal totalBuyback5y) {
    this.totalBuyback5y = totalBuyback5y;
  }


  public StockProfileFundamental ttmEBIT(@javax.annotation.Nullable BigDecimal ttmEBIT) {
    this.ttmEBIT = ttmEBIT;
    return this;
  }

  /**
   * The total EBIT (or operating income) over the trailing 12 months
   * @return ttmEBIT
   */
  @javax.annotation.Nullable
  public BigDecimal getTtmEBIT() {
    return ttmEBIT;
  }

  public void setTtmEBIT(@javax.annotation.Nullable BigDecimal ttmEBIT) {
    this.ttmEBIT = ttmEBIT;
  }


  public StockProfileFundamental ttmEBITDA(@javax.annotation.Nullable BigDecimal ttmEBITDA) {
    this.ttmEBITDA = ttmEBITDA;
    return this;
  }

  /**
   * The total EBITDA over the trailing 12 months
   * @return ttmEBITDA
   */
  @javax.annotation.Nullable
  public BigDecimal getTtmEBITDA() {
    return ttmEBITDA;
  }

  public void setTtmEBITDA(@javax.annotation.Nullable BigDecimal ttmEBITDA) {
    this.ttmEBITDA = ttmEBITDA;
  }


  public StockProfileFundamental ttmEps(@javax.annotation.Nullable BigDecimal ttmEps) {
    this.ttmEps = ttmEps;
    return this;
  }

  /**
   * Earnings per share (EPS) is the portion of a company&#39;s profit allocated to each share of common stock.
   * @return ttmEps
   */
  @javax.annotation.Nullable
  public BigDecimal getTtmEps() {
    return ttmEps;
  }

  public void setTtmEps(@javax.annotation.Nullable BigDecimal ttmEps) {
    this.ttmEps = ttmEps;
  }


  public StockProfileFundamental ttmEpsNri(@javax.annotation.Nullable BigDecimal ttmEpsNri) {
    this.ttmEpsNri = ttmEpsNri;
    return this;
  }

  /**
   * The earnings per share without nonrecurring items, for the trailing 12 months
   * @return ttmEpsNri
   */
  @javax.annotation.Nullable
  public BigDecimal getTtmEpsNri() {
    return ttmEpsNri;
  }

  public void setTtmEpsNri(@javax.annotation.Nullable BigDecimal ttmEpsNri) {
    this.ttmEpsNri = ttmEpsNri;
  }


  public StockProfileFundamental ttmFcfPerShare(@javax.annotation.Nullable BigDecimal ttmFcfPerShare) {
    this.ttmFcfPerShare = ttmFcfPerShare;
    return this;
  }

  /**
   * Get ttmFcfPerShare
   * @return ttmFcfPerShare
   */
  @javax.annotation.Nullable
  public BigDecimal getTtmFcfPerShare() {
    return ttmFcfPerShare;
  }

  public void setTtmFcfPerShare(@javax.annotation.Nullable BigDecimal ttmFcfPerShare) {
    this.ttmFcfPerShare = ttmFcfPerShare;
  }


  public StockProfileFundamental ttmPretaxincome(@javax.annotation.Nullable BigDecimal ttmPretaxincome) {
    this.ttmPretaxincome = ttmPretaxincome;
    return this;
  }

  /**
   * The total pretax income over the trailing 12 months
   * @return ttmPretaxincome
   */
  @javax.annotation.Nullable
  public BigDecimal getTtmPretaxincome() {
    return ttmPretaxincome;
  }

  public void setTtmPretaxincome(@javax.annotation.Nullable BigDecimal ttmPretaxincome) {
    this.ttmPretaxincome = ttmPretaxincome;
  }


  public StockProfileFundamental ttmSales(@javax.annotation.Nullable BigDecimal ttmSales) {
    this.ttmSales = ttmSales;
    return this;
  }

  /**
   * Also referred as sales, revenue is income that a company receives from its normal business activities, usually from the sale of goods and services to customers.
   * @return ttmSales
   */
  @javax.annotation.Nullable
  public BigDecimal getTtmSales() {
    return ttmSales;
  }

  public void setTtmSales(@javax.annotation.Nullable BigDecimal ttmSales) {
    this.ttmSales = ttmSales;
  }


  public StockProfileFundamental turnover(@javax.annotation.Nullable BigDecimal turnover) {
    this.turnover = turnover;
    return this;
  }

  /**
   * Asset Turnover measures how quickly a company turns over its asset through sales. It is defined as     &lt;b&gt;Asset Turnover &#x3D; Sales / {Total Assets}&lt;/b&gt;    Companies with low profit margins tend to have high asset turnover, while those with high profit margins have low asset turnover. Companies in the retail industry tend to have a very high turnover ratio.
   * @return turnover
   */
  @javax.annotation.Nullable
  public BigDecimal getTurnover() {
    return turnover;
  }

  public void setTurnover(@javax.annotation.Nullable BigDecimal turnover) {
    this.turnover = turnover;
  }


  public StockProfileFundamental wacc(@javax.annotation.Nullable BigDecimal wacc) {
    this.wacc = wacc;
    return this;
  }

  /**
   * The weighted average cost of capital (WACC) is the rate that a company is expected to pay on average to all its security holders to finance its assets.
   * @return wacc
   */
  @javax.annotation.Nullable
  public BigDecimal getWacc() {
    return wacc;
  }

  public void setWacc(@javax.annotation.Nullable BigDecimal wacc) {
    this.wacc = wacc;
  }


  public StockProfileFundamental waccHigh(@javax.annotation.Nullable BigDecimal waccHigh) {
    this.waccHigh = waccHigh;
    return this;
  }

  /**
   * Get waccHigh
   * @return waccHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getWaccHigh() {
    return waccHigh;
  }

  public void setWaccHigh(@javax.annotation.Nullable BigDecimal waccHigh) {
    this.waccHigh = waccHigh;
  }


  public StockProfileFundamental waccLow(@javax.annotation.Nullable BigDecimal waccLow) {
    this.waccLow = waccLow;
    return this;
  }

  /**
   * Get waccLow
   * @return waccLow
   */
  @javax.annotation.Nullable
  public BigDecimal getWaccLow() {
    return waccLow;
  }

  public void setWaccLow(@javax.annotation.Nullable BigDecimal waccLow) {
    this.waccLow = waccLow;
  }


  public StockProfileFundamental waccMed(@javax.annotation.Nullable BigDecimal waccMed) {
    this.waccMed = waccMed;
    return this;
  }

  /**
   * Get waccMed
   * @return waccMed
   */
  @javax.annotation.Nullable
  public BigDecimal getWaccMed() {
    return waccMed;
  }

  public void setWaccMed(@javax.annotation.Nullable BigDecimal waccMed) {
    this.waccMed = waccMed;
  }


  public StockProfileFundamental waccMed5y(@javax.annotation.Nullable BigDecimal waccMed5y) {
    this.waccMed5y = waccMed5y;
    return this;
  }

  /**
   * Get waccMed5y
   * @return waccMed5y
   */
  @javax.annotation.Nullable
  public BigDecimal getWaccMed5y() {
    return waccMed5y;
  }

  public void setWaccMed5y(@javax.annotation.Nullable BigDecimal waccMed5y) {
    this.waccMed5y = waccMed5y;
  }


  public StockProfileFundamental yearsOfFinancialHistory(@javax.annotation.Nullable BigDecimal yearsOfFinancialHistory) {
    this.yearsOfFinancialHistory = yearsOfFinancialHistory;
    return this;
  }

  /**
   * Years of Financial History refers to the number of years that a company&#39;s financial records span. It is calculated as the difference in years between the current year and the earliest available financial statement year available on GuruFocus.
   * @return yearsOfFinancialHistory
   */
  @javax.annotation.Nullable
  public BigDecimal getYearsOfFinancialHistory() {
    return yearsOfFinancialHistory;
  }

  public void setYearsOfFinancialHistory(@javax.annotation.Nullable BigDecimal yearsOfFinancialHistory) {
    this.yearsOfFinancialHistory = yearsOfFinancialHistory;
  }


  public StockProfileFundamental zscore(@javax.annotation.Nullable BigDecimal zscore) {
    this.zscore = zscore;
    return this;
  }

  /**
   * Z-Score model is an accurate forecaster of failure up to two years prior to distress. It can be considered the assessment of the distress of industrial corporations.
   * @return zscore
   */
  @javax.annotation.Nullable
  public BigDecimal getZscore() {
    return zscore;
  }

  public void setZscore(@javax.annotation.Nullable BigDecimal zscore) {
    this.zscore = zscore;
  }


  public StockProfileFundamental zscoreHigh(@javax.annotation.Nullable BigDecimal zscoreHigh) {
    this.zscoreHigh = zscoreHigh;
    return this;
  }

  /**
   * Z-Score model is an accurate forecaster of failure up to two years prior to distress. It can be considered the assessment of the distress of industrial corporations.
   * @return zscoreHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getZscoreHigh() {
    return zscoreHigh;
  }

  public void setZscoreHigh(@javax.annotation.Nullable BigDecimal zscoreHigh) {
    this.zscoreHigh = zscoreHigh;
  }


  public StockProfileFundamental zscoreLow(@javax.annotation.Nullable BigDecimal zscoreLow) {
    this.zscoreLow = zscoreLow;
    return this;
  }

  /**
   * Z-Score model is an accurate forecaster of failure up to two years prior to distress. It can be considered the assessment of the distress of industrial corporations.
   * @return zscoreLow
   */
  @javax.annotation.Nullable
  public BigDecimal getZscoreLow() {
    return zscoreLow;
  }

  public void setZscoreLow(@javax.annotation.Nullable BigDecimal zscoreLow) {
    this.zscoreLow = zscoreLow;
  }


  public StockProfileFundamental zscoreMed(@javax.annotation.Nullable BigDecimal zscoreMed) {
    this.zscoreMed = zscoreMed;
    return this;
  }

  /**
   * Z-Score model is an accurate forecaster of failure up to two years prior to distress. It can be considered the assessment of the distress of industrial corporations.
   * @return zscoreMed
   */
  @javax.annotation.Nullable
  public BigDecimal getZscoreMed() {
    return zscoreMed;
  }

  public void setZscoreMed(@javax.annotation.Nullable BigDecimal zscoreMed) {
    this.zscoreMed = zscoreMed;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StockProfileFundamental stockProfileFundamental = (StockProfileFundamental) o;
    return Objects.equals(this.effectiveInterestRate, stockProfileFundamental.effectiveInterestRate) &&
        Objects.equals(this.insiderSharesOwned, stockProfileFundamental.insiderSharesOwned) &&
        Objects.equals(this.institutionSharesHeld, stockProfileFundamental.institutionSharesHeld) &&
        Objects.equals(this.PFD, stockProfileFundamental.PFD) &&
        Objects.equals(this.ROC_JOEL, stockProfileFundamental.ROC_JOEL) &&
        Objects.equals(this.roCJOELHigh, stockProfileFundamental.roCJOELHigh) &&
        Objects.equals(this.roCJOELLow, stockProfileFundamental.roCJOELLow) &&
        Objects.equals(this.roCJOELMed, stockProfileFundamental.roCJOELMed) &&
        Objects.equals(this.roCJOELMed5y, stockProfileFundamental.roCJOELMed5y) &&
        Objects.equals(this.ROTA, stockProfileFundamental.ROTA) &&
        Objects.equals(this.roTAHigh, stockProfileFundamental.roTAHigh) &&
        Objects.equals(this.roTALow, stockProfileFundamental.roTALow) &&
        Objects.equals(this.roTAMed, stockProfileFundamental.roTAMed) &&
        Objects.equals(this.ROTE, stockProfileFundamental.ROTE) &&
        Objects.equals(this.roTEHigh, stockProfileFundamental.roTEHigh) &&
        Objects.equals(this.roTELow, stockProfileFundamental.roTELow) &&
        Objects.equals(this.roTEMed, stockProfileFundamental.roTEMed) &&
        Objects.equals(this.roTEMed5y, stockProfileFundamental.roTEMed5y) &&
        Objects.equals(this.SGA, stockProfileFundamental.SGA) &&
        Objects.equals(this.SNOA, stockProfileFundamental.SNOA) &&
        Objects.equals(this.totalPayoutRatio, stockProfileFundamental.totalPayoutRatio) &&
        Objects.equals(this.totalPayoutYield, stockProfileFundamental.totalPayoutYield) &&
        Objects.equals(this.afinancialsStartDate, stockProfileFundamental.afinancialsStartDate) &&
        Objects.equals(this.asset, stockProfileFundamental.asset) &&
        Objects.equals(this.book, stockProfileFundamental.book) &&
        Objects.equals(this.buybackYield, stockProfileFundamental.buybackYield) &&
        Objects.equals(this.buybackYieldHigh, stockProfileFundamental.buybackYieldHigh) &&
        Objects.equals(this.buybackYieldLow, stockProfileFundamental.buybackYieldLow) &&
        Objects.equals(this.buybackYieldMed, stockProfileFundamental.buybackYieldMed) &&
        Objects.equals(this.cash2debt, stockProfileFundamental.cash2debt) &&
        Objects.equals(this.cash2debtHigh, stockProfileFundamental.cash2debtHigh) &&
        Objects.equals(this.cash2debtLow, stockProfileFundamental.cash2debtLow) &&
        Objects.equals(this.cash2debtMed, stockProfileFundamental.cash2debtMed) &&
        Objects.equals(this.cashRatio, stockProfileFundamental.cashRatio) &&
        Objects.equals(this.cashRatioHigh, stockProfileFundamental.cashRatioHigh) &&
        Objects.equals(this.cashRatioLow, stockProfileFundamental.cashRatioLow) &&
        Objects.equals(this.cashRatioMed, stockProfileFundamental.cashRatioMed) &&
        Objects.equals(this.ccc, stockProfileFundamental.ccc) &&
        Objects.equals(this.correlationBook, stockProfileFundamental.correlationBook) &&
        Objects.equals(this.correlationEpsNri, stockProfileFundamental.correlationEpsNri) &&
        Objects.equals(this.correlationEvVsEbit, stockProfileFundamental.correlationEvVsEbit) &&
        Objects.equals(this.correlationEvVsEbitda, stockProfileFundamental.correlationEvVsEbitda) &&
        Objects.equals(this.correlationEvVsFcf, stockProfileFundamental.correlationEvVsFcf) &&
        Objects.equals(this.correlationEvVsPretaxIncome, stockProfileFundamental.correlationEvVsPretaxIncome) &&
        Objects.equals(this.correlationEvVsRev, stockProfileFundamental.correlationEvVsRev) &&
        Objects.equals(this.correlationOcf, stockProfileFundamental.correlationOcf) &&
        Objects.equals(this.correlationRev, stockProfileFundamental.correlationRev) &&
        Objects.equals(this.currentRatio, stockProfileFundamental.currentRatio) &&
        Objects.equals(this.currentRatioHigh, stockProfileFundamental.currentRatioHigh) &&
        Objects.equals(this.currentRatioLow, stockProfileFundamental.currentRatioLow) &&
        Objects.equals(this.currentRatioMed, stockProfileFundamental.currentRatioMed) &&
        Objects.equals(this.daysinventory, stockProfileFundamental.daysinventory) &&
        Objects.equals(this.daysinventoryHigh, stockProfileFundamental.daysinventoryHigh) &&
        Objects.equals(this.daysinventoryLow, stockProfileFundamental.daysinventoryLow) &&
        Objects.equals(this.daysinventoryMed, stockProfileFundamental.daysinventoryMed) &&
        Objects.equals(this.dayspayable, stockProfileFundamental.dayspayable) &&
        Objects.equals(this.dayspayableHigh, stockProfileFundamental.dayspayableHigh) &&
        Objects.equals(this.dayspayableLow, stockProfileFundamental.dayspayableLow) &&
        Objects.equals(this.dayspayableMed, stockProfileFundamental.dayspayableMed) &&
        Objects.equals(this.dayssalesoutstand, stockProfileFundamental.dayssalesoutstand) &&
        Objects.equals(this.dayssalesoutstandHigh, stockProfileFundamental.dayssalesoutstandHigh) &&
        Objects.equals(this.dayssalesoutstandLow, stockProfileFundamental.dayssalesoutstandLow) &&
        Objects.equals(this.dayssalesoutstandMed, stockProfileFundamental.dayssalesoutstandMed) &&
        Objects.equals(this.debt2asset, stockProfileFundamental.debt2asset) &&
        Objects.equals(this.debt2ebitda, stockProfileFundamental.debt2ebitda) &&
        Objects.equals(this.debt2ebitdaHigh, stockProfileFundamental.debt2ebitdaHigh) &&
        Objects.equals(this.debt2ebitdaLow, stockProfileFundamental.debt2ebitdaLow) &&
        Objects.equals(this.debt2ebitdaMed, stockProfileFundamental.debt2ebitdaMed) &&
        Objects.equals(this.debt2equity, stockProfileFundamental.debt2equity) &&
        Objects.equals(this.debt2equityHigh, stockProfileFundamental.debt2equityHigh) &&
        Objects.equals(this.debt2equityLow, stockProfileFundamental.debt2equityLow) &&
        Objects.equals(this.debt2equityMed, stockProfileFundamental.debt2equityMed) &&
        Objects.equals(this.debt2rev, stockProfileFundamental.debt2rev) &&
        Objects.equals(this.eps, stockProfileFundamental.eps) &&
        Objects.equals(this.epsLatestQ, stockProfileFundamental.epsLatestQ) &&
        Objects.equals(this.epsNri, stockProfileFundamental.epsNri) &&
        Objects.equals(this.equity2asset, stockProfileFundamental.equity2asset) &&
        Objects.equals(this.equity2assetHigh, stockProfileFundamental.equity2assetHigh) &&
        Objects.equals(this.equity2assetLow, stockProfileFundamental.equity2assetLow) &&
        Objects.equals(this.equity2assetMed, stockProfileFundamental.equity2assetMed) &&
        Objects.equals(this.evMorn, stockProfileFundamental.evMorn) &&
        Objects.equals(this.evMornNorm, stockProfileFundamental.evMornNorm) &&
        Objects.equals(this.fscore, stockProfileFundamental.fscore) &&
        Objects.equals(this.fscoreHigh, stockProfileFundamental.fscoreHigh) &&
        Objects.equals(this.fscoreLow, stockProfileFundamental.fscoreLow) &&
        Objects.equals(this.fscoreMed, stockProfileFundamental.fscoreMed) &&
        Objects.equals(this.goodwill2asset, stockProfileFundamental.goodwill2asset) &&
        Objects.equals(this.grossprofit, stockProfileFundamental.grossprofit) &&
        Objects.equals(this.grossprofit2asset, stockProfileFundamental.grossprofit2asset) &&
        Objects.equals(this.grossprofit2tangibleasset, stockProfileFundamental.grossprofit2tangibleasset) &&
        Objects.equals(this.insiderOwnership, stockProfileFundamental.insiderOwnership) &&
        Objects.equals(this.instOwnership, stockProfileFundamental.instOwnership) &&
        Objects.equals(this.interestCoverage, stockProfileFundamental.interestCoverage) &&
        Objects.equals(this.interestCoverageHigh, stockProfileFundamental.interestCoverageHigh) &&
        Objects.equals(this.interestCoverageLow, stockProfileFundamental.interestCoverageLow) &&
        Objects.equals(this.interestCoverageMed, stockProfileFundamental.interestCoverageMed) &&
        Objects.equals(this.inventory2sales, stockProfileFundamental.inventory2sales) &&
        Objects.equals(this.inventoryTurnover, stockProfileFundamental.inventoryTurnover) &&
        Objects.equals(this.latestEarningsReleaseDate, stockProfileFundamental.latestEarningsReleaseDate) &&
        Objects.equals(this.liabilitiesToAssets, stockProfileFundamental.liabilitiesToAssets) &&
        Objects.equals(this.mktcap, stockProfileFundamental.mktcap) &&
        Objects.equals(this.mktcapNorm, stockProfileFundamental.mktcapNorm) &&
        Objects.equals(this.mscore, stockProfileFundamental.mscore) &&
        Objects.equals(this.mscoreHigh, stockProfileFundamental.mscoreHigh) &&
        Objects.equals(this.mscoreLow, stockProfileFundamental.mscoreLow) &&
        Objects.equals(this.mscoreMed, stockProfileFundamental.mscoreMed) &&
        Objects.equals(this.netDebtPaydownYield, stockProfileFundamental.netDebtPaydownYield) &&
        Objects.equals(this.netDebtPaydownYieldHigh, stockProfileFundamental.netDebtPaydownYieldHigh) &&
        Objects.equals(this.netDebtPaydownYieldLow, stockProfileFundamental.netDebtPaydownYieldLow) &&
        Objects.equals(this.netDebtPaydownYieldMed, stockProfileFundamental.netDebtPaydownYieldMed) &&
        Objects.equals(this.nextEarningsDate, stockProfileFundamental.nextEarningsDate) &&
        Objects.equals(this.numGoodSigns, stockProfileFundamental.numGoodSigns) &&
        Objects.equals(this.numWarningSignsMeidum, stockProfileFundamental.numWarningSignsMeidum) &&
        Objects.equals(this.numWarningSignsSevere, stockProfileFundamental.numWarningSignsSevere) &&
        Objects.equals(this.pastEarningsDate, stockProfileFundamental.pastEarningsDate) &&
        Objects.equals(this.quickRatio, stockProfileFundamental.quickRatio) &&
        Objects.equals(this.quickRatioHigh, stockProfileFundamental.quickRatioHigh) &&
        Objects.equals(this.quickRatioLow, stockProfileFundamental.quickRatioLow) &&
        Objects.equals(this.quickRatioMed, stockProfileFundamental.quickRatioMed) &&
        Objects.equals(this.receivablesTurnover, stockProfileFundamental.receivablesTurnover) &&
        Objects.equals(this.relatedComp, stockProfileFundamental.relatedComp) &&
        Objects.equals(this.roa, stockProfileFundamental.roa) &&
        Objects.equals(this.roaHigh, stockProfileFundamental.roaHigh) &&
        Objects.equals(this.roaLow, stockProfileFundamental.roaLow) &&
        Objects.equals(this.roaMed, stockProfileFundamental.roaMed) &&
        Objects.equals(this.roaMed5y, stockProfileFundamental.roaMed5y) &&
        Objects.equals(this.roc, stockProfileFundamental.roc) &&
        Objects.equals(this.roce, stockProfileFundamental.roce) &&
        Objects.equals(this.roceHigh, stockProfileFundamental.roceHigh) &&
        Objects.equals(this.roceLow, stockProfileFundamental.roceLow) &&
        Objects.equals(this.roceMed, stockProfileFundamental.roceMed) &&
        Objects.equals(this.roceMed5y, stockProfileFundamental.roceMed5y) &&
        Objects.equals(this.roe, stockProfileFundamental.roe) &&
        Objects.equals(this.roeAdj, stockProfileFundamental.roeAdj) &&
        Objects.equals(this.roeHigh, stockProfileFundamental.roeHigh) &&
        Objects.equals(this.roeLow, stockProfileFundamental.roeLow) &&
        Objects.equals(this.roeMed, stockProfileFundamental.roeMed) &&
        Objects.equals(this.roeMed5y, stockProfileFundamental.roeMed5y) &&
        Objects.equals(this.roic, stockProfileFundamental.roic) &&
        Objects.equals(this.roicHigh, stockProfileFundamental.roicHigh) &&
        Objects.equals(this.roicLow, stockProfileFundamental.roicLow) &&
        Objects.equals(this.roicMed, stockProfileFundamental.roicMed) &&
        Objects.equals(this.roicMed5y, stockProfileFundamental.roicMed5y) &&
        Objects.equals(this.roiic3y, stockProfileFundamental.roiic3y) &&
        Objects.equals(this.roiic3yHigh, stockProfileFundamental.roiic3yHigh) &&
        Objects.equals(this.roiic3yLow, stockProfileFundamental.roiic3yLow) &&
        Objects.equals(this.roiic3yMed, stockProfileFundamental.roiic3yMed) &&
        Objects.equals(this.rvnPredc10y, stockProfileFundamental.rvnPredc10y) &&
        Objects.equals(this.sales, stockProfileFundamental.sales) &&
        Objects.equals(this.salesLatestQ, stockProfileFundamental.salesLatestQ) &&
        Objects.equals(this.salesLatestQNorm, stockProfileFundamental.salesLatestQNorm) &&
        Objects.equals(this.shareholderYield, stockProfileFundamental.shareholderYield) &&
        Objects.equals(this.shareholderYieldHigh, stockProfileFundamental.shareholderYieldHigh) &&
        Objects.equals(this.shareholderYieldLow, stockProfileFundamental.shareholderYieldLow) &&
        Objects.equals(this.shareholderYieldMed, stockProfileFundamental.shareholderYieldMed) &&
        Objects.equals(this.shares, stockProfileFundamental.shares) &&
        Objects.equals(this.sloanratio, stockProfileFundamental.sloanratio) &&
        Objects.equals(this.taxRateMed5y, stockProfileFundamental.taxRateMed5y) &&
        Objects.equals(this.totalBuyback10y, stockProfileFundamental.totalBuyback10y) &&
        Objects.equals(this.totalBuyback1y, stockProfileFundamental.totalBuyback1y) &&
        Objects.equals(this.totalBuyback3y, stockProfileFundamental.totalBuyback3y) &&
        Objects.equals(this.totalBuyback3yHigh, stockProfileFundamental.totalBuyback3yHigh) &&
        Objects.equals(this.totalBuyback3yLow, stockProfileFundamental.totalBuyback3yLow) &&
        Objects.equals(this.totalBuyback3yMed, stockProfileFundamental.totalBuyback3yMed) &&
        Objects.equals(this.totalBuyback5y, stockProfileFundamental.totalBuyback5y) &&
        Objects.equals(this.ttmEBIT, stockProfileFundamental.ttmEBIT) &&
        Objects.equals(this.ttmEBITDA, stockProfileFundamental.ttmEBITDA) &&
        Objects.equals(this.ttmEps, stockProfileFundamental.ttmEps) &&
        Objects.equals(this.ttmEpsNri, stockProfileFundamental.ttmEpsNri) &&
        Objects.equals(this.ttmFcfPerShare, stockProfileFundamental.ttmFcfPerShare) &&
        Objects.equals(this.ttmPretaxincome, stockProfileFundamental.ttmPretaxincome) &&
        Objects.equals(this.ttmSales, stockProfileFundamental.ttmSales) &&
        Objects.equals(this.turnover, stockProfileFundamental.turnover) &&
        Objects.equals(this.wacc, stockProfileFundamental.wacc) &&
        Objects.equals(this.waccHigh, stockProfileFundamental.waccHigh) &&
        Objects.equals(this.waccLow, stockProfileFundamental.waccLow) &&
        Objects.equals(this.waccMed, stockProfileFundamental.waccMed) &&
        Objects.equals(this.waccMed5y, stockProfileFundamental.waccMed5y) &&
        Objects.equals(this.yearsOfFinancialHistory, stockProfileFundamental.yearsOfFinancialHistory) &&
        Objects.equals(this.zscore, stockProfileFundamental.zscore) &&
        Objects.equals(this.zscoreHigh, stockProfileFundamental.zscoreHigh) &&
        Objects.equals(this.zscoreLow, stockProfileFundamental.zscoreLow) &&
        Objects.equals(this.zscoreMed, stockProfileFundamental.zscoreMed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(effectiveInterestRate, insiderSharesOwned, institutionSharesHeld, PFD, ROC_JOEL, roCJOELHigh, roCJOELLow, roCJOELMed, roCJOELMed5y, ROTA, roTAHigh, roTALow, roTAMed, ROTE, roTEHigh, roTELow, roTEMed, roTEMed5y, SGA, SNOA, totalPayoutRatio, totalPayoutYield, afinancialsStartDate, asset, book, buybackYield, buybackYieldHigh, buybackYieldLow, buybackYieldMed, cash2debt, cash2debtHigh, cash2debtLow, cash2debtMed, cashRatio, cashRatioHigh, cashRatioLow, cashRatioMed, ccc, correlationBook, correlationEpsNri, correlationEvVsEbit, correlationEvVsEbitda, correlationEvVsFcf, correlationEvVsPretaxIncome, correlationEvVsRev, correlationOcf, correlationRev, currentRatio, currentRatioHigh, currentRatioLow, currentRatioMed, daysinventory, daysinventoryHigh, daysinventoryLow, daysinventoryMed, dayspayable, dayspayableHigh, dayspayableLow, dayspayableMed, dayssalesoutstand, dayssalesoutstandHigh, dayssalesoutstandLow, dayssalesoutstandMed, debt2asset, debt2ebitda, debt2ebitdaHigh, debt2ebitdaLow, debt2ebitdaMed, debt2equity, debt2equityHigh, debt2equityLow, debt2equityMed, debt2rev, eps, epsLatestQ, epsNri, equity2asset, equity2assetHigh, equity2assetLow, equity2assetMed, evMorn, evMornNorm, fscore, fscoreHigh, fscoreLow, fscoreMed, goodwill2asset, grossprofit, grossprofit2asset, grossprofit2tangibleasset, insiderOwnership, instOwnership, interestCoverage, interestCoverageHigh, interestCoverageLow, interestCoverageMed, inventory2sales, inventoryTurnover, latestEarningsReleaseDate, liabilitiesToAssets, mktcap, mktcapNorm, mscore, mscoreHigh, mscoreLow, mscoreMed, netDebtPaydownYield, netDebtPaydownYieldHigh, netDebtPaydownYieldLow, netDebtPaydownYieldMed, nextEarningsDate, numGoodSigns, numWarningSignsMeidum, numWarningSignsSevere, pastEarningsDate, quickRatio, quickRatioHigh, quickRatioLow, quickRatioMed, receivablesTurnover, relatedComp, roa, roaHigh, roaLow, roaMed, roaMed5y, roc, roce, roceHigh, roceLow, roceMed, roceMed5y, roe, roeAdj, roeHigh, roeLow, roeMed, roeMed5y, roic, roicHigh, roicLow, roicMed, roicMed5y, roiic3y, roiic3yHigh, roiic3yLow, roiic3yMed, rvnPredc10y, sales, salesLatestQ, salesLatestQNorm, shareholderYield, shareholderYieldHigh, shareholderYieldLow, shareholderYieldMed, shares, sloanratio, taxRateMed5y, totalBuyback10y, totalBuyback1y, totalBuyback3y, totalBuyback3yHigh, totalBuyback3yLow, totalBuyback3yMed, totalBuyback5y, ttmEBIT, ttmEBITDA, ttmEps, ttmEpsNri, ttmFcfPerShare, ttmPretaxincome, ttmSales, turnover, wacc, waccHigh, waccLow, waccMed, waccMed5y, yearsOfFinancialHistory, zscore, zscoreHigh, zscoreLow, zscoreMed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StockProfileFundamental {\n");
    sb.append("    effectiveInterestRate: ").append(toIndentedString(effectiveInterestRate)).append("\n");
    sb.append("    insiderSharesOwned: ").append(toIndentedString(insiderSharesOwned)).append("\n");
    sb.append("    institutionSharesHeld: ").append(toIndentedString(institutionSharesHeld)).append("\n");
    sb.append("    PFD: ").append(toIndentedString(PFD)).append("\n");
    sb.append("    ROC_JOEL: ").append(toIndentedString(ROC_JOEL)).append("\n");
    sb.append("    roCJOELHigh: ").append(toIndentedString(roCJOELHigh)).append("\n");
    sb.append("    roCJOELLow: ").append(toIndentedString(roCJOELLow)).append("\n");
    sb.append("    roCJOELMed: ").append(toIndentedString(roCJOELMed)).append("\n");
    sb.append("    roCJOELMed5y: ").append(toIndentedString(roCJOELMed5y)).append("\n");
    sb.append("    ROTA: ").append(toIndentedString(ROTA)).append("\n");
    sb.append("    roTAHigh: ").append(toIndentedString(roTAHigh)).append("\n");
    sb.append("    roTALow: ").append(toIndentedString(roTALow)).append("\n");
    sb.append("    roTAMed: ").append(toIndentedString(roTAMed)).append("\n");
    sb.append("    ROTE: ").append(toIndentedString(ROTE)).append("\n");
    sb.append("    roTEHigh: ").append(toIndentedString(roTEHigh)).append("\n");
    sb.append("    roTELow: ").append(toIndentedString(roTELow)).append("\n");
    sb.append("    roTEMed: ").append(toIndentedString(roTEMed)).append("\n");
    sb.append("    roTEMed5y: ").append(toIndentedString(roTEMed5y)).append("\n");
    sb.append("    SGA: ").append(toIndentedString(SGA)).append("\n");
    sb.append("    SNOA: ").append(toIndentedString(SNOA)).append("\n");
    sb.append("    totalPayoutRatio: ").append(toIndentedString(totalPayoutRatio)).append("\n");
    sb.append("    totalPayoutYield: ").append(toIndentedString(totalPayoutYield)).append("\n");
    sb.append("    afinancialsStartDate: ").append(toIndentedString(afinancialsStartDate)).append("\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    book: ").append(toIndentedString(book)).append("\n");
    sb.append("    buybackYield: ").append(toIndentedString(buybackYield)).append("\n");
    sb.append("    buybackYieldHigh: ").append(toIndentedString(buybackYieldHigh)).append("\n");
    sb.append("    buybackYieldLow: ").append(toIndentedString(buybackYieldLow)).append("\n");
    sb.append("    buybackYieldMed: ").append(toIndentedString(buybackYieldMed)).append("\n");
    sb.append("    cash2debt: ").append(toIndentedString(cash2debt)).append("\n");
    sb.append("    cash2debtHigh: ").append(toIndentedString(cash2debtHigh)).append("\n");
    sb.append("    cash2debtLow: ").append(toIndentedString(cash2debtLow)).append("\n");
    sb.append("    cash2debtMed: ").append(toIndentedString(cash2debtMed)).append("\n");
    sb.append("    cashRatio: ").append(toIndentedString(cashRatio)).append("\n");
    sb.append("    cashRatioHigh: ").append(toIndentedString(cashRatioHigh)).append("\n");
    sb.append("    cashRatioLow: ").append(toIndentedString(cashRatioLow)).append("\n");
    sb.append("    cashRatioMed: ").append(toIndentedString(cashRatioMed)).append("\n");
    sb.append("    ccc: ").append(toIndentedString(ccc)).append("\n");
    sb.append("    correlationBook: ").append(toIndentedString(correlationBook)).append("\n");
    sb.append("    correlationEpsNri: ").append(toIndentedString(correlationEpsNri)).append("\n");
    sb.append("    correlationEvVsEbit: ").append(toIndentedString(correlationEvVsEbit)).append("\n");
    sb.append("    correlationEvVsEbitda: ").append(toIndentedString(correlationEvVsEbitda)).append("\n");
    sb.append("    correlationEvVsFcf: ").append(toIndentedString(correlationEvVsFcf)).append("\n");
    sb.append("    correlationEvVsPretaxIncome: ").append(toIndentedString(correlationEvVsPretaxIncome)).append("\n");
    sb.append("    correlationEvVsRev: ").append(toIndentedString(correlationEvVsRev)).append("\n");
    sb.append("    correlationOcf: ").append(toIndentedString(correlationOcf)).append("\n");
    sb.append("    correlationRev: ").append(toIndentedString(correlationRev)).append("\n");
    sb.append("    currentRatio: ").append(toIndentedString(currentRatio)).append("\n");
    sb.append("    currentRatioHigh: ").append(toIndentedString(currentRatioHigh)).append("\n");
    sb.append("    currentRatioLow: ").append(toIndentedString(currentRatioLow)).append("\n");
    sb.append("    currentRatioMed: ").append(toIndentedString(currentRatioMed)).append("\n");
    sb.append("    daysinventory: ").append(toIndentedString(daysinventory)).append("\n");
    sb.append("    daysinventoryHigh: ").append(toIndentedString(daysinventoryHigh)).append("\n");
    sb.append("    daysinventoryLow: ").append(toIndentedString(daysinventoryLow)).append("\n");
    sb.append("    daysinventoryMed: ").append(toIndentedString(daysinventoryMed)).append("\n");
    sb.append("    dayspayable: ").append(toIndentedString(dayspayable)).append("\n");
    sb.append("    dayspayableHigh: ").append(toIndentedString(dayspayableHigh)).append("\n");
    sb.append("    dayspayableLow: ").append(toIndentedString(dayspayableLow)).append("\n");
    sb.append("    dayspayableMed: ").append(toIndentedString(dayspayableMed)).append("\n");
    sb.append("    dayssalesoutstand: ").append(toIndentedString(dayssalesoutstand)).append("\n");
    sb.append("    dayssalesoutstandHigh: ").append(toIndentedString(dayssalesoutstandHigh)).append("\n");
    sb.append("    dayssalesoutstandLow: ").append(toIndentedString(dayssalesoutstandLow)).append("\n");
    sb.append("    dayssalesoutstandMed: ").append(toIndentedString(dayssalesoutstandMed)).append("\n");
    sb.append("    debt2asset: ").append(toIndentedString(debt2asset)).append("\n");
    sb.append("    debt2ebitda: ").append(toIndentedString(debt2ebitda)).append("\n");
    sb.append("    debt2ebitdaHigh: ").append(toIndentedString(debt2ebitdaHigh)).append("\n");
    sb.append("    debt2ebitdaLow: ").append(toIndentedString(debt2ebitdaLow)).append("\n");
    sb.append("    debt2ebitdaMed: ").append(toIndentedString(debt2ebitdaMed)).append("\n");
    sb.append("    debt2equity: ").append(toIndentedString(debt2equity)).append("\n");
    sb.append("    debt2equityHigh: ").append(toIndentedString(debt2equityHigh)).append("\n");
    sb.append("    debt2equityLow: ").append(toIndentedString(debt2equityLow)).append("\n");
    sb.append("    debt2equityMed: ").append(toIndentedString(debt2equityMed)).append("\n");
    sb.append("    debt2rev: ").append(toIndentedString(debt2rev)).append("\n");
    sb.append("    eps: ").append(toIndentedString(eps)).append("\n");
    sb.append("    epsLatestQ: ").append(toIndentedString(epsLatestQ)).append("\n");
    sb.append("    epsNri: ").append(toIndentedString(epsNri)).append("\n");
    sb.append("    equity2asset: ").append(toIndentedString(equity2asset)).append("\n");
    sb.append("    equity2assetHigh: ").append(toIndentedString(equity2assetHigh)).append("\n");
    sb.append("    equity2assetLow: ").append(toIndentedString(equity2assetLow)).append("\n");
    sb.append("    equity2assetMed: ").append(toIndentedString(equity2assetMed)).append("\n");
    sb.append("    evMorn: ").append(toIndentedString(evMorn)).append("\n");
    sb.append("    evMornNorm: ").append(toIndentedString(evMornNorm)).append("\n");
    sb.append("    fscore: ").append(toIndentedString(fscore)).append("\n");
    sb.append("    fscoreHigh: ").append(toIndentedString(fscoreHigh)).append("\n");
    sb.append("    fscoreLow: ").append(toIndentedString(fscoreLow)).append("\n");
    sb.append("    fscoreMed: ").append(toIndentedString(fscoreMed)).append("\n");
    sb.append("    goodwill2asset: ").append(toIndentedString(goodwill2asset)).append("\n");
    sb.append("    grossprofit: ").append(toIndentedString(grossprofit)).append("\n");
    sb.append("    grossprofit2asset: ").append(toIndentedString(grossprofit2asset)).append("\n");
    sb.append("    grossprofit2tangibleasset: ").append(toIndentedString(grossprofit2tangibleasset)).append("\n");
    sb.append("    insiderOwnership: ").append(toIndentedString(insiderOwnership)).append("\n");
    sb.append("    instOwnership: ").append(toIndentedString(instOwnership)).append("\n");
    sb.append("    interestCoverage: ").append(toIndentedString(interestCoverage)).append("\n");
    sb.append("    interestCoverageHigh: ").append(toIndentedString(interestCoverageHigh)).append("\n");
    sb.append("    interestCoverageLow: ").append(toIndentedString(interestCoverageLow)).append("\n");
    sb.append("    interestCoverageMed: ").append(toIndentedString(interestCoverageMed)).append("\n");
    sb.append("    inventory2sales: ").append(toIndentedString(inventory2sales)).append("\n");
    sb.append("    inventoryTurnover: ").append(toIndentedString(inventoryTurnover)).append("\n");
    sb.append("    latestEarningsReleaseDate: ").append(toIndentedString(latestEarningsReleaseDate)).append("\n");
    sb.append("    liabilitiesToAssets: ").append(toIndentedString(liabilitiesToAssets)).append("\n");
    sb.append("    mktcap: ").append(toIndentedString(mktcap)).append("\n");
    sb.append("    mktcapNorm: ").append(toIndentedString(mktcapNorm)).append("\n");
    sb.append("    mscore: ").append(toIndentedString(mscore)).append("\n");
    sb.append("    mscoreHigh: ").append(toIndentedString(mscoreHigh)).append("\n");
    sb.append("    mscoreLow: ").append(toIndentedString(mscoreLow)).append("\n");
    sb.append("    mscoreMed: ").append(toIndentedString(mscoreMed)).append("\n");
    sb.append("    netDebtPaydownYield: ").append(toIndentedString(netDebtPaydownYield)).append("\n");
    sb.append("    netDebtPaydownYieldHigh: ").append(toIndentedString(netDebtPaydownYieldHigh)).append("\n");
    sb.append("    netDebtPaydownYieldLow: ").append(toIndentedString(netDebtPaydownYieldLow)).append("\n");
    sb.append("    netDebtPaydownYieldMed: ").append(toIndentedString(netDebtPaydownYieldMed)).append("\n");
    sb.append("    nextEarningsDate: ").append(toIndentedString(nextEarningsDate)).append("\n");
    sb.append("    numGoodSigns: ").append(toIndentedString(numGoodSigns)).append("\n");
    sb.append("    numWarningSignsMeidum: ").append(toIndentedString(numWarningSignsMeidum)).append("\n");
    sb.append("    numWarningSignsSevere: ").append(toIndentedString(numWarningSignsSevere)).append("\n");
    sb.append("    pastEarningsDate: ").append(toIndentedString(pastEarningsDate)).append("\n");
    sb.append("    quickRatio: ").append(toIndentedString(quickRatio)).append("\n");
    sb.append("    quickRatioHigh: ").append(toIndentedString(quickRatioHigh)).append("\n");
    sb.append("    quickRatioLow: ").append(toIndentedString(quickRatioLow)).append("\n");
    sb.append("    quickRatioMed: ").append(toIndentedString(quickRatioMed)).append("\n");
    sb.append("    receivablesTurnover: ").append(toIndentedString(receivablesTurnover)).append("\n");
    sb.append("    relatedComp: ").append(toIndentedString(relatedComp)).append("\n");
    sb.append("    roa: ").append(toIndentedString(roa)).append("\n");
    sb.append("    roaHigh: ").append(toIndentedString(roaHigh)).append("\n");
    sb.append("    roaLow: ").append(toIndentedString(roaLow)).append("\n");
    sb.append("    roaMed: ").append(toIndentedString(roaMed)).append("\n");
    sb.append("    roaMed5y: ").append(toIndentedString(roaMed5y)).append("\n");
    sb.append("    roc: ").append(toIndentedString(roc)).append("\n");
    sb.append("    roce: ").append(toIndentedString(roce)).append("\n");
    sb.append("    roceHigh: ").append(toIndentedString(roceHigh)).append("\n");
    sb.append("    roceLow: ").append(toIndentedString(roceLow)).append("\n");
    sb.append("    roceMed: ").append(toIndentedString(roceMed)).append("\n");
    sb.append("    roceMed5y: ").append(toIndentedString(roceMed5y)).append("\n");
    sb.append("    roe: ").append(toIndentedString(roe)).append("\n");
    sb.append("    roeAdj: ").append(toIndentedString(roeAdj)).append("\n");
    sb.append("    roeHigh: ").append(toIndentedString(roeHigh)).append("\n");
    sb.append("    roeLow: ").append(toIndentedString(roeLow)).append("\n");
    sb.append("    roeMed: ").append(toIndentedString(roeMed)).append("\n");
    sb.append("    roeMed5y: ").append(toIndentedString(roeMed5y)).append("\n");
    sb.append("    roic: ").append(toIndentedString(roic)).append("\n");
    sb.append("    roicHigh: ").append(toIndentedString(roicHigh)).append("\n");
    sb.append("    roicLow: ").append(toIndentedString(roicLow)).append("\n");
    sb.append("    roicMed: ").append(toIndentedString(roicMed)).append("\n");
    sb.append("    roicMed5y: ").append(toIndentedString(roicMed5y)).append("\n");
    sb.append("    roiic3y: ").append(toIndentedString(roiic3y)).append("\n");
    sb.append("    roiic3yHigh: ").append(toIndentedString(roiic3yHigh)).append("\n");
    sb.append("    roiic3yLow: ").append(toIndentedString(roiic3yLow)).append("\n");
    sb.append("    roiic3yMed: ").append(toIndentedString(roiic3yMed)).append("\n");
    sb.append("    rvnPredc10y: ").append(toIndentedString(rvnPredc10y)).append("\n");
    sb.append("    sales: ").append(toIndentedString(sales)).append("\n");
    sb.append("    salesLatestQ: ").append(toIndentedString(salesLatestQ)).append("\n");
    sb.append("    salesLatestQNorm: ").append(toIndentedString(salesLatestQNorm)).append("\n");
    sb.append("    shareholderYield: ").append(toIndentedString(shareholderYield)).append("\n");
    sb.append("    shareholderYieldHigh: ").append(toIndentedString(shareholderYieldHigh)).append("\n");
    sb.append("    shareholderYieldLow: ").append(toIndentedString(shareholderYieldLow)).append("\n");
    sb.append("    shareholderYieldMed: ").append(toIndentedString(shareholderYieldMed)).append("\n");
    sb.append("    shares: ").append(toIndentedString(shares)).append("\n");
    sb.append("    sloanratio: ").append(toIndentedString(sloanratio)).append("\n");
    sb.append("    taxRateMed5y: ").append(toIndentedString(taxRateMed5y)).append("\n");
    sb.append("    totalBuyback10y: ").append(toIndentedString(totalBuyback10y)).append("\n");
    sb.append("    totalBuyback1y: ").append(toIndentedString(totalBuyback1y)).append("\n");
    sb.append("    totalBuyback3y: ").append(toIndentedString(totalBuyback3y)).append("\n");
    sb.append("    totalBuyback3yHigh: ").append(toIndentedString(totalBuyback3yHigh)).append("\n");
    sb.append("    totalBuyback3yLow: ").append(toIndentedString(totalBuyback3yLow)).append("\n");
    sb.append("    totalBuyback3yMed: ").append(toIndentedString(totalBuyback3yMed)).append("\n");
    sb.append("    totalBuyback5y: ").append(toIndentedString(totalBuyback5y)).append("\n");
    sb.append("    ttmEBIT: ").append(toIndentedString(ttmEBIT)).append("\n");
    sb.append("    ttmEBITDA: ").append(toIndentedString(ttmEBITDA)).append("\n");
    sb.append("    ttmEps: ").append(toIndentedString(ttmEps)).append("\n");
    sb.append("    ttmEpsNri: ").append(toIndentedString(ttmEpsNri)).append("\n");
    sb.append("    ttmFcfPerShare: ").append(toIndentedString(ttmFcfPerShare)).append("\n");
    sb.append("    ttmPretaxincome: ").append(toIndentedString(ttmPretaxincome)).append("\n");
    sb.append("    ttmSales: ").append(toIndentedString(ttmSales)).append("\n");
    sb.append("    turnover: ").append(toIndentedString(turnover)).append("\n");
    sb.append("    wacc: ").append(toIndentedString(wacc)).append("\n");
    sb.append("    waccHigh: ").append(toIndentedString(waccHigh)).append("\n");
    sb.append("    waccLow: ").append(toIndentedString(waccLow)).append("\n");
    sb.append("    waccMed: ").append(toIndentedString(waccMed)).append("\n");
    sb.append("    waccMed5y: ").append(toIndentedString(waccMed5y)).append("\n");
    sb.append("    yearsOfFinancialHistory: ").append(toIndentedString(yearsOfFinancialHistory)).append("\n");
    sb.append("    zscore: ").append(toIndentedString(zscore)).append("\n");
    sb.append("    zscoreHigh: ").append(toIndentedString(zscoreHigh)).append("\n");
    sb.append("    zscoreLow: ").append(toIndentedString(zscoreLow)).append("\n");
    sb.append("    zscoreMed: ").append(toIndentedString(zscoreMed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EffectiveInterestRate");
    openapiFields.add("InsiderSharesOwned");
    openapiFields.add("InstitutionSharesHeld");
    openapiFields.add("PFD");
    openapiFields.add("ROC_JOEL");
    openapiFields.add("ROC_JOEL_high");
    openapiFields.add("ROC_JOEL_low");
    openapiFields.add("ROC_JOEL_med");
    openapiFields.add("ROC_JOEL_med_5y");
    openapiFields.add("ROTA");
    openapiFields.add("ROTA_high");
    openapiFields.add("ROTA_low");
    openapiFields.add("ROTA_med");
    openapiFields.add("ROTE");
    openapiFields.add("ROTE_high");
    openapiFields.add("ROTE_low");
    openapiFields.add("ROTE_med");
    openapiFields.add("ROTE_med_5y");
    openapiFields.add("SGA");
    openapiFields.add("SNOA");
    openapiFields.add("TotalPayoutRatio");
    openapiFields.add("TotalPayoutYield");
    openapiFields.add("afinancials_start_date");
    openapiFields.add("asset");
    openapiFields.add("book");
    openapiFields.add("buyback_yield");
    openapiFields.add("buyback_yield_high");
    openapiFields.add("buyback_yield_low");
    openapiFields.add("buyback_yield_med");
    openapiFields.add("cash2debt");
    openapiFields.add("cash2debt_high");
    openapiFields.add("cash2debt_low");
    openapiFields.add("cash2debt_med");
    openapiFields.add("cash_ratio");
    openapiFields.add("cash_ratio_high");
    openapiFields.add("cash_ratio_low");
    openapiFields.add("cash_ratio_med");
    openapiFields.add("ccc");
    openapiFields.add("correlation_book");
    openapiFields.add("correlation_eps_nri");
    openapiFields.add("correlation_ev_vs_ebit");
    openapiFields.add("correlation_ev_vs_ebitda");
    openapiFields.add("correlation_ev_vs_fcf");
    openapiFields.add("correlation_ev_vs_pretax_income");
    openapiFields.add("correlation_ev_vs_rev");
    openapiFields.add("correlation_ocf");
    openapiFields.add("correlation_rev");
    openapiFields.add("current_ratio");
    openapiFields.add("current_ratio_high");
    openapiFields.add("current_ratio_low");
    openapiFields.add("current_ratio_med");
    openapiFields.add("daysinventory");
    openapiFields.add("daysinventory_high");
    openapiFields.add("daysinventory_low");
    openapiFields.add("daysinventory_med");
    openapiFields.add("dayspayable");
    openapiFields.add("dayspayable_high");
    openapiFields.add("dayspayable_low");
    openapiFields.add("dayspayable_med");
    openapiFields.add("dayssalesoutstand");
    openapiFields.add("dayssalesoutstand_high");
    openapiFields.add("dayssalesoutstand_low");
    openapiFields.add("dayssalesoutstand_med");
    openapiFields.add("debt2asset");
    openapiFields.add("debt2ebitda");
    openapiFields.add("debt2ebitda_high");
    openapiFields.add("debt2ebitda_low");
    openapiFields.add("debt2ebitda_med");
    openapiFields.add("debt2equity");
    openapiFields.add("debt2equity_high");
    openapiFields.add("debt2equity_low");
    openapiFields.add("debt2equity_med");
    openapiFields.add("debt2rev");
    openapiFields.add("eps");
    openapiFields.add("eps_latest_q");
    openapiFields.add("eps_nri");
    openapiFields.add("equity2asset");
    openapiFields.add("equity2asset_high");
    openapiFields.add("equity2asset_low");
    openapiFields.add("equity2asset_med");
    openapiFields.add("ev_morn");
    openapiFields.add("ev_morn_norm");
    openapiFields.add("fscore");
    openapiFields.add("fscore_high");
    openapiFields.add("fscore_low");
    openapiFields.add("fscore_med");
    openapiFields.add("goodwill2asset");
    openapiFields.add("grossprofit");
    openapiFields.add("grossprofit2asset");
    openapiFields.add("grossprofit2tangibleasset");
    openapiFields.add("insider_ownership");
    openapiFields.add("inst_ownership");
    openapiFields.add("interest_coverage");
    openapiFields.add("interest_coverage_high");
    openapiFields.add("interest_coverage_low");
    openapiFields.add("interest_coverage_med");
    openapiFields.add("inventory2sales");
    openapiFields.add("inventory_turnover");
    openapiFields.add("latest_earnings_release_date");
    openapiFields.add("liabilities_to_assets");
    openapiFields.add("mktcap");
    openapiFields.add("mktcap_norm");
    openapiFields.add("mscore");
    openapiFields.add("mscore_high");
    openapiFields.add("mscore_low");
    openapiFields.add("mscore_med");
    openapiFields.add("net_debt_paydown_yield");
    openapiFields.add("net_debt_paydown_yield_high");
    openapiFields.add("net_debt_paydown_yield_low");
    openapiFields.add("net_debt_paydown_yield_med");
    openapiFields.add("next_earnings_date");
    openapiFields.add("num_good_signs");
    openapiFields.add("num_warning_signs_meidum");
    openapiFields.add("num_warning_signs_severe");
    openapiFields.add("past_earnings_date");
    openapiFields.add("quick_ratio");
    openapiFields.add("quick_ratio_high");
    openapiFields.add("quick_ratio_low");
    openapiFields.add("quick_ratio_med");
    openapiFields.add("receivables_turnover");
    openapiFields.add("related_comp");
    openapiFields.add("roa");
    openapiFields.add("roa_high");
    openapiFields.add("roa_low");
    openapiFields.add("roa_med");
    openapiFields.add("roa_med_5y");
    openapiFields.add("roc");
    openapiFields.add("roce");
    openapiFields.add("roce_high");
    openapiFields.add("roce_low");
    openapiFields.add("roce_med");
    openapiFields.add("roce_med_5y");
    openapiFields.add("roe");
    openapiFields.add("roe_adj");
    openapiFields.add("roe_high");
    openapiFields.add("roe_low");
    openapiFields.add("roe_med");
    openapiFields.add("roe_med_5y");
    openapiFields.add("roic");
    openapiFields.add("roic_high");
    openapiFields.add("roic_low");
    openapiFields.add("roic_med");
    openapiFields.add("roic_med_5y");
    openapiFields.add("roiic_3y");
    openapiFields.add("roiic_3y_high");
    openapiFields.add("roiic_3y_low");
    openapiFields.add("roiic_3y_med");
    openapiFields.add("rvn_predc_10y");
    openapiFields.add("sales");
    openapiFields.add("sales_latest_q");
    openapiFields.add("sales_latest_q_norm");
    openapiFields.add("shareholder_yield");
    openapiFields.add("shareholder_yield_high");
    openapiFields.add("shareholder_yield_low");
    openapiFields.add("shareholder_yield_med");
    openapiFields.add("shares");
    openapiFields.add("sloanratio");
    openapiFields.add("tax_rate_med_5y");
    openapiFields.add("total_buyback_10y");
    openapiFields.add("total_buyback_1y");
    openapiFields.add("total_buyback_3y");
    openapiFields.add("total_buyback_3y_high");
    openapiFields.add("total_buyback_3y_low");
    openapiFields.add("total_buyback_3y_med");
    openapiFields.add("total_buyback_5y");
    openapiFields.add("ttm_EBIT");
    openapiFields.add("ttm_EBITDA");
    openapiFields.add("ttm_eps");
    openapiFields.add("ttm_eps_nri");
    openapiFields.add("ttm_fcf_per_share");
    openapiFields.add("ttm_pretaxincome");
    openapiFields.add("ttm_sales");
    openapiFields.add("turnover");
    openapiFields.add("wacc");
    openapiFields.add("wacc_high");
    openapiFields.add("wacc_low");
    openapiFields.add("wacc_med");
    openapiFields.add("wacc_med_5y");
    openapiFields.add("years_of_financial_history");
    openapiFields.add("zscore");
    openapiFields.add("zscore_high");
    openapiFields.add("zscore_low");
    openapiFields.add("zscore_med");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StockProfileFundamental
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StockProfileFundamental.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StockProfileFundamental is not found in the empty JSON string", StockProfileFundamental.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StockProfileFundamental.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StockProfileFundamental` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("afinancials_start_date") != null && !jsonObj.get("afinancials_start_date").isJsonNull()) && !jsonObj.get("afinancials_start_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `afinancials_start_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("afinancials_start_date").toString()));
      }
      if ((jsonObj.get("latest_earnings_release_date") != null && !jsonObj.get("latest_earnings_release_date").isJsonNull()) && !jsonObj.get("latest_earnings_release_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latest_earnings_release_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latest_earnings_release_date").toString()));
      }
      if ((jsonObj.get("next_earnings_date") != null && !jsonObj.get("next_earnings_date").isJsonNull()) && !jsonObj.get("next_earnings_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `next_earnings_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("next_earnings_date").toString()));
      }
      if ((jsonObj.get("past_earnings_date") != null && !jsonObj.get("past_earnings_date").isJsonNull()) && !jsonObj.get("past_earnings_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `past_earnings_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("past_earnings_date").toString()));
      }
      if ((jsonObj.get("related_comp") != null && !jsonObj.get("related_comp").isJsonNull()) && !jsonObj.get("related_comp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `related_comp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("related_comp").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StockProfileFundamental.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StockProfileFundamental' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StockProfileFundamental> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StockProfileFundamental.class));

       return (TypeAdapter<T>) new TypeAdapter<StockProfileFundamental>() {
           @Override
           public void write(JsonWriter out, StockProfileFundamental value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StockProfileFundamental read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StockProfileFundamental given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StockProfileFundamental
   * @throws IOException if the JSON string is invalid with respect to StockProfileFundamental
   */
  public static StockProfileFundamental fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StockProfileFundamental.class);
  }

  /**
   * Convert an instance of StockProfileFundamental to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

