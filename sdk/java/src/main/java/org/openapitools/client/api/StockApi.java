/*
 * Gurufocus Data Package API
 * API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.DownloadListGet403Response;
import org.openapitools.client.model.DownloadListGet404Response;
import org.openapitools.client.model.DownloadListGet500Response;
import org.openapitools.client.model.StocksSymbolFundamentalsGet200Response;
import org.openapitools.client.model.StocksSymbolProfileGet200Response;
import org.openapitools.client.model.StocksSymbolRankingsGet200Response;
import org.openapitools.client.model.StocksSymbolSegmentGet200Response;
import org.openapitools.client.model.StocksSymbolValuationsGet200Response;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class StockApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public StockApi() {
        this(Configuration.getDefaultApiClient());
    }

    public StockApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for stocksSymbolFundamentalsGet
     * @param symbol Stock symbol (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Complete historical financial statements providing the data needed for in-depth analysis, valuation modeling, and building investment research platforms. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stocksSymbolFundamentalsGetCall(String symbol, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/stocks/{symbol}/fundamentals"
            .replace("{" + "symbol" + "}", localVarApiClient.escapeString(symbol.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call stocksSymbolFundamentalsGetValidateBeforeCall(String symbol, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'symbol' is set
        if (symbol == null) {
            throw new ApiException("Missing the required parameter 'symbol' when calling stocksSymbolFundamentalsGet(Async)");
        }

        return stocksSymbolFundamentalsGetCall(symbol, _callback);

    }

    /**
     * Complete historical financial statements providing the data needed for in-depth analysis, valuation modeling, and building investment research platforms.
     * &lt;ul&gt; &lt;li&gt;Income Statement&lt;/li&gt; &lt;li&gt;Balance Sheet&lt;/li&gt; &lt;li&gt;Cash Flow Statement&lt;/li&gt; &lt;/ul&gt;
     * @param symbol Stock symbol (required)
     * @return StocksSymbolFundamentalsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Complete historical financial statements providing the data needed for in-depth analysis, valuation modeling, and building investment research platforms. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public StocksSymbolFundamentalsGet200Response stocksSymbolFundamentalsGet(String symbol) throws ApiException {
        ApiResponse<StocksSymbolFundamentalsGet200Response> localVarResp = stocksSymbolFundamentalsGetWithHttpInfo(symbol);
        return localVarResp.getData();
    }

    /**
     * Complete historical financial statements providing the data needed for in-depth analysis, valuation modeling, and building investment research platforms.
     * &lt;ul&gt; &lt;li&gt;Income Statement&lt;/li&gt; &lt;li&gt;Balance Sheet&lt;/li&gt; &lt;li&gt;Cash Flow Statement&lt;/li&gt; &lt;/ul&gt;
     * @param symbol Stock symbol (required)
     * @return ApiResponse&lt;StocksSymbolFundamentalsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Complete historical financial statements providing the data needed for in-depth analysis, valuation modeling, and building investment research platforms. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<StocksSymbolFundamentalsGet200Response> stocksSymbolFundamentalsGetWithHttpInfo(String symbol) throws ApiException {
        okhttp3.Call localVarCall = stocksSymbolFundamentalsGetValidateBeforeCall(symbol, null);
        Type localVarReturnType = new TypeToken<StocksSymbolFundamentalsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Complete historical financial statements providing the data needed for in-depth analysis, valuation modeling, and building investment research platforms. (asynchronously)
     * &lt;ul&gt; &lt;li&gt;Income Statement&lt;/li&gt; &lt;li&gt;Balance Sheet&lt;/li&gt; &lt;li&gt;Cash Flow Statement&lt;/li&gt; &lt;/ul&gt;
     * @param symbol Stock symbol (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Complete historical financial statements providing the data needed for in-depth analysis, valuation modeling, and building investment research platforms. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stocksSymbolFundamentalsGetAsync(String symbol, final ApiCallback<StocksSymbolFundamentalsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = stocksSymbolFundamentalsGetValidateBeforeCall(symbol, _callback);
        Type localVarReturnType = new TypeToken<StocksSymbolFundamentalsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for stocksSymbolProfileGet
     * @param symbol Stock symbol (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Access essential company details and current valuation metrics to power investment platforms, populate company directories, or enhance financial analysis tools with up-to-date market data. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stocksSymbolProfileGetCall(String symbol, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/stocks/{symbol}/profile"
            .replace("{" + "symbol" + "}", localVarApiClient.escapeString(symbol.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call stocksSymbolProfileGetValidateBeforeCall(String symbol, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'symbol' is set
        if (symbol == null) {
            throw new ApiException("Missing the required parameter 'symbol' when calling stocksSymbolProfileGet(Async)");
        }

        return stocksSymbolProfileGetCall(symbol, _callback);

    }

    /**
     * Access essential company details and current valuation metrics to power investment platforms, populate company directories, or enhance financial analysis tools with up-to-date market data.
     * &lt;ul&gt; &lt;li&gt;Basic company info &lt;p&gt;Name, description, address, etc.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;Current stock price&lt;/li&gt; &lt;li&gt;Current key valuation ratios &lt;p&gt;P/E, P/B, P/S, etc.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;And more!&lt;/li&gt; &lt;/ul&gt; 
     * @param symbol Stock symbol (required)
     * @return StocksSymbolProfileGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Access essential company details and current valuation metrics to power investment platforms, populate company directories, or enhance financial analysis tools with up-to-date market data. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public StocksSymbolProfileGet200Response stocksSymbolProfileGet(String symbol) throws ApiException {
        ApiResponse<StocksSymbolProfileGet200Response> localVarResp = stocksSymbolProfileGetWithHttpInfo(symbol);
        return localVarResp.getData();
    }

    /**
     * Access essential company details and current valuation metrics to power investment platforms, populate company directories, or enhance financial analysis tools with up-to-date market data.
     * &lt;ul&gt; &lt;li&gt;Basic company info &lt;p&gt;Name, description, address, etc.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;Current stock price&lt;/li&gt; &lt;li&gt;Current key valuation ratios &lt;p&gt;P/E, P/B, P/S, etc.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;And more!&lt;/li&gt; &lt;/ul&gt; 
     * @param symbol Stock symbol (required)
     * @return ApiResponse&lt;StocksSymbolProfileGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Access essential company details and current valuation metrics to power investment platforms, populate company directories, or enhance financial analysis tools with up-to-date market data. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<StocksSymbolProfileGet200Response> stocksSymbolProfileGetWithHttpInfo(String symbol) throws ApiException {
        okhttp3.Call localVarCall = stocksSymbolProfileGetValidateBeforeCall(symbol, null);
        Type localVarReturnType = new TypeToken<StocksSymbolProfileGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Access essential company details and current valuation metrics to power investment platforms, populate company directories, or enhance financial analysis tools with up-to-date market data. (asynchronously)
     * &lt;ul&gt; &lt;li&gt;Basic company info &lt;p&gt;Name, description, address, etc.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;Current stock price&lt;/li&gt; &lt;li&gt;Current key valuation ratios &lt;p&gt;P/E, P/B, P/S, etc.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;And more!&lt;/li&gt; &lt;/ul&gt; 
     * @param symbol Stock symbol (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Access essential company details and current valuation metrics to power investment platforms, populate company directories, or enhance financial analysis tools with up-to-date market data. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stocksSymbolProfileGetAsync(String symbol, final ApiCallback<StocksSymbolProfileGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = stocksSymbolProfileGetValidateBeforeCall(symbol, _callback);
        Type localVarReturnType = new TypeToken<StocksSymbolProfileGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for stocksSymbolRankingsGet
     * @param symbol Stock symbol (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Proprietary scoring and ranking systems that assess company quality, valuation, and performance for powering data-driven investment platforms. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stocksSymbolRankingsGetCall(String symbol, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/stocks/{symbol}/rankings"
            .replace("{" + "symbol" + "}", localVarApiClient.escapeString(symbol.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call stocksSymbolRankingsGetValidateBeforeCall(String symbol, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'symbol' is set
        if (symbol == null) {
            throw new ApiException("Missing the required parameter 'symbol' when calling stocksSymbolRankingsGet(Async)");
        }

        return stocksSymbolRankingsGetCall(symbol, _callback);

    }

    /**
     * Proprietary scoring and ranking systems that assess company quality, valuation, and performance for powering data-driven investment platforms.
     * &lt;ul&gt; &lt;li&gt;GF Score&lt;/li&gt; &lt;li&gt;GF Value&lt;/li&gt; &lt;li&gt;Predictability Rank&lt;/li&gt; &lt;li&gt;Financial Strength&lt;/li&gt; &lt;li&gt;Profitability Rank&lt;/li&gt; &lt;li&gt;and more!&lt;/li&gt; &lt;/ul&gt;
     * @param symbol Stock symbol (required)
     * @return StocksSymbolRankingsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Proprietary scoring and ranking systems that assess company quality, valuation, and performance for powering data-driven investment platforms. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public StocksSymbolRankingsGet200Response stocksSymbolRankingsGet(String symbol) throws ApiException {
        ApiResponse<StocksSymbolRankingsGet200Response> localVarResp = stocksSymbolRankingsGetWithHttpInfo(symbol);
        return localVarResp.getData();
    }

    /**
     * Proprietary scoring and ranking systems that assess company quality, valuation, and performance for powering data-driven investment platforms.
     * &lt;ul&gt; &lt;li&gt;GF Score&lt;/li&gt; &lt;li&gt;GF Value&lt;/li&gt; &lt;li&gt;Predictability Rank&lt;/li&gt; &lt;li&gt;Financial Strength&lt;/li&gt; &lt;li&gt;Profitability Rank&lt;/li&gt; &lt;li&gt;and more!&lt;/li&gt; &lt;/ul&gt;
     * @param symbol Stock symbol (required)
     * @return ApiResponse&lt;StocksSymbolRankingsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Proprietary scoring and ranking systems that assess company quality, valuation, and performance for powering data-driven investment platforms. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<StocksSymbolRankingsGet200Response> stocksSymbolRankingsGetWithHttpInfo(String symbol) throws ApiException {
        okhttp3.Call localVarCall = stocksSymbolRankingsGetValidateBeforeCall(symbol, null);
        Type localVarReturnType = new TypeToken<StocksSymbolRankingsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Proprietary scoring and ranking systems that assess company quality, valuation, and performance for powering data-driven investment platforms. (asynchronously)
     * &lt;ul&gt; &lt;li&gt;GF Score&lt;/li&gt; &lt;li&gt;GF Value&lt;/li&gt; &lt;li&gt;Predictability Rank&lt;/li&gt; &lt;li&gt;Financial Strength&lt;/li&gt; &lt;li&gt;Profitability Rank&lt;/li&gt; &lt;li&gt;and more!&lt;/li&gt; &lt;/ul&gt;
     * @param symbol Stock symbol (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Proprietary scoring and ranking systems that assess company quality, valuation, and performance for powering data-driven investment platforms. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stocksSymbolRankingsGetAsync(String symbol, final ApiCallback<StocksSymbolRankingsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = stocksSymbolRankingsGetValidateBeforeCall(symbol, _callback);
        Type localVarReturnType = new TypeToken<StocksSymbolRankingsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for stocksSymbolSegmentGet
     * @param symbol Stock symbol (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Gain insights into a company&#39;s revenue breakdown by product and geography to build detailed financial visualizations, enhance stock research platforms, or create data-driven market analysis tools </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stocksSymbolSegmentGetCall(String symbol, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/stocks/{symbol}/segment"
            .replace("{" + "symbol" + "}", localVarApiClient.escapeString(symbol.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call stocksSymbolSegmentGetValidateBeforeCall(String symbol, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'symbol' is set
        if (symbol == null) {
            throw new ApiException("Missing the required parameter 'symbol' when calling stocksSymbolSegmentGet(Async)");
        }

        return stocksSymbolSegmentGetCall(symbol, _callback);

    }

    /**
     * Gain insights into a company&#39;s revenue breakdown by product and geography to build detailed financial visualizations, enhance stock research platforms, or create data-driven market analysis tools
     * &lt;ul&gt; &lt;li&gt;Geographic segment data&lt;/li&gt; &lt;li&gt;Product and service segment data&lt;/li&gt; &lt;/ul&gt;
     * @param symbol Stock symbol (required)
     * @return StocksSymbolSegmentGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Gain insights into a company&#39;s revenue breakdown by product and geography to build detailed financial visualizations, enhance stock research platforms, or create data-driven market analysis tools </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public StocksSymbolSegmentGet200Response stocksSymbolSegmentGet(String symbol) throws ApiException {
        ApiResponse<StocksSymbolSegmentGet200Response> localVarResp = stocksSymbolSegmentGetWithHttpInfo(symbol);
        return localVarResp.getData();
    }

    /**
     * Gain insights into a company&#39;s revenue breakdown by product and geography to build detailed financial visualizations, enhance stock research platforms, or create data-driven market analysis tools
     * &lt;ul&gt; &lt;li&gt;Geographic segment data&lt;/li&gt; &lt;li&gt;Product and service segment data&lt;/li&gt; &lt;/ul&gt;
     * @param symbol Stock symbol (required)
     * @return ApiResponse&lt;StocksSymbolSegmentGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Gain insights into a company&#39;s revenue breakdown by product and geography to build detailed financial visualizations, enhance stock research platforms, or create data-driven market analysis tools </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<StocksSymbolSegmentGet200Response> stocksSymbolSegmentGetWithHttpInfo(String symbol) throws ApiException {
        okhttp3.Call localVarCall = stocksSymbolSegmentGetValidateBeforeCall(symbol, null);
        Type localVarReturnType = new TypeToken<StocksSymbolSegmentGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Gain insights into a company&#39;s revenue breakdown by product and geography to build detailed financial visualizations, enhance stock research platforms, or create data-driven market analysis tools (asynchronously)
     * &lt;ul&gt; &lt;li&gt;Geographic segment data&lt;/li&gt; &lt;li&gt;Product and service segment data&lt;/li&gt; &lt;/ul&gt;
     * @param symbol Stock symbol (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Gain insights into a company&#39;s revenue breakdown by product and geography to build detailed financial visualizations, enhance stock research platforms, or create data-driven market analysis tools </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stocksSymbolSegmentGetAsync(String symbol, final ApiCallback<StocksSymbolSegmentGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = stocksSymbolSegmentGetValidateBeforeCall(symbol, _callback);
        Type localVarReturnType = new TypeToken<StocksSymbolSegmentGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for stocksSymbolValuationsGet
     * @param symbol Stock symbol (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A deep dataset of historical valuation metrics to support investors and entrepreneurs in the development of data-driven investment platforms. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stocksSymbolValuationsGetCall(String symbol, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/stocks/{symbol}/valuations"
            .replace("{" + "symbol" + "}", localVarApiClient.escapeString(symbol.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "ApiKeyAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call stocksSymbolValuationsGetValidateBeforeCall(String symbol, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'symbol' is set
        if (symbol == null) {
            throw new ApiException("Missing the required parameter 'symbol' when calling stocksSymbolValuationsGet(Async)");
        }

        return stocksSymbolValuationsGetCall(symbol, _callback);

    }

    /**
     * A deep dataset of historical valuation metrics to support investors and entrepreneurs in the development of data-driven investment platforms.
     * &lt;ul&gt; &lt;li&gt;P/E Ratios&lt;/li&gt; &lt;li&gt;P/B Ratios&lt;/li&gt; &lt;li&gt;Dividend Yields&lt;/li&gt; &lt;li&gt;F-Scores&lt;/li&gt; &lt;li&gt;Z-Scores&lt;/li&gt; &lt;li&gt;And more!&lt;/li&gt; &lt;/ul&gt;
     * @param symbol Stock symbol (required)
     * @return StocksSymbolValuationsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A deep dataset of historical valuation metrics to support investors and entrepreneurs in the development of data-driven investment platforms. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public StocksSymbolValuationsGet200Response stocksSymbolValuationsGet(String symbol) throws ApiException {
        ApiResponse<StocksSymbolValuationsGet200Response> localVarResp = stocksSymbolValuationsGetWithHttpInfo(symbol);
        return localVarResp.getData();
    }

    /**
     * A deep dataset of historical valuation metrics to support investors and entrepreneurs in the development of data-driven investment platforms.
     * &lt;ul&gt; &lt;li&gt;P/E Ratios&lt;/li&gt; &lt;li&gt;P/B Ratios&lt;/li&gt; &lt;li&gt;Dividend Yields&lt;/li&gt; &lt;li&gt;F-Scores&lt;/li&gt; &lt;li&gt;Z-Scores&lt;/li&gt; &lt;li&gt;And more!&lt;/li&gt; &lt;/ul&gt;
     * @param symbol Stock symbol (required)
     * @return ApiResponse&lt;StocksSymbolValuationsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A deep dataset of historical valuation metrics to support investors and entrepreneurs in the development of data-driven investment platforms. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<StocksSymbolValuationsGet200Response> stocksSymbolValuationsGetWithHttpInfo(String symbol) throws ApiException {
        okhttp3.Call localVarCall = stocksSymbolValuationsGetValidateBeforeCall(symbol, null);
        Type localVarReturnType = new TypeToken<StocksSymbolValuationsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * A deep dataset of historical valuation metrics to support investors and entrepreneurs in the development of data-driven investment platforms. (asynchronously)
     * &lt;ul&gt; &lt;li&gt;P/E Ratios&lt;/li&gt; &lt;li&gt;P/B Ratios&lt;/li&gt; &lt;li&gt;Dividend Yields&lt;/li&gt; &lt;li&gt;F-Scores&lt;/li&gt; &lt;li&gt;Z-Scores&lt;/li&gt; &lt;li&gt;And more!&lt;/li&gt; &lt;/ul&gt;
     * @param symbol Stock symbol (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A deep dataset of historical valuation metrics to support investors and entrepreneurs in the development of data-driven investment platforms. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> 403003: No permission to check resource </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> 404001: Resource not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> 500001: There are internal error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stocksSymbolValuationsGetAsync(String symbol, final ApiCallback<StocksSymbolValuationsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = stocksSymbolValuationsGetValidateBeforeCall(symbol, _callback);
        Type localVarReturnType = new TypeToken<StocksSymbolValuationsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
