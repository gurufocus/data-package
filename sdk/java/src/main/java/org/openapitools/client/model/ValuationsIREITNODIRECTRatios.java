/*
 * Gurufocus Data Package API
 * API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ValuationsIREITNODIRECTRatios
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-11T01:10:00.357398434Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class ValuationsIREITNODIRECTRatios {
  public static final String SERIALIZED_NAME_CAPEX_TO_OPERATING_CASH_FLOW = "capex_to_operating_cash_flow";
  @SerializedName(SERIALIZED_NAME_CAPEX_TO_OPERATING_CASH_FLOW)
  @javax.annotation.Nullable
  private BigDecimal capexToOperatingCashFlow;

  public static final String SERIALIZED_NAME_CAPEX_TO_REVENUE = "capex_to_revenue";
  @SerializedName(SERIALIZED_NAME_CAPEX_TO_REVENUE)
  @javax.annotation.Nullable
  private BigDecimal capexToRevenue;

  public static final String SERIALIZED_NAME_DEBT_TO_ASSET = "debt_to_asset";
  @SerializedName(SERIALIZED_NAME_DEBT_TO_ASSET)
  @javax.annotation.Nullable
  private BigDecimal debtToAsset;

  public static final String SERIALIZED_NAME_DEBT_TO_EQUITY = "debt_to_equity";
  @SerializedName(SERIALIZED_NAME_DEBT_TO_EQUITY)
  @javax.annotation.Nullable
  private BigDecimal debtToEquity;

  public static final String SERIALIZED_NAME_DEGREE_OF_FINANCIAL_LEVERAGE = "degree_of_financial_leverage";
  @SerializedName(SERIALIZED_NAME_DEGREE_OF_FINANCIAL_LEVERAGE)
  @javax.annotation.Nullable
  private BigDecimal degreeOfFinancialLeverage;

  public static final String SERIALIZED_NAME_DEGREE_OF_OPERATING_LEVERAGE = "degree_of_operating_leverage";
  @SerializedName(SERIALIZED_NAME_DEGREE_OF_OPERATING_LEVERAGE)
  @javax.annotation.Nullable
  private BigDecimal degreeOfOperatingLeverage;

  public static final String SERIALIZED_NAME_DIVIDEND_TO_FFO = "dividend_to_ffo";
  @SerializedName(SERIALIZED_NAME_DIVIDEND_TO_FFO)
  @javax.annotation.Nullable
  private BigDecimal dividendToFfo;

  public static final String SERIALIZED_NAME_EBITDA_MARGIN = "ebitda_margin";
  @SerializedName(SERIALIZED_NAME_EBITDA_MARGIN)
  @javax.annotation.Nullable
  private BigDecimal ebitdaMargin;

  public static final String SERIALIZED_NAME_EFFECTIVE_INTEREST_RATE = "effective_interest_rate";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_INTEREST_RATE)
  @javax.annotation.Nullable
  private BigDecimal effectiveInterestRate;

  public static final String SERIALIZED_NAME_EQUITY_TO_ASSET = "equity_to_asset";
  @SerializedName(SERIALIZED_NAME_EQUITY_TO_ASSET)
  @javax.annotation.Nullable
  private BigDecimal equityToAsset;

  public static final String SERIALIZED_NAME_FCF_MARGIN = "fcf_margin";
  @SerializedName(SERIALIZED_NAME_FCF_MARGIN)
  @javax.annotation.Nullable
  private BigDecimal fcfMargin;

  public static final String SERIALIZED_NAME_LIABILITIES_TO_ASSETS = "liabilities_to_assets";
  @SerializedName(SERIALIZED_NAME_LIABILITIES_TO_ASSETS)
  @javax.annotation.Nullable
  private BigDecimal liabilitiesToAssets;

  public static final String SERIALIZED_NAME_NET_MARGIN = "net_margin";
  @SerializedName(SERIALIZED_NAME_NET_MARGIN)
  @javax.annotation.Nullable
  private BigDecimal netMargin;

  public static final String SERIALIZED_NAME_PAYOUT = "payout";
  @SerializedName(SERIALIZED_NAME_PAYOUT)
  @javax.annotation.Nullable
  private BigDecimal payout;

  public static final String SERIALIZED_NAME_RETURN_ON_TANGIBLE_ASSET = "return_on_tangible_asset";
  @SerializedName(SERIALIZED_NAME_RETURN_ON_TANGIBLE_ASSET)
  @javax.annotation.Nullable
  private BigDecimal returnOnTangibleAsset;

  public static final String SERIALIZED_NAME_RETURN_ON_TANGIBLE_EQUITY = "return_on_tangible_equity";
  @SerializedName(SERIALIZED_NAME_RETURN_ON_TANGIBLE_EQUITY)
  @javax.annotation.Nullable
  private BigDecimal returnOnTangibleEquity;

  public static final String SERIALIZED_NAME_ROA = "roa";
  @SerializedName(SERIALIZED_NAME_ROA)
  @javax.annotation.Nullable
  private BigDecimal roa;

  public static final String SERIALIZED_NAME_ROE = "roe";
  @SerializedName(SERIALIZED_NAME_ROE)
  @javax.annotation.Nullable
  private BigDecimal roe;

  public static final String SERIALIZED_NAME_ROE_ADJ = "roe_adj";
  @SerializedName(SERIALIZED_NAME_ROE_ADJ)
  @javax.annotation.Nullable
  private BigDecimal roeAdj;

  public static final String SERIALIZED_NAME_ROIC = "roic";
  @SerializedName(SERIALIZED_NAME_ROIC)
  @javax.annotation.Nullable
  private BigDecimal roic;

  public static final String SERIALIZED_NAME_ROIIC1Y = "roiic_1y";
  @SerializedName(SERIALIZED_NAME_ROIIC1Y)
  @javax.annotation.Nullable
  private BigDecimal roiic1y;

  public static final String SERIALIZED_NAME_RORE5Y = "rore_5y";
  @SerializedName(SERIALIZED_NAME_RORE5Y)
  @javax.annotation.Nullable
  private BigDecimal rore5y;

  public static final String SERIALIZED_NAME_TURNOVER = "turnover";
  @SerializedName(SERIALIZED_NAME_TURNOVER)
  @javax.annotation.Nullable
  private BigDecimal turnover;

  public static final String SERIALIZED_NAME_WACC = "wacc";
  @SerializedName(SERIALIZED_NAME_WACC)
  @javax.annotation.Nullable
  private BigDecimal wacc;

  public ValuationsIREITNODIRECTRatios() {
  }

  public ValuationsIREITNODIRECTRatios capexToOperatingCashFlow(@javax.annotation.Nullable BigDecimal capexToOperatingCashFlow) {
    this.capexToOperatingCashFlow = capexToOperatingCashFlow;
    return this;
  }

  /**
   * Get capexToOperatingCashFlow
   * @return capexToOperatingCashFlow
   */
  @javax.annotation.Nullable
  public BigDecimal getCapexToOperatingCashFlow() {
    return capexToOperatingCashFlow;
  }

  public void setCapexToOperatingCashFlow(@javax.annotation.Nullable BigDecimal capexToOperatingCashFlow) {
    this.capexToOperatingCashFlow = capexToOperatingCashFlow;
  }


  public ValuationsIREITNODIRECTRatios capexToRevenue(@javax.annotation.Nullable BigDecimal capexToRevenue) {
    this.capexToRevenue = capexToRevenue;
    return this;
  }

  /**
   * Get capexToRevenue
   * @return capexToRevenue
   */
  @javax.annotation.Nullable
  public BigDecimal getCapexToRevenue() {
    return capexToRevenue;
  }

  public void setCapexToRevenue(@javax.annotation.Nullable BigDecimal capexToRevenue) {
    this.capexToRevenue = capexToRevenue;
  }


  public ValuationsIREITNODIRECTRatios debtToAsset(@javax.annotation.Nullable BigDecimal debtToAsset) {
    this.debtToAsset = debtToAsset;
    return this;
  }

  /**
   * Debt to assets is a leverage ratio that defines the total amount of debt relative to assets
   * @return debtToAsset
   */
  @javax.annotation.Nullable
  public BigDecimal getDebtToAsset() {
    return debtToAsset;
  }

  public void setDebtToAsset(@javax.annotation.Nullable BigDecimal debtToAsset) {
    this.debtToAsset = debtToAsset;
  }


  public ValuationsIREITNODIRECTRatios debtToEquity(@javax.annotation.Nullable BigDecimal debtToEquity) {
    this.debtToEquity = debtToEquity;
    return this;
  }

  /**
   * The Debt/Equity (D/E) Ratio is calculated by dividing a companyâ€™s total liabilities by its shareholder equity. The ratio is used to evaluate a company&#39;s financial leverage.
   * @return debtToEquity
   */
  @javax.annotation.Nullable
  public BigDecimal getDebtToEquity() {
    return debtToEquity;
  }

  public void setDebtToEquity(@javax.annotation.Nullable BigDecimal debtToEquity) {
    this.debtToEquity = debtToEquity;
  }


  public ValuationsIREITNODIRECTRatios degreeOfFinancialLeverage(@javax.annotation.Nullable BigDecimal degreeOfFinancialLeverage) {
    this.degreeOfFinancialLeverage = degreeOfFinancialLeverage;
    return this;
  }

  /**
   * Get degreeOfFinancialLeverage
   * @return degreeOfFinancialLeverage
   */
  @javax.annotation.Nullable
  public BigDecimal getDegreeOfFinancialLeverage() {
    return degreeOfFinancialLeverage;
  }

  public void setDegreeOfFinancialLeverage(@javax.annotation.Nullable BigDecimal degreeOfFinancialLeverage) {
    this.degreeOfFinancialLeverage = degreeOfFinancialLeverage;
  }


  public ValuationsIREITNODIRECTRatios degreeOfOperatingLeverage(@javax.annotation.Nullable BigDecimal degreeOfOperatingLeverage) {
    this.degreeOfOperatingLeverage = degreeOfOperatingLeverage;
    return this;
  }

  /**
   * Get degreeOfOperatingLeverage
   * @return degreeOfOperatingLeverage
   */
  @javax.annotation.Nullable
  public BigDecimal getDegreeOfOperatingLeverage() {
    return degreeOfOperatingLeverage;
  }

  public void setDegreeOfOperatingLeverage(@javax.annotation.Nullable BigDecimal degreeOfOperatingLeverage) {
    this.degreeOfOperatingLeverage = degreeOfOperatingLeverage;
  }


  public ValuationsIREITNODIRECTRatios dividendToFfo(@javax.annotation.Nullable BigDecimal dividendToFfo) {
    this.dividendToFfo = dividendToFfo;
    return this;
  }

  /**
   * Cash dividends declared on the company&#39;s primary issue of common stock as a percent of funds from operations, on a per-share basis
   * @return dividendToFfo
   */
  @javax.annotation.Nullable
  public BigDecimal getDividendToFfo() {
    return dividendToFfo;
  }

  public void setDividendToFfo(@javax.annotation.Nullable BigDecimal dividendToFfo) {
    this.dividendToFfo = dividendToFfo;
  }


  public ValuationsIREITNODIRECTRatios ebitdaMargin(@javax.annotation.Nullable BigDecimal ebitdaMargin) {
    this.ebitdaMargin = ebitdaMargin;
    return this;
  }

  /**
   * Get ebitdaMargin
   * @return ebitdaMargin
   */
  @javax.annotation.Nullable
  public BigDecimal getEbitdaMargin() {
    return ebitdaMargin;
  }

  public void setEbitdaMargin(@javax.annotation.Nullable BigDecimal ebitdaMargin) {
    this.ebitdaMargin = ebitdaMargin;
  }


  public ValuationsIREITNODIRECTRatios effectiveInterestRate(@javax.annotation.Nullable BigDecimal effectiveInterestRate) {
    this.effectiveInterestRate = effectiveInterestRate;
    return this;
  }

  /**
   * Effective interest rate on debt is the usage rate that a borrower actually pays on a debt. It is calculated as the positive value of interest expense divided by its average total debt.
   * @return effectiveInterestRate
   */
  @javax.annotation.Nullable
  public BigDecimal getEffectiveInterestRate() {
    return effectiveInterestRate;
  }

  public void setEffectiveInterestRate(@javax.annotation.Nullable BigDecimal effectiveInterestRate) {
    this.effectiveInterestRate = effectiveInterestRate;
  }


  public ValuationsIREITNODIRECTRatios equityToAsset(@javax.annotation.Nullable BigDecimal equityToAsset) {
    this.equityToAsset = equityToAsset;
    return this;
  }

  /**
   * Equity to Asset ratio is calculated as shareholder&#39;s tangible equity divided by its total asset.
   * @return equityToAsset
   */
  @javax.annotation.Nullable
  public BigDecimal getEquityToAsset() {
    return equityToAsset;
  }

  public void setEquityToAsset(@javax.annotation.Nullable BigDecimal equityToAsset) {
    this.equityToAsset = equityToAsset;
  }


  public ValuationsIREITNODIRECTRatios fcfMargin(@javax.annotation.Nullable BigDecimal fcfMargin) {
    this.fcfMargin = fcfMargin;
    return this;
  }

  /**
   * FCF Margin is calculated as Free Cash Flow divided by total Revenue.
   * @return fcfMargin
   */
  @javax.annotation.Nullable
  public BigDecimal getFcfMargin() {
    return fcfMargin;
  }

  public void setFcfMargin(@javax.annotation.Nullable BigDecimal fcfMargin) {
    this.fcfMargin = fcfMargin;
  }


  public ValuationsIREITNODIRECTRatios liabilitiesToAssets(@javax.annotation.Nullable BigDecimal liabilitiesToAssets) {
    this.liabilitiesToAssets = liabilitiesToAssets;
    return this;
  }

  /**
   * Get liabilitiesToAssets
   * @return liabilitiesToAssets
   */
  @javax.annotation.Nullable
  public BigDecimal getLiabilitiesToAssets() {
    return liabilitiesToAssets;
  }

  public void setLiabilitiesToAssets(@javax.annotation.Nullable BigDecimal liabilitiesToAssets) {
    this.liabilitiesToAssets = liabilitiesToAssets;
  }


  public ValuationsIREITNODIRECTRatios netMargin(@javax.annotation.Nullable BigDecimal netMargin) {
    this.netMargin = netMargin;
    return this;
  }

  /**
   * Net margin is calculated as Net Income divided by its Revenue.
   * @return netMargin
   */
  @javax.annotation.Nullable
  public BigDecimal getNetMargin() {
    return netMargin;
  }

  public void setNetMargin(@javax.annotation.Nullable BigDecimal netMargin) {
    this.netMargin = netMargin;
  }


  public ValuationsIREITNODIRECTRatios payout(@javax.annotation.Nullable BigDecimal payout) {
    this.payout = payout;
    return this;
  }

  /**
   * The dividend payout ratio is the ratio of the total amount of dividends paid out to shareholders relative to the net income of the company.
   * @return payout
   */
  @javax.annotation.Nullable
  public BigDecimal getPayout() {
    return payout;
  }

  public void setPayout(@javax.annotation.Nullable BigDecimal payout) {
    this.payout = payout;
  }


  public ValuationsIREITNODIRECTRatios returnOnTangibleAsset(@javax.annotation.Nullable BigDecimal returnOnTangibleAsset) {
    this.returnOnTangibleAsset = returnOnTangibleAsset;
    return this;
  }

  /**
   * Return on tangible assets is calculated as Net Income divided by its average total tangible assets. Total tangible assets equals to Total Assets minus Intangible Assets.
   * @return returnOnTangibleAsset
   */
  @javax.annotation.Nullable
  public BigDecimal getReturnOnTangibleAsset() {
    return returnOnTangibleAsset;
  }

  public void setReturnOnTangibleAsset(@javax.annotation.Nullable BigDecimal returnOnTangibleAsset) {
    this.returnOnTangibleAsset = returnOnTangibleAsset;
  }


  public ValuationsIREITNODIRECTRatios returnOnTangibleEquity(@javax.annotation.Nullable BigDecimal returnOnTangibleEquity) {
    this.returnOnTangibleEquity = returnOnTangibleEquity;
    return this;
  }

  /**
   * Return on tangible equity is calculated as Net Income attributable to Common Stockholders divided by its average total shareholder tangible equity.
   * @return returnOnTangibleEquity
   */
  @javax.annotation.Nullable
  public BigDecimal getReturnOnTangibleEquity() {
    return returnOnTangibleEquity;
  }

  public void setReturnOnTangibleEquity(@javax.annotation.Nullable BigDecimal returnOnTangibleEquity) {
    this.returnOnTangibleEquity = returnOnTangibleEquity;
  }


  public ValuationsIREITNODIRECTRatios roa(@javax.annotation.Nullable BigDecimal roa) {
    this.roa = roa;
    return this;
  }

  /**
   * Return on assets is calculated as Net Income divided by its Total Assets.
   * @return roa
   */
  @javax.annotation.Nullable
  public BigDecimal getRoa() {
    return roa;
  }

  public void setRoa(@javax.annotation.Nullable BigDecimal roa) {
    this.roa = roa;
  }


  public ValuationsIREITNODIRECTRatios roe(@javax.annotation.Nullable BigDecimal roe) {
    this.roe = roe;
    return this;
  }

  /**
   * Get roe
   * @return roe
   */
  @javax.annotation.Nullable
  public BigDecimal getRoe() {
    return roe;
  }

  public void setRoe(@javax.annotation.Nullable BigDecimal roe) {
    this.roe = roe;
  }


  public ValuationsIREITNODIRECTRatios roeAdj(@javax.annotation.Nullable BigDecimal roeAdj) {
    this.roeAdj = roeAdj;
    return this;
  }

  /**
   * The return on equity adjusted to book values
   * @return roeAdj
   */
  @javax.annotation.Nullable
  public BigDecimal getRoeAdj() {
    return roeAdj;
  }

  public void setRoeAdj(@javax.annotation.Nullable BigDecimal roeAdj) {
    this.roeAdj = roeAdj;
  }


  public ValuationsIREITNODIRECTRatios roic(@javax.annotation.Nullable BigDecimal roic) {
    this.roic = roic;
    return this;
  }

  /**
   * Return on Invested Capital (ROIC) is calculated as follows:    Return on Invested Capital (ROIC) &#x3D; (EBIT - Adjusted Taxes) / (Book Value of Debt + Book Value of Equity - Cash)
   * @return roic
   */
  @javax.annotation.Nullable
  public BigDecimal getRoic() {
    return roic;
  }

  public void setRoic(@javax.annotation.Nullable BigDecimal roic) {
    this.roic = roic;
  }


  public ValuationsIREITNODIRECTRatios roiic1y(@javax.annotation.Nullable BigDecimal roiic1y) {
    this.roiic1y = roiic1y;
    return this;
  }

  /**
   * 1-Year Return on Invested Incremental Capital (1-Year ROIIC %) measures the change in earnings as a percentage of change in investment over 1-year.
   * @return roiic1y
   */
  @javax.annotation.Nullable
  public BigDecimal getRoiic1y() {
    return roiic1y;
  }

  public void setRoiic1y(@javax.annotation.Nullable BigDecimal roiic1y) {
    this.roiic1y = roiic1y;
  }


  public ValuationsIREITNODIRECTRatios rore5y(@javax.annotation.Nullable BigDecimal rore5y) {
    this.rore5y = rore5y;
    return this;
  }

  /**
   * Return on Retained Earnings (RORE) is an indicator of a company&#39;s growth potential, it shows how much a company earns by reinvesting its retained earnings.
   * @return rore5y
   */
  @javax.annotation.Nullable
  public BigDecimal getRore5y() {
    return rore5y;
  }

  public void setRore5y(@javax.annotation.Nullable BigDecimal rore5y) {
    this.rore5y = rore5y;
  }


  public ValuationsIREITNODIRECTRatios turnover(@javax.annotation.Nullable BigDecimal turnover) {
    this.turnover = turnover;
    return this;
  }

  /**
   * Asset Turnover measures how quickly a company turns over its asset through sales. It is defined as     &lt;b&gt;Asset Turnover &#x3D; Sales / {Total Assets}&lt;/b&gt;    Companies with low profit margins tend to have high asset turnover, while those with high profit margins have low asset turnover. Companies in the retail industry tend to have a very high turnover ratio.
   * @return turnover
   */
  @javax.annotation.Nullable
  public BigDecimal getTurnover() {
    return turnover;
  }

  public void setTurnover(@javax.annotation.Nullable BigDecimal turnover) {
    this.turnover = turnover;
  }


  public ValuationsIREITNODIRECTRatios wacc(@javax.annotation.Nullable BigDecimal wacc) {
    this.wacc = wacc;
    return this;
  }

  /**
   * The weighted average cost of capital (WACC) is the rate that a company is expected to pay on average to all its security holders to finance its assets.
   * @return wacc
   */
  @javax.annotation.Nullable
  public BigDecimal getWacc() {
    return wacc;
  }

  public void setWacc(@javax.annotation.Nullable BigDecimal wacc) {
    this.wacc = wacc;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValuationsIREITNODIRECTRatios valuationsIREITNODIRECTRatios = (ValuationsIREITNODIRECTRatios) o;
    return Objects.equals(this.capexToOperatingCashFlow, valuationsIREITNODIRECTRatios.capexToOperatingCashFlow) &&
        Objects.equals(this.capexToRevenue, valuationsIREITNODIRECTRatios.capexToRevenue) &&
        Objects.equals(this.debtToAsset, valuationsIREITNODIRECTRatios.debtToAsset) &&
        Objects.equals(this.debtToEquity, valuationsIREITNODIRECTRatios.debtToEquity) &&
        Objects.equals(this.degreeOfFinancialLeverage, valuationsIREITNODIRECTRatios.degreeOfFinancialLeverage) &&
        Objects.equals(this.degreeOfOperatingLeverage, valuationsIREITNODIRECTRatios.degreeOfOperatingLeverage) &&
        Objects.equals(this.dividendToFfo, valuationsIREITNODIRECTRatios.dividendToFfo) &&
        Objects.equals(this.ebitdaMargin, valuationsIREITNODIRECTRatios.ebitdaMargin) &&
        Objects.equals(this.effectiveInterestRate, valuationsIREITNODIRECTRatios.effectiveInterestRate) &&
        Objects.equals(this.equityToAsset, valuationsIREITNODIRECTRatios.equityToAsset) &&
        Objects.equals(this.fcfMargin, valuationsIREITNODIRECTRatios.fcfMargin) &&
        Objects.equals(this.liabilitiesToAssets, valuationsIREITNODIRECTRatios.liabilitiesToAssets) &&
        Objects.equals(this.netMargin, valuationsIREITNODIRECTRatios.netMargin) &&
        Objects.equals(this.payout, valuationsIREITNODIRECTRatios.payout) &&
        Objects.equals(this.returnOnTangibleAsset, valuationsIREITNODIRECTRatios.returnOnTangibleAsset) &&
        Objects.equals(this.returnOnTangibleEquity, valuationsIREITNODIRECTRatios.returnOnTangibleEquity) &&
        Objects.equals(this.roa, valuationsIREITNODIRECTRatios.roa) &&
        Objects.equals(this.roe, valuationsIREITNODIRECTRatios.roe) &&
        Objects.equals(this.roeAdj, valuationsIREITNODIRECTRatios.roeAdj) &&
        Objects.equals(this.roic, valuationsIREITNODIRECTRatios.roic) &&
        Objects.equals(this.roiic1y, valuationsIREITNODIRECTRatios.roiic1y) &&
        Objects.equals(this.rore5y, valuationsIREITNODIRECTRatios.rore5y) &&
        Objects.equals(this.turnover, valuationsIREITNODIRECTRatios.turnover) &&
        Objects.equals(this.wacc, valuationsIREITNODIRECTRatios.wacc);
  }

  @Override
  public int hashCode() {
    return Objects.hash(capexToOperatingCashFlow, capexToRevenue, debtToAsset, debtToEquity, degreeOfFinancialLeverage, degreeOfOperatingLeverage, dividendToFfo, ebitdaMargin, effectiveInterestRate, equityToAsset, fcfMargin, liabilitiesToAssets, netMargin, payout, returnOnTangibleAsset, returnOnTangibleEquity, roa, roe, roeAdj, roic, roiic1y, rore5y, turnover, wacc);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValuationsIREITNODIRECTRatios {\n");
    sb.append("    capexToOperatingCashFlow: ").append(toIndentedString(capexToOperatingCashFlow)).append("\n");
    sb.append("    capexToRevenue: ").append(toIndentedString(capexToRevenue)).append("\n");
    sb.append("    debtToAsset: ").append(toIndentedString(debtToAsset)).append("\n");
    sb.append("    debtToEquity: ").append(toIndentedString(debtToEquity)).append("\n");
    sb.append("    degreeOfFinancialLeverage: ").append(toIndentedString(degreeOfFinancialLeverage)).append("\n");
    sb.append("    degreeOfOperatingLeverage: ").append(toIndentedString(degreeOfOperatingLeverage)).append("\n");
    sb.append("    dividendToFfo: ").append(toIndentedString(dividendToFfo)).append("\n");
    sb.append("    ebitdaMargin: ").append(toIndentedString(ebitdaMargin)).append("\n");
    sb.append("    effectiveInterestRate: ").append(toIndentedString(effectiveInterestRate)).append("\n");
    sb.append("    equityToAsset: ").append(toIndentedString(equityToAsset)).append("\n");
    sb.append("    fcfMargin: ").append(toIndentedString(fcfMargin)).append("\n");
    sb.append("    liabilitiesToAssets: ").append(toIndentedString(liabilitiesToAssets)).append("\n");
    sb.append("    netMargin: ").append(toIndentedString(netMargin)).append("\n");
    sb.append("    payout: ").append(toIndentedString(payout)).append("\n");
    sb.append("    returnOnTangibleAsset: ").append(toIndentedString(returnOnTangibleAsset)).append("\n");
    sb.append("    returnOnTangibleEquity: ").append(toIndentedString(returnOnTangibleEquity)).append("\n");
    sb.append("    roa: ").append(toIndentedString(roa)).append("\n");
    sb.append("    roe: ").append(toIndentedString(roe)).append("\n");
    sb.append("    roeAdj: ").append(toIndentedString(roeAdj)).append("\n");
    sb.append("    roic: ").append(toIndentedString(roic)).append("\n");
    sb.append("    roiic1y: ").append(toIndentedString(roiic1y)).append("\n");
    sb.append("    rore5y: ").append(toIndentedString(rore5y)).append("\n");
    sb.append("    turnover: ").append(toIndentedString(turnover)).append("\n");
    sb.append("    wacc: ").append(toIndentedString(wacc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("capex_to_operating_cash_flow");
    openapiFields.add("capex_to_revenue");
    openapiFields.add("debt_to_asset");
    openapiFields.add("debt_to_equity");
    openapiFields.add("degree_of_financial_leverage");
    openapiFields.add("degree_of_operating_leverage");
    openapiFields.add("dividend_to_ffo");
    openapiFields.add("ebitda_margin");
    openapiFields.add("effective_interest_rate");
    openapiFields.add("equity_to_asset");
    openapiFields.add("fcf_margin");
    openapiFields.add("liabilities_to_assets");
    openapiFields.add("net_margin");
    openapiFields.add("payout");
    openapiFields.add("return_on_tangible_asset");
    openapiFields.add("return_on_tangible_equity");
    openapiFields.add("roa");
    openapiFields.add("roe");
    openapiFields.add("roe_adj");
    openapiFields.add("roic");
    openapiFields.add("roiic_1y");
    openapiFields.add("rore_5y");
    openapiFields.add("turnover");
    openapiFields.add("wacc");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ValuationsIREITNODIRECTRatios
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ValuationsIREITNODIRECTRatios.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ValuationsIREITNODIRECTRatios is not found in the empty JSON string", ValuationsIREITNODIRECTRatios.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ValuationsIREITNODIRECTRatios.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ValuationsIREITNODIRECTRatios` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ValuationsIREITNODIRECTRatios.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ValuationsIREITNODIRECTRatios' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ValuationsIREITNODIRECTRatios> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ValuationsIREITNODIRECTRatios.class));

       return (TypeAdapter<T>) new TypeAdapter<ValuationsIREITNODIRECTRatios>() {
           @Override
           public void write(JsonWriter out, ValuationsIREITNODIRECTRatios value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ValuationsIREITNODIRECTRatios read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ValuationsIREITNODIRECTRatios given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ValuationsIREITNODIRECTRatios
   * @throws IOException if the JSON string is invalid with respect to ValuationsIREITNODIRECTRatios
   */
  public static ValuationsIREITNODIRECTRatios fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ValuationsIREITNODIRECTRatios.class);
  }

  /**
   * Convert an instance of ValuationsIREITNODIRECTRatios to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

