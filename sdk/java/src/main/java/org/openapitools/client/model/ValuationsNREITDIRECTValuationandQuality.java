/*
 * Gurufocus Data Package API
 * API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ValuationsNREITDIRECTValuationandQuality
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-11T01:10:00.357398434Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class ValuationsNREITDIRECTValuationandQuality {
  public static final String SERIALIZED_NAME_BETA = "beta";
  @SerializedName(SERIALIZED_NAME_BETA)
  @javax.annotation.Nullable
  private BigDecimal beta;

  public static final String SERIALIZED_NAME_BS_SHARE = "bs_share";
  @SerializedName(SERIALIZED_NAME_BS_SHARE)
  @javax.annotation.Nullable
  private BigDecimal bsShare;

  public static final String SERIALIZED_NAME_BUYBACK_YIELD = "buyback_yield";
  @SerializedName(SERIALIZED_NAME_BUYBACK_YIELD)
  @javax.annotation.Nullable
  private BigDecimal buybackYield;

  public static final String SERIALIZED_NAME_CASH_RATIO = "cash_ratio";
  @SerializedName(SERIALIZED_NAME_CASH_RATIO)
  @javax.annotation.Nullable
  private BigDecimal cashRatio;

  public static final String SERIALIZED_NAME_CURRENT_RATIO = "current_ratio";
  @SerializedName(SERIALIZED_NAME_CURRENT_RATIO)
  @javax.annotation.Nullable
  private BigDecimal currentRatio;

  public static final String SERIALIZED_NAME_EARNINGS_RELEASE_DATE = "earnings_release_date";
  @SerializedName(SERIALIZED_NAME_EARNINGS_RELEASE_DATE)
  @javax.annotation.Nullable
  private String earningsReleaseDate;

  public static final String SERIALIZED_NAME_EBITDA5Y_GROWTH = "ebitda_5y_growth";
  @SerializedName(SERIALIZED_NAME_EBITDA5Y_GROWTH)
  @javax.annotation.Nullable
  private BigDecimal ebitda5yGrowth;

  public static final String SERIALIZED_NAME_ENTERPRISE_VALUE = "enterprise_value";
  @SerializedName(SERIALIZED_NAME_ENTERPRISE_VALUE)
  @javax.annotation.Nullable
  private BigDecimal enterpriseValue;

  public static final String SERIALIZED_NAME_EPV = "epv";
  @SerializedName(SERIALIZED_NAME_EPV)
  @javax.annotation.Nullable
  private BigDecimal epv;

  public static final String SERIALIZED_NAME_FILING_DATE = "filing_date";
  @SerializedName(SERIALIZED_NAME_FILING_DATE)
  @javax.annotation.Nullable
  private String filingDate;

  public static final String SERIALIZED_NAME_FILING_DATE_AOR = "filing_date_aor";
  @SerializedName(SERIALIZED_NAME_FILING_DATE_AOR)
  @javax.annotation.Nullable
  private String filingDateAor;

  public static final String SERIALIZED_NAME_FOREX_RATE = "forex_rate";
  @SerializedName(SERIALIZED_NAME_FOREX_RATE)
  @javax.annotation.Nullable
  private BigDecimal forexRate;

  public static final String SERIALIZED_NAME_FSCORE = "fscore";
  @SerializedName(SERIALIZED_NAME_FSCORE)
  @javax.annotation.Nullable
  private BigDecimal fscore;

  public static final String SERIALIZED_NAME_GRAHAM_NUMBER = "graham_number";
  @SerializedName(SERIALIZED_NAME_GRAHAM_NUMBER)
  @javax.annotation.Nullable
  private BigDecimal grahamNumber;

  public static final String SERIALIZED_NAME_GROWTH_PER_SHARE_EBITDA = "growth_per_share_ebitda";
  @SerializedName(SERIALIZED_NAME_GROWTH_PER_SHARE_EBITDA)
  @javax.annotation.Nullable
  private BigDecimal growthPerShareEbitda;

  public static final String SERIALIZED_NAME_GROWTH_PER_SHARE_EPS = "growth_per_share_eps";
  @SerializedName(SERIALIZED_NAME_GROWTH_PER_SHARE_EPS)
  @javax.annotation.Nullable
  private BigDecimal growthPerShareEps;

  public static final String SERIALIZED_NAME_GROWTH_REVENUE_PER_SHARE = "growth_revenue_per_share";
  @SerializedName(SERIALIZED_NAME_GROWTH_REVENUE_PER_SHARE)
  @javax.annotation.Nullable
  private BigDecimal growthRevenuePerShare;

  public static final String SERIALIZED_NAME_INTEREST_COVERAGE = "interest_coverage";
  @SerializedName(SERIALIZED_NAME_INTEREST_COVERAGE)
  @javax.annotation.Nullable
  private BigDecimal interestCoverage;

  public static final String SERIALIZED_NAME_INTRINSIC_VALUE_PROJECTED_FCF = "intrinsic_value_projected_fcf";
  @SerializedName(SERIALIZED_NAME_INTRINSIC_VALUE_PROJECTED_FCF)
  @javax.annotation.Nullable
  private BigDecimal intrinsicValueProjectedFcf;

  public static final String SERIALIZED_NAME_MEDPSVALUE = "medpsvalue";
  @SerializedName(SERIALIZED_NAME_MEDPSVALUE)
  @javax.annotation.Nullable
  private BigDecimal medpsvalue;

  public static final String SERIALIZED_NAME_MKTCAP = "mktcap";
  @SerializedName(SERIALIZED_NAME_MKTCAP)
  @javax.annotation.Nullable
  private BigDecimal mktcap;

  public static final String SERIALIZED_NAME_MONTH_END_STOCK_PRICE = "month_end_stock_price";
  @SerializedName(SERIALIZED_NAME_MONTH_END_STOCK_PRICE)
  @javax.annotation.Nullable
  private BigDecimal monthEndStockPrice;

  public static final String SERIALIZED_NAME_MSCORE = "mscore";
  @SerializedName(SERIALIZED_NAME_MSCORE)
  @javax.annotation.Nullable
  private BigDecimal mscore;

  public static final String SERIALIZED_NAME_NET_CASH_PER_SHARE = "net_cash_per_share";
  @SerializedName(SERIALIZED_NAME_NET_CASH_PER_SHARE)
  @javax.annotation.Nullable
  private BigDecimal netCashPerShare;

  public static final String SERIALIZED_NAME_NET_CURRENT_ASSET_VALUE = "net_current_asset_value";
  @SerializedName(SERIALIZED_NAME_NET_CURRENT_ASSET_VALUE)
  @javax.annotation.Nullable
  private BigDecimal netCurrentAssetValue;

  public static final String SERIALIZED_NAME_NET_NET_WORKING_CAPITAL = "net_net_working_capital";
  @SerializedName(SERIALIZED_NAME_NET_NET_WORKING_CAPITAL)
  @javax.annotation.Nullable
  private BigDecimal netNetWorkingCapital;

  public static final String SERIALIZED_NAME_NUMBER_OF_SHARE_HOLDERS = "number_of_share_holders";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_SHARE_HOLDERS)
  @javax.annotation.Nullable
  private BigDecimal numberOfShareHolders;

  public static final String SERIALIZED_NAME_PETER_LYNCH_FAIR_VALUE = "peter_lynch_fair_value";
  @SerializedName(SERIALIZED_NAME_PETER_LYNCH_FAIR_VALUE)
  @javax.annotation.Nullable
  private BigDecimal peterLynchFairValue;

  public static final String SERIALIZED_NAME_PRICE_HIGH = "price_high";
  @SerializedName(SERIALIZED_NAME_PRICE_HIGH)
  @javax.annotation.Nullable
  private BigDecimal priceHigh;

  public static final String SERIALIZED_NAME_PRICE_LOW = "price_low";
  @SerializedName(SERIALIZED_NAME_PRICE_LOW)
  @javax.annotation.Nullable
  private BigDecimal priceLow;

  public static final String SERIALIZED_NAME_QUICK_RATIO = "quick_ratio";
  @SerializedName(SERIALIZED_NAME_QUICK_RATIO)
  @javax.annotation.Nullable
  private BigDecimal quickRatio;

  public static final String SERIALIZED_NAME_SHARE_BUYBACK_RATIO = "share_buyback_ratio";
  @SerializedName(SERIALIZED_NAME_SHARE_BUYBACK_RATIO)
  @javax.annotation.Nullable
  private BigDecimal shareBuybackRatio;

  public static final String SERIALIZED_NAME_SHAREHOLDER_YIELD = "shareholder_yield";
  @SerializedName(SERIALIZED_NAME_SHAREHOLDER_YIELD)
  @javax.annotation.Nullable
  private BigDecimal shareholderYield;

  public static final String SERIALIZED_NAME_SHARES_BASIC = "shares_basic";
  @SerializedName(SERIALIZED_NAME_SHARES_BASIC)
  @javax.annotation.Nullable
  private BigDecimal sharesBasic;

  public static final String SERIALIZED_NAME_SLOAN_RATIO = "sloan_ratio";
  @SerializedName(SERIALIZED_NAME_SLOAN_RATIO)
  @javax.annotation.Nullable
  private BigDecimal sloanRatio;

  public static final String SERIALIZED_NAME_SNOA = "snoa";
  @SerializedName(SERIALIZED_NAME_SNOA)
  @javax.annotation.Nullable
  private BigDecimal snoa;

  public static final String SERIALIZED_NAME_TOTAL_EMPLOYEE_NUMBER = "total_employee_number";
  @SerializedName(SERIALIZED_NAME_TOTAL_EMPLOYEE_NUMBER)
  @javax.annotation.Nullable
  private BigDecimal totalEmployeeNumber;

  public static final String SERIALIZED_NAME_ZSCORE = "zscore";
  @SerializedName(SERIALIZED_NAME_ZSCORE)
  @javax.annotation.Nullable
  private BigDecimal zscore;

  public ValuationsNREITDIRECTValuationandQuality() {
  }

  public ValuationsNREITDIRECTValuationandQuality beta(@javax.annotation.Nullable BigDecimal beta) {
    this.beta = beta;
    return this;
  }

  /**
   * Beta measures the volatility or systematic risk of a security in comparison to the market. It is calculated using the latest three years of monthly returns of the stock and the benchmark.&lt;br&gt;- A beta of 1 indicates that the stock&#39;s price will move with the market. &lt;br&gt;- A beta of less than 1 indicates that the stock will be less volatile than the market. &lt;br&gt;- A beta greater than 1 indicates that the stock&#39;s price will be more volatile than the market.
   * @return beta
   */
  @javax.annotation.Nullable
  public BigDecimal getBeta() {
    return beta;
  }

  public void setBeta(@javax.annotation.Nullable BigDecimal beta) {
    this.beta = beta;
  }


  public ValuationsNREITDIRECTValuationandQuality bsShare(@javax.annotation.Nullable BigDecimal bsShare) {
    this.bsShare = bsShare;
    return this;
  }

  /**
   * Get bsShare
   * @return bsShare
   */
  @javax.annotation.Nullable
  public BigDecimal getBsShare() {
    return bsShare;
  }

  public void setBsShare(@javax.annotation.Nullable BigDecimal bsShare) {
    this.bsShare = bsShare;
  }


  public ValuationsNREITDIRECTValuationandQuality buybackYield(@javax.annotation.Nullable BigDecimal buybackYield) {
    this.buybackYield = buybackYield;
    return this;
  }

  /**
   * Get buybackYield
   * @return buybackYield
   */
  @javax.annotation.Nullable
  public BigDecimal getBuybackYield() {
    return buybackYield;
  }

  public void setBuybackYield(@javax.annotation.Nullable BigDecimal buybackYield) {
    this.buybackYield = buybackYield;
  }


  public ValuationsNREITDIRECTValuationandQuality cashRatio(@javax.annotation.Nullable BigDecimal cashRatio) {
    this.cashRatio = cashRatio;
    return this;
  }

  /**
   * The Cash Ratio measures a company’s ability to meet its short-term obligations with cash and near-cash resources. 
   * @return cashRatio
   */
  @javax.annotation.Nullable
  public BigDecimal getCashRatio() {
    return cashRatio;
  }

  public void setCashRatio(@javax.annotation.Nullable BigDecimal cashRatio) {
    this.cashRatio = cashRatio;
  }


  public ValuationsNREITDIRECTValuationandQuality currentRatio(@javax.annotation.Nullable BigDecimal currentRatio) {
    this.currentRatio = currentRatio;
    return this;
  }

  /**
   * The current ratio is a liquidity ratio that measures a company&#39;s ability to pay short-term obligations. It is calculated as a company&#39;s Total Current Assets divides by its Total Current Liabilities.
   * @return currentRatio
   */
  @javax.annotation.Nullable
  public BigDecimal getCurrentRatio() {
    return currentRatio;
  }

  public void setCurrentRatio(@javax.annotation.Nullable BigDecimal currentRatio) {
    this.currentRatio = currentRatio;
  }


  public ValuationsNREITDIRECTValuationandQuality earningsReleaseDate(@javax.annotation.Nullable String earningsReleaseDate) {
    this.earningsReleaseDate = earningsReleaseDate;
    return this;
  }

  /**
   * Get earningsReleaseDate
   * @return earningsReleaseDate
   */
  @javax.annotation.Nullable
  public String getEarningsReleaseDate() {
    return earningsReleaseDate;
  }

  public void setEarningsReleaseDate(@javax.annotation.Nullable String earningsReleaseDate) {
    this.earningsReleaseDate = earningsReleaseDate;
  }


  public ValuationsNREITDIRECTValuationandQuality ebitda5yGrowth(@javax.annotation.Nullable BigDecimal ebitda5yGrowth) {
    this.ebitda5yGrowth = ebitda5yGrowth;
    return this;
  }

  /**
   * EBITDA per Share is the amount of Earnings Before Interest, Taxes, Depreciation, and Amortization (EBITDA) per outstanding share of the company&#39;s stock.
   * @return ebitda5yGrowth
   */
  @javax.annotation.Nullable
  public BigDecimal getEbitda5yGrowth() {
    return ebitda5yGrowth;
  }

  public void setEbitda5yGrowth(@javax.annotation.Nullable BigDecimal ebitda5yGrowth) {
    this.ebitda5yGrowth = ebitda5yGrowth;
  }


  public ValuationsNREITDIRECTValuationandQuality enterpriseValue(@javax.annotation.Nullable BigDecimal enterpriseValue) {
    this.enterpriseValue = enterpriseValue;
    return this;
  }

  /**
   * Enterprise Value is calculated as the market cap plus debt and minority interest and preferred shares, minus total cash, cash equivalents, and marketable securities.
   * @return enterpriseValue
   */
  @javax.annotation.Nullable
  public BigDecimal getEnterpriseValue() {
    return enterpriseValue;
  }

  public void setEnterpriseValue(@javax.annotation.Nullable BigDecimal enterpriseValue) {
    this.enterpriseValue = enterpriseValue;
  }


  public ValuationsNREITDIRECTValuationandQuality epv(@javax.annotation.Nullable BigDecimal epv) {
    this.epv = epv;
    return this;
  }

  /**
   * Earnings power value (EPV) is a technique for valuing stocks by making assumptions about the sustainability of current earnings and the cost of capital but not future growth.
   * @return epv
   */
  @javax.annotation.Nullable
  public BigDecimal getEpv() {
    return epv;
  }

  public void setEpv(@javax.annotation.Nullable BigDecimal epv) {
    this.epv = epv;
  }


  public ValuationsNREITDIRECTValuationandQuality filingDate(@javax.annotation.Nullable String filingDate) {
    this.filingDate = filingDate;
    return this;
  }

  /**
   * Get filingDate
   * @return filingDate
   */
  @javax.annotation.Nullable
  public String getFilingDate() {
    return filingDate;
  }

  public void setFilingDate(@javax.annotation.Nullable String filingDate) {
    this.filingDate = filingDate;
  }


  public ValuationsNREITDIRECTValuationandQuality filingDateAor(@javax.annotation.Nullable String filingDateAor) {
    this.filingDateAor = filingDateAor;
    return this;
  }

  /**
   * Get filingDateAor
   * @return filingDateAor
   */
  @javax.annotation.Nullable
  public String getFilingDateAor() {
    return filingDateAor;
  }

  public void setFilingDateAor(@javax.annotation.Nullable String filingDateAor) {
    this.filingDateAor = filingDateAor;
  }


  public ValuationsNREITDIRECTValuationandQuality forexRate(@javax.annotation.Nullable BigDecimal forexRate) {
    this.forexRate = forexRate;
    return this;
  }

  /**
   * The month-end forex rates between the headquarter currency and the reporting currency
   * @return forexRate
   */
  @javax.annotation.Nullable
  public BigDecimal getForexRate() {
    return forexRate;
  }

  public void setForexRate(@javax.annotation.Nullable BigDecimal forexRate) {
    this.forexRate = forexRate;
  }


  public ValuationsNREITDIRECTValuationandQuality fscore(@javax.annotation.Nullable BigDecimal fscore) {
    this.fscore = fscore;
    return this;
  }

  /**
   * Piotroski F-Score is a number between 0-9 which is used to assess strength of company&#39;s financial position.
   * @return fscore
   */
  @javax.annotation.Nullable
  public BigDecimal getFscore() {
    return fscore;
  }

  public void setFscore(@javax.annotation.Nullable BigDecimal fscore) {
    this.fscore = fscore;
  }


  public ValuationsNREITDIRECTValuationandQuality grahamNumber(@javax.annotation.Nullable BigDecimal grahamNumber) {
    this.grahamNumber = grahamNumber;
    return this;
  }

  /**
   * Graham Number is a concept based on Ben Graham\\&#39;s conservative valuation of companies. Graham Number is calculated as follows:    Graham Number &#x3D; SquareRoot of (22.5 * {Tangible Book Value per Share} * {Earnings per Share})    &#x3D; SquareRoot of (22.5 * {Net Income} * {Total Equity}) / {Total Shares Outstanding}
   * @return grahamNumber
   */
  @javax.annotation.Nullable
  public BigDecimal getGrahamNumber() {
    return grahamNumber;
  }

  public void setGrahamNumber(@javax.annotation.Nullable BigDecimal grahamNumber) {
    this.grahamNumber = grahamNumber;
  }


  public ValuationsNREITDIRECTValuationandQuality growthPerShareEbitda(@javax.annotation.Nullable BigDecimal growthPerShareEbitda) {
    this.growthPerShareEbitda = growthPerShareEbitda;
    return this;
  }

  /**
   * EBITDA per Share is the amount of Earnings Before Interest, Taxes, Depreciation, and Amortization (EBITDA) per outstanding share of the company&#39;s stock.
   * @return growthPerShareEbitda
   */
  @javax.annotation.Nullable
  public BigDecimal getGrowthPerShareEbitda() {
    return growthPerShareEbitda;
  }

  public void setGrowthPerShareEbitda(@javax.annotation.Nullable BigDecimal growthPerShareEbitda) {
    this.growthPerShareEbitda = growthPerShareEbitda;
  }


  public ValuationsNREITDIRECTValuationandQuality growthPerShareEps(@javax.annotation.Nullable BigDecimal growthPerShareEps) {
    this.growthPerShareEps = growthPerShareEps;
    return this;
  }

  /**
   * The company&#39;s earnings per share growth year over year
   * @return growthPerShareEps
   */
  @javax.annotation.Nullable
  public BigDecimal getGrowthPerShareEps() {
    return growthPerShareEps;
  }

  public void setGrowthPerShareEps(@javax.annotation.Nullable BigDecimal growthPerShareEps) {
    this.growthPerShareEps = growthPerShareEps;
  }


  public ValuationsNREITDIRECTValuationandQuality growthRevenuePerShare(@javax.annotation.Nullable BigDecimal growthRevenuePerShare) {
    this.growthRevenuePerShare = growthRevenuePerShare;
    return this;
  }

  /**
   * The company&#39;s revenue per share growth year over year
   * @return growthRevenuePerShare
   */
  @javax.annotation.Nullable
  public BigDecimal getGrowthRevenuePerShare() {
    return growthRevenuePerShare;
  }

  public void setGrowthRevenuePerShare(@javax.annotation.Nullable BigDecimal growthRevenuePerShare) {
    this.growthRevenuePerShare = growthRevenuePerShare;
  }


  public ValuationsNREITDIRECTValuationandQuality interestCoverage(@javax.annotation.Nullable BigDecimal interestCoverage) {
    this.interestCoverage = interestCoverage;
    return this;
  }

  /**
   * Interest Coverage is a ratio that determines how easily a company can pay interest expenses on outstanding debt.
   * @return interestCoverage
   */
  @javax.annotation.Nullable
  public BigDecimal getInterestCoverage() {
    return interestCoverage;
  }

  public void setInterestCoverage(@javax.annotation.Nullable BigDecimal interestCoverage) {
    this.interestCoverage = interestCoverage;
  }


  public ValuationsNREITDIRECTValuationandQuality intrinsicValueProjectedFcf(@javax.annotation.Nullable BigDecimal intrinsicValueProjectedFcf) {
    this.intrinsicValueProjectedFcf = intrinsicValueProjectedFcf;
    return this;
  }

  /**
   * The Discounted Free Cash Flow Screener focuses on Free Cash Flow (FCF) and Total Equity. These measures can be used to determine an intrinsic value estimate for a company.
   * @return intrinsicValueProjectedFcf
   */
  @javax.annotation.Nullable
  public BigDecimal getIntrinsicValueProjectedFcf() {
    return intrinsicValueProjectedFcf;
  }

  public void setIntrinsicValueProjectedFcf(@javax.annotation.Nullable BigDecimal intrinsicValueProjectedFcf) {
    this.intrinsicValueProjectedFcf = intrinsicValueProjectedFcf;
  }


  public ValuationsNREITDIRECTValuationandQuality medpsvalue(@javax.annotation.Nullable BigDecimal medpsvalue) {
    this.medpsvalue = medpsvalue;
    return this;
  }

  /**
   * This valuation method assumes that the stock valuation will revert to its historical mean in terms of Price/Sales Ratio.
   * @return medpsvalue
   */
  @javax.annotation.Nullable
  public BigDecimal getMedpsvalue() {
    return medpsvalue;
  }

  public void setMedpsvalue(@javax.annotation.Nullable BigDecimal medpsvalue) {
    this.medpsvalue = medpsvalue;
  }


  public ValuationsNREITDIRECTValuationandQuality mktcap(@javax.annotation.Nullable BigDecimal mktcap) {
    this.mktcap = mktcap;
    return this;
  }

  /**
   * Market cap is the short version of market capitalization. It is the total market value to buy the whole company. It is equal to the share price times the number of shares outstanding.
   * @return mktcap
   */
  @javax.annotation.Nullable
  public BigDecimal getMktcap() {
    return mktcap;
  }

  public void setMktcap(@javax.annotation.Nullable BigDecimal mktcap) {
    this.mktcap = mktcap;
  }


  public ValuationsNREITDIRECTValuationandQuality monthEndStockPrice(@javax.annotation.Nullable BigDecimal monthEndStockPrice) {
    this.monthEndStockPrice = monthEndStockPrice;
    return this;
  }

  /**
   * The company&#39;s share price at the final day of the month
   * @return monthEndStockPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getMonthEndStockPrice() {
    return monthEndStockPrice;
  }

  public void setMonthEndStockPrice(@javax.annotation.Nullable BigDecimal monthEndStockPrice) {
    this.monthEndStockPrice = monthEndStockPrice;
  }


  public ValuationsNREITDIRECTValuationandQuality mscore(@javax.annotation.Nullable BigDecimal mscore) {
    this.mscore = mscore;
    return this;
  }

  /**
   * Beneish&#39;s M-Score is a mathematical model that uses eight financial ratios weighted by coefficients to identify whether a company has manipulated its profits.
   * @return mscore
   */
  @javax.annotation.Nullable
  public BigDecimal getMscore() {
    return mscore;
  }

  public void setMscore(@javax.annotation.Nullable BigDecimal mscore) {
    this.mscore = mscore;
  }


  public ValuationsNREITDIRECTValuationandQuality netCashPerShare(@javax.annotation.Nullable BigDecimal netCashPerShare) {
    this.netCashPerShare = netCashPerShare;
    return this;
  }

  /**
   * Equals cash and cash equivalents less total liabilities less minority interest
   * @return netCashPerShare
   */
  @javax.annotation.Nullable
  public BigDecimal getNetCashPerShare() {
    return netCashPerShare;
  }

  public void setNetCashPerShare(@javax.annotation.Nullable BigDecimal netCashPerShare) {
    this.netCashPerShare = netCashPerShare;
  }


  public ValuationsNREITDIRECTValuationandQuality netCurrentAssetValue(@javax.annotation.Nullable BigDecimal netCurrentAssetValue) {
    this.netCurrentAssetValue = netCurrentAssetValue;
    return this;
  }

  /**
   * In calculating the Net Current Asset Value (NCAV), Benjamin Graham means a company&#39;s current assets (such as cash, marketable securities, and inventories) minus its total liabilities (including preferred stock, minority interest, and long-term debt).
   * @return netCurrentAssetValue
   */
  @javax.annotation.Nullable
  public BigDecimal getNetCurrentAssetValue() {
    return netCurrentAssetValue;
  }

  public void setNetCurrentAssetValue(@javax.annotation.Nullable BigDecimal netCurrentAssetValue) {
    this.netCurrentAssetValue = netCurrentAssetValue;
  }


  public ValuationsNREITDIRECTValuationandQuality netNetWorkingCapital(@javax.annotation.Nullable BigDecimal netNetWorkingCapital) {
    this.netNetWorkingCapital = netNetWorkingCapital;
    return this;
  }

  /**
   * A net-net is a company with a market capitalization that is less than the company&#39;s current assets minus total liabilities, or equivalently, the company&#39;s working capital minus long-term liabilities. This value is called the net current asset value.
   * @return netNetWorkingCapital
   */
  @javax.annotation.Nullable
  public BigDecimal getNetNetWorkingCapital() {
    return netNetWorkingCapital;
  }

  public void setNetNetWorkingCapital(@javax.annotation.Nullable BigDecimal netNetWorkingCapital) {
    this.netNetWorkingCapital = netNetWorkingCapital;
  }


  public ValuationsNREITDIRECTValuationandQuality numberOfShareHolders(@javax.annotation.Nullable BigDecimal numberOfShareHolders) {
    this.numberOfShareHolders = numberOfShareHolders;
    return this;
  }

  /**
   * The total number of shareholders for a company
   * @return numberOfShareHolders
   */
  @javax.annotation.Nullable
  public BigDecimal getNumberOfShareHolders() {
    return numberOfShareHolders;
  }

  public void setNumberOfShareHolders(@javax.annotation.Nullable BigDecimal numberOfShareHolders) {
    this.numberOfShareHolders = numberOfShareHolders;
  }


  public ValuationsNREITDIRECTValuationandQuality peterLynchFairValue(@javax.annotation.Nullable BigDecimal peterLynchFairValue) {
    this.peterLynchFairValue = peterLynchFairValue;
    return this;
  }

  /**
   * Peter Lynch Fair Value applies to growing companies. The ideal range for the growth rate is between 10 - 20% a year.
   * @return peterLynchFairValue
   */
  @javax.annotation.Nullable
  public BigDecimal getPeterLynchFairValue() {
    return peterLynchFairValue;
  }

  public void setPeterLynchFairValue(@javax.annotation.Nullable BigDecimal peterLynchFairValue) {
    this.peterLynchFairValue = peterLynchFairValue;
  }


  public ValuationsNREITDIRECTValuationandQuality priceHigh(@javax.annotation.Nullable BigDecimal priceHigh) {
    this.priceHigh = priceHigh;
    return this;
  }

  /**
   * Get priceHigh
   * @return priceHigh
   */
  @javax.annotation.Nullable
  public BigDecimal getPriceHigh() {
    return priceHigh;
  }

  public void setPriceHigh(@javax.annotation.Nullable BigDecimal priceHigh) {
    this.priceHigh = priceHigh;
  }


  public ValuationsNREITDIRECTValuationandQuality priceLow(@javax.annotation.Nullable BigDecimal priceLow) {
    this.priceLow = priceLow;
    return this;
  }

  /**
   * Get priceLow
   * @return priceLow
   */
  @javax.annotation.Nullable
  public BigDecimal getPriceLow() {
    return priceLow;
  }

  public void setPriceLow(@javax.annotation.Nullable BigDecimal priceLow) {
    this.priceLow = priceLow;
  }


  public ValuationsNREITDIRECTValuationandQuality quickRatio(@javax.annotation.Nullable BigDecimal quickRatio) {
    this.quickRatio = quickRatio;
    return this;
  }

  /**
   * The quick ratio measures a company&#39;s ability to meet its short-term obligations with its most liquid assets.
   * @return quickRatio
   */
  @javax.annotation.Nullable
  public BigDecimal getQuickRatio() {
    return quickRatio;
  }

  public void setQuickRatio(@javax.annotation.Nullable BigDecimal quickRatio) {
    this.quickRatio = quickRatio;
  }


  public ValuationsNREITDIRECTValuationandQuality shareBuybackRatio(@javax.annotation.Nullable BigDecimal shareBuybackRatio) {
    this.shareBuybackRatio = shareBuybackRatio;
    return this;
  }

  /**
   * The rate a company repurchases its shares
   * @return shareBuybackRatio
   */
  @javax.annotation.Nullable
  public BigDecimal getShareBuybackRatio() {
    return shareBuybackRatio;
  }

  public void setShareBuybackRatio(@javax.annotation.Nullable BigDecimal shareBuybackRatio) {
    this.shareBuybackRatio = shareBuybackRatio;
  }


  public ValuationsNREITDIRECTValuationandQuality shareholderYield(@javax.annotation.Nullable BigDecimal shareholderYield) {
    this.shareholderYield = shareholderYield;
    return this;
  }

  /**
   * Get shareholderYield
   * @return shareholderYield
   */
  @javax.annotation.Nullable
  public BigDecimal getShareholderYield() {
    return shareholderYield;
  }

  public void setShareholderYield(@javax.annotation.Nullable BigDecimal shareholderYield) {
    this.shareholderYield = shareholderYield;
  }


  public ValuationsNREITDIRECTValuationandQuality sharesBasic(@javax.annotation.Nullable BigDecimal sharesBasic) {
    this.sharesBasic = sharesBasic;
    return this;
  }

  /**
   * &lt;p&gt;Shares outstanding are shares that have been authorized, issued, and purchased by investors and are held by them. They have voting rights and represent ownership in the corporation by the person that holds the shares. They should be distinguished from treasury shares, which are shares held by the corporation itself, having no exercisable rights. Shares outstanding can be calculated as either basic or fully diluted. The {{Shares_Outstanding}} count includes diluting securities, such as options, warrants or convertibles.&lt;/p&gt;
   * @return sharesBasic
   */
  @javax.annotation.Nullable
  public BigDecimal getSharesBasic() {
    return sharesBasic;
  }

  public void setSharesBasic(@javax.annotation.Nullable BigDecimal sharesBasic) {
    this.sharesBasic = sharesBasic;
  }


  public ValuationsNREITDIRECTValuationandQuality sloanRatio(@javax.annotation.Nullable BigDecimal sloanRatio) {
    this.sloanRatio = sloanRatio;
    return this;
  }

  /**
   * Richard Sloan from the University of Michigan was first to document what is referred to as the &#39;accrual anomaly&#39;. His 1996 paper found that shares of companies with small or negative accruals vastly outperform (+10%) those of companies with large ones.
   * @return sloanRatio
   */
  @javax.annotation.Nullable
  public BigDecimal getSloanRatio() {
    return sloanRatio;
  }

  public void setSloanRatio(@javax.annotation.Nullable BigDecimal sloanRatio) {
    this.sloanRatio = sloanRatio;
  }


  public ValuationsNREITDIRECTValuationandQuality snoa(@javax.annotation.Nullable BigDecimal snoa) {
    this.snoa = snoa;
    return this;
  }

  /**
   * Scaled net operating assets (SNOA) is calculated as the difference between  operating assets and operating liabilities, scaled by lagged total assets.
   * @return snoa
   */
  @javax.annotation.Nullable
  public BigDecimal getSnoa() {
    return snoa;
  }

  public void setSnoa(@javax.annotation.Nullable BigDecimal snoa) {
    this.snoa = snoa;
  }


  public ValuationsNREITDIRECTValuationandQuality totalEmployeeNumber(@javax.annotation.Nullable BigDecimal totalEmployeeNumber) {
    this.totalEmployeeNumber = totalEmployeeNumber;
    return this;
  }

  /**
   * The total number of employees for a company
   * @return totalEmployeeNumber
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalEmployeeNumber() {
    return totalEmployeeNumber;
  }

  public void setTotalEmployeeNumber(@javax.annotation.Nullable BigDecimal totalEmployeeNumber) {
    this.totalEmployeeNumber = totalEmployeeNumber;
  }


  public ValuationsNREITDIRECTValuationandQuality zscore(@javax.annotation.Nullable BigDecimal zscore) {
    this.zscore = zscore;
    return this;
  }

  /**
   * Z-Score model is an accurate forecaster of failure up to two years prior to distress. It can be considered the assessment of the distress of industrial corporations.
   * @return zscore
   */
  @javax.annotation.Nullable
  public BigDecimal getZscore() {
    return zscore;
  }

  public void setZscore(@javax.annotation.Nullable BigDecimal zscore) {
    this.zscore = zscore;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValuationsNREITDIRECTValuationandQuality valuationsNREITDIRECTValuationandQuality = (ValuationsNREITDIRECTValuationandQuality) o;
    return Objects.equals(this.beta, valuationsNREITDIRECTValuationandQuality.beta) &&
        Objects.equals(this.bsShare, valuationsNREITDIRECTValuationandQuality.bsShare) &&
        Objects.equals(this.buybackYield, valuationsNREITDIRECTValuationandQuality.buybackYield) &&
        Objects.equals(this.cashRatio, valuationsNREITDIRECTValuationandQuality.cashRatio) &&
        Objects.equals(this.currentRatio, valuationsNREITDIRECTValuationandQuality.currentRatio) &&
        Objects.equals(this.earningsReleaseDate, valuationsNREITDIRECTValuationandQuality.earningsReleaseDate) &&
        Objects.equals(this.ebitda5yGrowth, valuationsNREITDIRECTValuationandQuality.ebitda5yGrowth) &&
        Objects.equals(this.enterpriseValue, valuationsNREITDIRECTValuationandQuality.enterpriseValue) &&
        Objects.equals(this.epv, valuationsNREITDIRECTValuationandQuality.epv) &&
        Objects.equals(this.filingDate, valuationsNREITDIRECTValuationandQuality.filingDate) &&
        Objects.equals(this.filingDateAor, valuationsNREITDIRECTValuationandQuality.filingDateAor) &&
        Objects.equals(this.forexRate, valuationsNREITDIRECTValuationandQuality.forexRate) &&
        Objects.equals(this.fscore, valuationsNREITDIRECTValuationandQuality.fscore) &&
        Objects.equals(this.grahamNumber, valuationsNREITDIRECTValuationandQuality.grahamNumber) &&
        Objects.equals(this.growthPerShareEbitda, valuationsNREITDIRECTValuationandQuality.growthPerShareEbitda) &&
        Objects.equals(this.growthPerShareEps, valuationsNREITDIRECTValuationandQuality.growthPerShareEps) &&
        Objects.equals(this.growthRevenuePerShare, valuationsNREITDIRECTValuationandQuality.growthRevenuePerShare) &&
        Objects.equals(this.interestCoverage, valuationsNREITDIRECTValuationandQuality.interestCoverage) &&
        Objects.equals(this.intrinsicValueProjectedFcf, valuationsNREITDIRECTValuationandQuality.intrinsicValueProjectedFcf) &&
        Objects.equals(this.medpsvalue, valuationsNREITDIRECTValuationandQuality.medpsvalue) &&
        Objects.equals(this.mktcap, valuationsNREITDIRECTValuationandQuality.mktcap) &&
        Objects.equals(this.monthEndStockPrice, valuationsNREITDIRECTValuationandQuality.monthEndStockPrice) &&
        Objects.equals(this.mscore, valuationsNREITDIRECTValuationandQuality.mscore) &&
        Objects.equals(this.netCashPerShare, valuationsNREITDIRECTValuationandQuality.netCashPerShare) &&
        Objects.equals(this.netCurrentAssetValue, valuationsNREITDIRECTValuationandQuality.netCurrentAssetValue) &&
        Objects.equals(this.netNetWorkingCapital, valuationsNREITDIRECTValuationandQuality.netNetWorkingCapital) &&
        Objects.equals(this.numberOfShareHolders, valuationsNREITDIRECTValuationandQuality.numberOfShareHolders) &&
        Objects.equals(this.peterLynchFairValue, valuationsNREITDIRECTValuationandQuality.peterLynchFairValue) &&
        Objects.equals(this.priceHigh, valuationsNREITDIRECTValuationandQuality.priceHigh) &&
        Objects.equals(this.priceLow, valuationsNREITDIRECTValuationandQuality.priceLow) &&
        Objects.equals(this.quickRatio, valuationsNREITDIRECTValuationandQuality.quickRatio) &&
        Objects.equals(this.shareBuybackRatio, valuationsNREITDIRECTValuationandQuality.shareBuybackRatio) &&
        Objects.equals(this.shareholderYield, valuationsNREITDIRECTValuationandQuality.shareholderYield) &&
        Objects.equals(this.sharesBasic, valuationsNREITDIRECTValuationandQuality.sharesBasic) &&
        Objects.equals(this.sloanRatio, valuationsNREITDIRECTValuationandQuality.sloanRatio) &&
        Objects.equals(this.snoa, valuationsNREITDIRECTValuationandQuality.snoa) &&
        Objects.equals(this.totalEmployeeNumber, valuationsNREITDIRECTValuationandQuality.totalEmployeeNumber) &&
        Objects.equals(this.zscore, valuationsNREITDIRECTValuationandQuality.zscore);
  }

  @Override
  public int hashCode() {
    return Objects.hash(beta, bsShare, buybackYield, cashRatio, currentRatio, earningsReleaseDate, ebitda5yGrowth, enterpriseValue, epv, filingDate, filingDateAor, forexRate, fscore, grahamNumber, growthPerShareEbitda, growthPerShareEps, growthRevenuePerShare, interestCoverage, intrinsicValueProjectedFcf, medpsvalue, mktcap, monthEndStockPrice, mscore, netCashPerShare, netCurrentAssetValue, netNetWorkingCapital, numberOfShareHolders, peterLynchFairValue, priceHigh, priceLow, quickRatio, shareBuybackRatio, shareholderYield, sharesBasic, sloanRatio, snoa, totalEmployeeNumber, zscore);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValuationsNREITDIRECTValuationandQuality {\n");
    sb.append("    beta: ").append(toIndentedString(beta)).append("\n");
    sb.append("    bsShare: ").append(toIndentedString(bsShare)).append("\n");
    sb.append("    buybackYield: ").append(toIndentedString(buybackYield)).append("\n");
    sb.append("    cashRatio: ").append(toIndentedString(cashRatio)).append("\n");
    sb.append("    currentRatio: ").append(toIndentedString(currentRatio)).append("\n");
    sb.append("    earningsReleaseDate: ").append(toIndentedString(earningsReleaseDate)).append("\n");
    sb.append("    ebitda5yGrowth: ").append(toIndentedString(ebitda5yGrowth)).append("\n");
    sb.append("    enterpriseValue: ").append(toIndentedString(enterpriseValue)).append("\n");
    sb.append("    epv: ").append(toIndentedString(epv)).append("\n");
    sb.append("    filingDate: ").append(toIndentedString(filingDate)).append("\n");
    sb.append("    filingDateAor: ").append(toIndentedString(filingDateAor)).append("\n");
    sb.append("    forexRate: ").append(toIndentedString(forexRate)).append("\n");
    sb.append("    fscore: ").append(toIndentedString(fscore)).append("\n");
    sb.append("    grahamNumber: ").append(toIndentedString(grahamNumber)).append("\n");
    sb.append("    growthPerShareEbitda: ").append(toIndentedString(growthPerShareEbitda)).append("\n");
    sb.append("    growthPerShareEps: ").append(toIndentedString(growthPerShareEps)).append("\n");
    sb.append("    growthRevenuePerShare: ").append(toIndentedString(growthRevenuePerShare)).append("\n");
    sb.append("    interestCoverage: ").append(toIndentedString(interestCoverage)).append("\n");
    sb.append("    intrinsicValueProjectedFcf: ").append(toIndentedString(intrinsicValueProjectedFcf)).append("\n");
    sb.append("    medpsvalue: ").append(toIndentedString(medpsvalue)).append("\n");
    sb.append("    mktcap: ").append(toIndentedString(mktcap)).append("\n");
    sb.append("    monthEndStockPrice: ").append(toIndentedString(monthEndStockPrice)).append("\n");
    sb.append("    mscore: ").append(toIndentedString(mscore)).append("\n");
    sb.append("    netCashPerShare: ").append(toIndentedString(netCashPerShare)).append("\n");
    sb.append("    netCurrentAssetValue: ").append(toIndentedString(netCurrentAssetValue)).append("\n");
    sb.append("    netNetWorkingCapital: ").append(toIndentedString(netNetWorkingCapital)).append("\n");
    sb.append("    numberOfShareHolders: ").append(toIndentedString(numberOfShareHolders)).append("\n");
    sb.append("    peterLynchFairValue: ").append(toIndentedString(peterLynchFairValue)).append("\n");
    sb.append("    priceHigh: ").append(toIndentedString(priceHigh)).append("\n");
    sb.append("    priceLow: ").append(toIndentedString(priceLow)).append("\n");
    sb.append("    quickRatio: ").append(toIndentedString(quickRatio)).append("\n");
    sb.append("    shareBuybackRatio: ").append(toIndentedString(shareBuybackRatio)).append("\n");
    sb.append("    shareholderYield: ").append(toIndentedString(shareholderYield)).append("\n");
    sb.append("    sharesBasic: ").append(toIndentedString(sharesBasic)).append("\n");
    sb.append("    sloanRatio: ").append(toIndentedString(sloanRatio)).append("\n");
    sb.append("    snoa: ").append(toIndentedString(snoa)).append("\n");
    sb.append("    totalEmployeeNumber: ").append(toIndentedString(totalEmployeeNumber)).append("\n");
    sb.append("    zscore: ").append(toIndentedString(zscore)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("beta");
    openapiFields.add("bs_share");
    openapiFields.add("buyback_yield");
    openapiFields.add("cash_ratio");
    openapiFields.add("current_ratio");
    openapiFields.add("earnings_release_date");
    openapiFields.add("ebitda_5y_growth");
    openapiFields.add("enterprise_value");
    openapiFields.add("epv");
    openapiFields.add("filing_date");
    openapiFields.add("filing_date_aor");
    openapiFields.add("forex_rate");
    openapiFields.add("fscore");
    openapiFields.add("graham_number");
    openapiFields.add("growth_per_share_ebitda");
    openapiFields.add("growth_per_share_eps");
    openapiFields.add("growth_revenue_per_share");
    openapiFields.add("interest_coverage");
    openapiFields.add("intrinsic_value_projected_fcf");
    openapiFields.add("medpsvalue");
    openapiFields.add("mktcap");
    openapiFields.add("month_end_stock_price");
    openapiFields.add("mscore");
    openapiFields.add("net_cash_per_share");
    openapiFields.add("net_current_asset_value");
    openapiFields.add("net_net_working_capital");
    openapiFields.add("number_of_share_holders");
    openapiFields.add("peter_lynch_fair_value");
    openapiFields.add("price_high");
    openapiFields.add("price_low");
    openapiFields.add("quick_ratio");
    openapiFields.add("share_buyback_ratio");
    openapiFields.add("shareholder_yield");
    openapiFields.add("shares_basic");
    openapiFields.add("sloan_ratio");
    openapiFields.add("snoa");
    openapiFields.add("total_employee_number");
    openapiFields.add("zscore");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ValuationsNREITDIRECTValuationandQuality
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ValuationsNREITDIRECTValuationandQuality.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ValuationsNREITDIRECTValuationandQuality is not found in the empty JSON string", ValuationsNREITDIRECTValuationandQuality.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ValuationsNREITDIRECTValuationandQuality.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ValuationsNREITDIRECTValuationandQuality` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("earnings_release_date") != null && !jsonObj.get("earnings_release_date").isJsonNull()) && !jsonObj.get("earnings_release_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `earnings_release_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("earnings_release_date").toString()));
      }
      if ((jsonObj.get("filing_date") != null && !jsonObj.get("filing_date").isJsonNull()) && !jsonObj.get("filing_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filing_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filing_date").toString()));
      }
      if ((jsonObj.get("filing_date_aor") != null && !jsonObj.get("filing_date_aor").isJsonNull()) && !jsonObj.get("filing_date_aor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filing_date_aor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filing_date_aor").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ValuationsNREITDIRECTValuationandQuality.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ValuationsNREITDIRECTValuationandQuality' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ValuationsNREITDIRECTValuationandQuality> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ValuationsNREITDIRECTValuationandQuality.class));

       return (TypeAdapter<T>) new TypeAdapter<ValuationsNREITDIRECTValuationandQuality>() {
           @Override
           public void write(JsonWriter out, ValuationsNREITDIRECTValuationandQuality value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ValuationsNREITDIRECTValuationandQuality read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ValuationsNREITDIRECTValuationandQuality given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ValuationsNREITDIRECTValuationandQuality
   * @throws IOException if the JSON string is invalid with respect to ValuationsNREITDIRECTValuationandQuality
   */
  public static ValuationsNREITDIRECTValuationandQuality fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ValuationsNREITDIRECTValuationandQuality.class);
  }

  /**
   * Convert an instance of ValuationsNREITDIRECTValuationandQuality to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

