/*
 * Gurufocus Data Package API
 * API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ValuationsINOREITNODIRECTValuationRatios
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-11T01:10:00.357398434Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class ValuationsINOREITNODIRECTValuationRatios {
  public static final String SERIALIZED_NAME_CYCLICALLY_ADJUSTED_PB_RATIO = "cyclically_adjusted_pb_ratio";
  @SerializedName(SERIALIZED_NAME_CYCLICALLY_ADJUSTED_PB_RATIO)
  @javax.annotation.Nullable
  private BigDecimal cyclicallyAdjustedPbRatio;

  public static final String SERIALIZED_NAME_CYCLICALLY_ADJUSTED_PRICE_TO_FCF = "cyclically_adjusted_price_to_fcf";
  @SerializedName(SERIALIZED_NAME_CYCLICALLY_ADJUSTED_PRICE_TO_FCF)
  @javax.annotation.Nullable
  private BigDecimal cyclicallyAdjustedPriceToFcf;

  public static final String SERIALIZED_NAME_CYCLICALLY_ADJUSTED_PS_RATIO = "cyclically_adjusted_ps_ratio";
  @SerializedName(SERIALIZED_NAME_CYCLICALLY_ADJUSTED_PS_RATIO)
  @javax.annotation.Nullable
  private BigDecimal cyclicallyAdjustedPsRatio;

  public static final String SERIALIZED_NAME_EARNING_YIELD_GREENBLATT = "earning_yield_greenblatt";
  @SerializedName(SERIALIZED_NAME_EARNING_YIELD_GREENBLATT)
  @javax.annotation.Nullable
  private BigDecimal earningYieldGreenblatt;

  public static final String SERIALIZED_NAME_ENTERPRISE_VALUE_TO_EBIT = "enterprise_value_to_ebit";
  @SerializedName(SERIALIZED_NAME_ENTERPRISE_VALUE_TO_EBIT)
  @javax.annotation.Nullable
  private BigDecimal enterpriseValueToEbit;

  public static final String SERIALIZED_NAME_ENTERPRISE_VALUE_TO_EBITDA = "enterprise_value_to_ebitda";
  @SerializedName(SERIALIZED_NAME_ENTERPRISE_VALUE_TO_EBITDA)
  @javax.annotation.Nullable
  private BigDecimal enterpriseValueToEbitda;

  public static final String SERIALIZED_NAME_ENTERPRISE_VALUE_TO_FCF = "enterprise_value_to_fcf";
  @SerializedName(SERIALIZED_NAME_ENTERPRISE_VALUE_TO_FCF)
  @javax.annotation.Nullable
  private BigDecimal enterpriseValueToFcf;

  public static final String SERIALIZED_NAME_ENTERPRISE_VALUE_TO_REVENUE = "enterprise_value_to_revenue";
  @SerializedName(SERIALIZED_NAME_ENTERPRISE_VALUE_TO_REVENUE)
  @javax.annotation.Nullable
  private BigDecimal enterpriseValueToRevenue;

  public static final String SERIALIZED_NAME_FCF_YIELD = "fcf_yield";
  @SerializedName(SERIALIZED_NAME_FCF_YIELD)
  @javax.annotation.Nullable
  private BigDecimal fcfYield;

  public static final String SERIALIZED_NAME_PB_RATIO = "pb_ratio";
  @SerializedName(SERIALIZED_NAME_PB_RATIO)
  @javax.annotation.Nullable
  private BigDecimal pbRatio;

  public static final String SERIALIZED_NAME_PE_RATIO = "pe_ratio";
  @SerializedName(SERIALIZED_NAME_PE_RATIO)
  @javax.annotation.Nullable
  private BigDecimal peRatio;

  public static final String SERIALIZED_NAME_PEG_RATIO = "peg_ratio";
  @SerializedName(SERIALIZED_NAME_PEG_RATIO)
  @javax.annotation.Nullable
  private BigDecimal pegRatio;

  public static final String SERIALIZED_NAME_PENRI = "penri";
  @SerializedName(SERIALIZED_NAME_PENRI)
  @javax.annotation.Nullable
  private BigDecimal penri;

  public static final String SERIALIZED_NAME_PRICE_TO_FREE_CASH_FLOW = "price_to_free_cash_flow";
  @SerializedName(SERIALIZED_NAME_PRICE_TO_FREE_CASH_FLOW)
  @javax.annotation.Nullable
  private BigDecimal priceToFreeCashFlow;

  public static final String SERIALIZED_NAME_PRICE_TO_OPERATING_CASH_FLOW = "price_to_operating_cash_flow";
  @SerializedName(SERIALIZED_NAME_PRICE_TO_OPERATING_CASH_FLOW)
  @javax.annotation.Nullable
  private BigDecimal priceToOperatingCashFlow;

  public static final String SERIALIZED_NAME_PRICE_TO_OWNER_EARNINGS = "price_to_owner_earnings";
  @SerializedName(SERIALIZED_NAME_PRICE_TO_OWNER_EARNINGS)
  @javax.annotation.Nullable
  private BigDecimal priceToOwnerEarnings;

  public static final String SERIALIZED_NAME_PRICE_TO_TANGIBLE_BOOK = "price_to_tangible_book";
  @SerializedName(SERIALIZED_NAME_PRICE_TO_TANGIBLE_BOOK)
  @javax.annotation.Nullable
  private BigDecimal priceToTangibleBook;

  public static final String SERIALIZED_NAME_PS_RATIO = "ps_ratio";
  @SerializedName(SERIALIZED_NAME_PS_RATIO)
  @javax.annotation.Nullable
  private BigDecimal psRatio;

  public static final String SERIALIZED_NAME_RATE_OF_RETURN_VALUE = "rate_of_return_value";
  @SerializedName(SERIALIZED_NAME_RATE_OF_RETURN_VALUE)
  @javax.annotation.Nullable
  private BigDecimal rateOfReturnValue;

  public static final String SERIALIZED_NAME_SHILLER_PE_RATIO = "shiller_pe_ratio";
  @SerializedName(SERIALIZED_NAME_SHILLER_PE_RATIO)
  @javax.annotation.Nullable
  private BigDecimal shillerPeRatio;

  public static final String SERIALIZED_NAME_YIELD = "yield";
  @SerializedName(SERIALIZED_NAME_YIELD)
  @javax.annotation.Nullable
  private BigDecimal yield;

  public ValuationsINOREITNODIRECTValuationRatios() {
  }

  public ValuationsINOREITNODIRECTValuationRatios cyclicallyAdjustedPbRatio(@javax.annotation.Nullable BigDecimal cyclicallyAdjustedPbRatio) {
    this.cyclicallyAdjustedPbRatio = cyclicallyAdjustedPbRatio;
    return this;
  }

  /**
   * The Cyclically Adjusted PB Ratio, also known as the CAPB Ratio, is the stock price divided by the average of the inflation adjusted book value per share of a company over the past 10 years.
   * @return cyclicallyAdjustedPbRatio
   */
  @javax.annotation.Nullable
  public BigDecimal getCyclicallyAdjustedPbRatio() {
    return cyclicallyAdjustedPbRatio;
  }

  public void setCyclicallyAdjustedPbRatio(@javax.annotation.Nullable BigDecimal cyclicallyAdjustedPbRatio) {
    this.cyclicallyAdjustedPbRatio = cyclicallyAdjustedPbRatio;
  }


  public ValuationsINOREITNODIRECTValuationRatios cyclicallyAdjustedPriceToFcf(@javax.annotation.Nullable BigDecimal cyclicallyAdjustedPriceToFcf) {
    this.cyclicallyAdjustedPriceToFcf = cyclicallyAdjustedPriceToFcf;
    return this;
  }

  /**
   * Get cyclicallyAdjustedPriceToFcf
   * @return cyclicallyAdjustedPriceToFcf
   */
  @javax.annotation.Nullable
  public BigDecimal getCyclicallyAdjustedPriceToFcf() {
    return cyclicallyAdjustedPriceToFcf;
  }

  public void setCyclicallyAdjustedPriceToFcf(@javax.annotation.Nullable BigDecimal cyclicallyAdjustedPriceToFcf) {
    this.cyclicallyAdjustedPriceToFcf = cyclicallyAdjustedPriceToFcf;
  }


  public ValuationsINOREITNODIRECTValuationRatios cyclicallyAdjustedPsRatio(@javax.annotation.Nullable BigDecimal cyclicallyAdjustedPsRatio) {
    this.cyclicallyAdjustedPsRatio = cyclicallyAdjustedPsRatio;
    return this;
  }

  /**
   * The Cyclically Adjusted PS Ratio, also referred to as the CAPS Ratio, is the stock price divided by the average of the inflation adjusted revenue per share of a company over the past 10 years.
   * @return cyclicallyAdjustedPsRatio
   */
  @javax.annotation.Nullable
  public BigDecimal getCyclicallyAdjustedPsRatio() {
    return cyclicallyAdjustedPsRatio;
  }

  public void setCyclicallyAdjustedPsRatio(@javax.annotation.Nullable BigDecimal cyclicallyAdjustedPsRatio) {
    this.cyclicallyAdjustedPsRatio = cyclicallyAdjustedPsRatio;
  }


  public ValuationsINOREITNODIRECTValuationRatios earningYieldGreenblatt(@javax.annotation.Nullable BigDecimal earningYieldGreenblatt) {
    this.earningYieldGreenblatt = earningYieldGreenblatt;
    return this;
  }

  /**
   * The standard definition of earnings yield is the earnings per share divided by the price of a share. It&#39;s the inverse of P/E and shows the amount of money earned compared to the price you pay for a share.
   * @return earningYieldGreenblatt
   */
  @javax.annotation.Nullable
  public BigDecimal getEarningYieldGreenblatt() {
    return earningYieldGreenblatt;
  }

  public void setEarningYieldGreenblatt(@javax.annotation.Nullable BigDecimal earningYieldGreenblatt) {
    this.earningYieldGreenblatt = earningYieldGreenblatt;
  }


  public ValuationsINOREITNODIRECTValuationRatios enterpriseValueToEbit(@javax.annotation.Nullable BigDecimal enterpriseValueToEbit) {
    this.enterpriseValueToEbit = enterpriseValueToEbit;
    return this;
  }

  /**
   * EV-to-EBIT is calculated as Enterprise Value divided by its EBIT.
   * @return enterpriseValueToEbit
   */
  @javax.annotation.Nullable
  public BigDecimal getEnterpriseValueToEbit() {
    return enterpriseValueToEbit;
  }

  public void setEnterpriseValueToEbit(@javax.annotation.Nullable BigDecimal enterpriseValueToEbit) {
    this.enterpriseValueToEbit = enterpriseValueToEbit;
  }


  public ValuationsINOREITNODIRECTValuationRatios enterpriseValueToEbitda(@javax.annotation.Nullable BigDecimal enterpriseValueToEbitda) {
    this.enterpriseValueToEbitda = enterpriseValueToEbitda;
    return this;
  }

  /**
   * EV-to-EBITDA is calculated as enterprise value divided by its EBITDA.
   * @return enterpriseValueToEbitda
   */
  @javax.annotation.Nullable
  public BigDecimal getEnterpriseValueToEbitda() {
    return enterpriseValueToEbitda;
  }

  public void setEnterpriseValueToEbitda(@javax.annotation.Nullable BigDecimal enterpriseValueToEbitda) {
    this.enterpriseValueToEbitda = enterpriseValueToEbitda;
  }


  public ValuationsINOREITNODIRECTValuationRatios enterpriseValueToFcf(@javax.annotation.Nullable BigDecimal enterpriseValueToFcf) {
    this.enterpriseValueToFcf = enterpriseValueToFcf;
    return this;
  }

  /**
   * Get enterpriseValueToFcf
   * @return enterpriseValueToFcf
   */
  @javax.annotation.Nullable
  public BigDecimal getEnterpriseValueToFcf() {
    return enterpriseValueToFcf;
  }

  public void setEnterpriseValueToFcf(@javax.annotation.Nullable BigDecimal enterpriseValueToFcf) {
    this.enterpriseValueToFcf = enterpriseValueToFcf;
  }


  public ValuationsINOREITNODIRECTValuationRatios enterpriseValueToRevenue(@javax.annotation.Nullable BigDecimal enterpriseValueToRevenue) {
    this.enterpriseValueToRevenue = enterpriseValueToRevenue;
    return this;
  }

  /**
   * EV-to-Revenue is calculated as enterprise value divided by its revenue.
   * @return enterpriseValueToRevenue
   */
  @javax.annotation.Nullable
  public BigDecimal getEnterpriseValueToRevenue() {
    return enterpriseValueToRevenue;
  }

  public void setEnterpriseValueToRevenue(@javax.annotation.Nullable BigDecimal enterpriseValueToRevenue) {
    this.enterpriseValueToRevenue = enterpriseValueToRevenue;
  }


  public ValuationsINOREITNODIRECTValuationRatios fcfYield(@javax.annotation.Nullable BigDecimal fcfYield) {
    this.fcfYield = fcfYield;
    return this;
  }

  /**
   * Free cash flow yield: the free cash flow divided by share price
   * @return fcfYield
   */
  @javax.annotation.Nullable
  public BigDecimal getFcfYield() {
    return fcfYield;
  }

  public void setFcfYield(@javax.annotation.Nullable BigDecimal fcfYield) {
    this.fcfYield = fcfYield;
  }


  public ValuationsINOREITNODIRECTValuationRatios pbRatio(@javax.annotation.Nullable BigDecimal pbRatio) {
    this.pbRatio = pbRatio;
    return this;
  }

  /**
   * Companies use the price-to-book ratio to compare a firm&#39;s market to book value by dividing price per share by book value per share. Some people know it as the price-equity ratio.
   * @return pbRatio
   */
  @javax.annotation.Nullable
  public BigDecimal getPbRatio() {
    return pbRatio;
  }

  public void setPbRatio(@javax.annotation.Nullable BigDecimal pbRatio) {
    this.pbRatio = pbRatio;
  }


  public ValuationsINOREITNODIRECTValuationRatios peRatio(@javax.annotation.Nullable BigDecimal peRatio) {
    this.peRatio = peRatio;
    return this;
  }

  /**
   * &lt;p&gt;The PE ratio, or Price-to-Earnings ratio, is the most widely used metric in the valuation of stocks. It is calculated as:  &lt;b&gt;PE Ratio &#x3D; Share Price / {{eps_diluated}}&lt;/b&gt;.   It can also be calculated from the numbers for the whole company:  &lt;b&gt;PE Ratio &#x3D; {{mktcap}} / {{net_income}}&lt;/b&gt;.&lt;/p&gt;  &lt;p&gt;There are at least three kinds of PE ratios used among different investors. They are Trailing Twelve Month PE Ratio({{pettm}}), {{forwardPE}}, and {{penri}}. A new PE ratio based on inflation-adjusted normalized PE ratio is called {{ShillerPE}}, after Yale professor Robert Shiller.&lt;/p&gt;  &lt;p&gt;In the calculation of {{pettm}}, the earnings per share used are the earnings per share over the past 12 months({{ttm_eps}}). For {{forwardPE}}, the earnings are the expected earnings for the next twelve months({{forward_eps}}). In the case of {{penri}}, the reported earnings less the non-recurring items are used({{eps_nri}}).For the {{ShillerPE}}, the earnings of the past 10 years are inflation-adjusted and averaged. Since {{ShillerPE}} looks at the average over the last 10 years, it is also called PE10.&lt;/p&gt;
   * @return peRatio
   */
  @javax.annotation.Nullable
  public BigDecimal getPeRatio() {
    return peRatio;
  }

  public void setPeRatio(@javax.annotation.Nullable BigDecimal peRatio) {
    this.peRatio = peRatio;
  }


  public ValuationsINOREITNODIRECTValuationRatios pegRatio(@javax.annotation.Nullable BigDecimal pegRatio) {
    this.pegRatio = pegRatio;
    return this;
  }

  /**
   * PEG is defined as the PE Ratio without NRI divided by the growth ratio. The growth rate we use is the 5-year average EBITDA growth rate.
   * @return pegRatio
   */
  @javax.annotation.Nullable
  public BigDecimal getPegRatio() {
    return pegRatio;
  }

  public void setPegRatio(@javax.annotation.Nullable BigDecimal pegRatio) {
    this.pegRatio = pegRatio;
  }


  public ValuationsINOREITNODIRECTValuationRatios penri(@javax.annotation.Nullable BigDecimal penri) {
    this.penri = penri;
    return this;
  }

  /**
   * Get penri
   * @return penri
   */
  @javax.annotation.Nullable
  public BigDecimal getPenri() {
    return penri;
  }

  public void setPenri(@javax.annotation.Nullable BigDecimal penri) {
    this.penri = penri;
  }


  public ValuationsINOREITNODIRECTValuationRatios priceToFreeCashFlow(@javax.annotation.Nullable BigDecimal priceToFreeCashFlow) {
    this.priceToFreeCashFlow = priceToFreeCashFlow;
    return this;
  }

  /**
   * Price to free cash flow is an equity valuation metric used to compare a company&#39;s per-share market price to its per-share amount of free cash flow (FCF).
   * @return priceToFreeCashFlow
   */
  @javax.annotation.Nullable
  public BigDecimal getPriceToFreeCashFlow() {
    return priceToFreeCashFlow;
  }

  public void setPriceToFreeCashFlow(@javax.annotation.Nullable BigDecimal priceToFreeCashFlow) {
    this.priceToFreeCashFlow = priceToFreeCashFlow;
  }


  public ValuationsINOREITNODIRECTValuationRatios priceToOperatingCashFlow(@javax.annotation.Nullable BigDecimal priceToOperatingCashFlow) {
    this.priceToOperatingCashFlow = priceToOperatingCashFlow;
    return this;
  }

  /**
   * The price/cash flow ratio (also called price-to-cash flow ratio or P/CF), is a ratio used to compare a company&#39;s market value to its cash flow.
   * @return priceToOperatingCashFlow
   */
  @javax.annotation.Nullable
  public BigDecimal getPriceToOperatingCashFlow() {
    return priceToOperatingCashFlow;
  }

  public void setPriceToOperatingCashFlow(@javax.annotation.Nullable BigDecimal priceToOperatingCashFlow) {
    this.priceToOperatingCashFlow = priceToOperatingCashFlow;
  }


  public ValuationsINOREITNODIRECTValuationRatios priceToOwnerEarnings(@javax.annotation.Nullable BigDecimal priceToOwnerEarnings) {
    this.priceToOwnerEarnings = priceToOwnerEarnings;
    return this;
  }

  /**
   * In 1986 Berkshire Hathaway Shareholder Letter, Warren Buffett defined owner earnings as follows:  \&quot;These represent (a) reported earnings plus (b) depreciation, depletion, amortization, and certain other non-cash charges...less (c) the average annual amount of capitalized expenditures for plant and equipment, etc. that the business requires to fully maintain its long-term competitive position and its unit volume. (If the business requires additional working capital to maintain its competitive position and unit volume, the increment also should be included in (c))...Our owner-earnings equation does not yield the deceptively precise figures provided by GAAP, since (c) must be a guess - and one sometimes very difficult to make. Despite this problem, we consider the owner earnings figure, not the GAAP figure, to be the relevant item for valuation purposes - both for investors in buying stocks and for managers in buying entire businesses...All of this points up the absurdity of the &#39;cash flow&#39; numbers that are often set forth in Wall Street reports. These numbers routinely include (a) plus (b) - but do not subtract (c).\&quot;
   * @return priceToOwnerEarnings
   */
  @javax.annotation.Nullable
  public BigDecimal getPriceToOwnerEarnings() {
    return priceToOwnerEarnings;
  }

  public void setPriceToOwnerEarnings(@javax.annotation.Nullable BigDecimal priceToOwnerEarnings) {
    this.priceToOwnerEarnings = priceToOwnerEarnings;
  }


  public ValuationsINOREITNODIRECTValuationRatios priceToTangibleBook(@javax.annotation.Nullable BigDecimal priceToTangibleBook) {
    this.priceToTangibleBook = priceToTangibleBook;
    return this;
  }

  /**
   * The Price to Tangible Book Value ratio (PTBV) expresses share price as a proportion of the company&#39;s tangible book value reported on the company&#39;s balance sheet.
   * @return priceToTangibleBook
   */
  @javax.annotation.Nullable
  public BigDecimal getPriceToTangibleBook() {
    return priceToTangibleBook;
  }

  public void setPriceToTangibleBook(@javax.annotation.Nullable BigDecimal priceToTangibleBook) {
    this.priceToTangibleBook = priceToTangibleBook;
  }


  public ValuationsINOREITNODIRECTValuationRatios psRatio(@javax.annotation.Nullable BigDecimal psRatio) {
    this.psRatio = psRatio;
    return this;
  }

  /**
   * Price–sales ratio, P/S ratio, or PSR, is a valuation metric for stocks.
   * @return psRatio
   */
  @javax.annotation.Nullable
  public BigDecimal getPsRatio() {
    return psRatio;
  }

  public void setPsRatio(@javax.annotation.Nullable BigDecimal psRatio) {
    this.psRatio = psRatio;
  }


  public ValuationsINOREITNODIRECTValuationRatios rateOfReturnValue(@javax.annotation.Nullable BigDecimal rateOfReturnValue) {
    this.rateOfReturnValue = rateOfReturnValue;
    return this;
  }

  /**
   * Yacktman defines forward rate of return as the normalized free cash flow yield plus real growth plus inflation.
   * @return rateOfReturnValue
   */
  @javax.annotation.Nullable
  public BigDecimal getRateOfReturnValue() {
    return rateOfReturnValue;
  }

  public void setRateOfReturnValue(@javax.annotation.Nullable BigDecimal rateOfReturnValue) {
    this.rateOfReturnValue = rateOfReturnValue;
  }


  public ValuationsINOREITNODIRECTValuationRatios shillerPeRatio(@javax.annotation.Nullable BigDecimal shillerPeRatio) {
    this.shillerPeRatio = shillerPeRatio;
    return this;
  }

  /**
   * Price earnings ratio is based on average inflation-adjusted earnings from the previous 10 years, known as the Cyclically Adjusted PE Ratio (CAPE Ratio), Shiller PE Ratio, or PE 10
   * @return shillerPeRatio
   */
  @javax.annotation.Nullable
  public BigDecimal getShillerPeRatio() {
    return shillerPeRatio;
  }

  public void setShillerPeRatio(@javax.annotation.Nullable BigDecimal shillerPeRatio) {
    this.shillerPeRatio = shillerPeRatio;
  }


  public ValuationsINOREITNODIRECTValuationRatios yield(@javax.annotation.Nullable BigDecimal yield) {
    this.yield = yield;
    return this;
  }

  /**
   * The dividend yield is the ratio of a company&#39;s annual dividend compared to its share price.
   * @return yield
   */
  @javax.annotation.Nullable
  public BigDecimal getYield() {
    return yield;
  }

  public void setYield(@javax.annotation.Nullable BigDecimal yield) {
    this.yield = yield;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValuationsINOREITNODIRECTValuationRatios valuationsINOREITNODIRECTValuationRatios = (ValuationsINOREITNODIRECTValuationRatios) o;
    return Objects.equals(this.cyclicallyAdjustedPbRatio, valuationsINOREITNODIRECTValuationRatios.cyclicallyAdjustedPbRatio) &&
        Objects.equals(this.cyclicallyAdjustedPriceToFcf, valuationsINOREITNODIRECTValuationRatios.cyclicallyAdjustedPriceToFcf) &&
        Objects.equals(this.cyclicallyAdjustedPsRatio, valuationsINOREITNODIRECTValuationRatios.cyclicallyAdjustedPsRatio) &&
        Objects.equals(this.earningYieldGreenblatt, valuationsINOREITNODIRECTValuationRatios.earningYieldGreenblatt) &&
        Objects.equals(this.enterpriseValueToEbit, valuationsINOREITNODIRECTValuationRatios.enterpriseValueToEbit) &&
        Objects.equals(this.enterpriseValueToEbitda, valuationsINOREITNODIRECTValuationRatios.enterpriseValueToEbitda) &&
        Objects.equals(this.enterpriseValueToFcf, valuationsINOREITNODIRECTValuationRatios.enterpriseValueToFcf) &&
        Objects.equals(this.enterpriseValueToRevenue, valuationsINOREITNODIRECTValuationRatios.enterpriseValueToRevenue) &&
        Objects.equals(this.fcfYield, valuationsINOREITNODIRECTValuationRatios.fcfYield) &&
        Objects.equals(this.pbRatio, valuationsINOREITNODIRECTValuationRatios.pbRatio) &&
        Objects.equals(this.peRatio, valuationsINOREITNODIRECTValuationRatios.peRatio) &&
        Objects.equals(this.pegRatio, valuationsINOREITNODIRECTValuationRatios.pegRatio) &&
        Objects.equals(this.penri, valuationsINOREITNODIRECTValuationRatios.penri) &&
        Objects.equals(this.priceToFreeCashFlow, valuationsINOREITNODIRECTValuationRatios.priceToFreeCashFlow) &&
        Objects.equals(this.priceToOperatingCashFlow, valuationsINOREITNODIRECTValuationRatios.priceToOperatingCashFlow) &&
        Objects.equals(this.priceToOwnerEarnings, valuationsINOREITNODIRECTValuationRatios.priceToOwnerEarnings) &&
        Objects.equals(this.priceToTangibleBook, valuationsINOREITNODIRECTValuationRatios.priceToTangibleBook) &&
        Objects.equals(this.psRatio, valuationsINOREITNODIRECTValuationRatios.psRatio) &&
        Objects.equals(this.rateOfReturnValue, valuationsINOREITNODIRECTValuationRatios.rateOfReturnValue) &&
        Objects.equals(this.shillerPeRatio, valuationsINOREITNODIRECTValuationRatios.shillerPeRatio) &&
        Objects.equals(this.yield, valuationsINOREITNODIRECTValuationRatios.yield);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cyclicallyAdjustedPbRatio, cyclicallyAdjustedPriceToFcf, cyclicallyAdjustedPsRatio, earningYieldGreenblatt, enterpriseValueToEbit, enterpriseValueToEbitda, enterpriseValueToFcf, enterpriseValueToRevenue, fcfYield, pbRatio, peRatio, pegRatio, penri, priceToFreeCashFlow, priceToOperatingCashFlow, priceToOwnerEarnings, priceToTangibleBook, psRatio, rateOfReturnValue, shillerPeRatio, yield);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValuationsINOREITNODIRECTValuationRatios {\n");
    sb.append("    cyclicallyAdjustedPbRatio: ").append(toIndentedString(cyclicallyAdjustedPbRatio)).append("\n");
    sb.append("    cyclicallyAdjustedPriceToFcf: ").append(toIndentedString(cyclicallyAdjustedPriceToFcf)).append("\n");
    sb.append("    cyclicallyAdjustedPsRatio: ").append(toIndentedString(cyclicallyAdjustedPsRatio)).append("\n");
    sb.append("    earningYieldGreenblatt: ").append(toIndentedString(earningYieldGreenblatt)).append("\n");
    sb.append("    enterpriseValueToEbit: ").append(toIndentedString(enterpriseValueToEbit)).append("\n");
    sb.append("    enterpriseValueToEbitda: ").append(toIndentedString(enterpriseValueToEbitda)).append("\n");
    sb.append("    enterpriseValueToFcf: ").append(toIndentedString(enterpriseValueToFcf)).append("\n");
    sb.append("    enterpriseValueToRevenue: ").append(toIndentedString(enterpriseValueToRevenue)).append("\n");
    sb.append("    fcfYield: ").append(toIndentedString(fcfYield)).append("\n");
    sb.append("    pbRatio: ").append(toIndentedString(pbRatio)).append("\n");
    sb.append("    peRatio: ").append(toIndentedString(peRatio)).append("\n");
    sb.append("    pegRatio: ").append(toIndentedString(pegRatio)).append("\n");
    sb.append("    penri: ").append(toIndentedString(penri)).append("\n");
    sb.append("    priceToFreeCashFlow: ").append(toIndentedString(priceToFreeCashFlow)).append("\n");
    sb.append("    priceToOperatingCashFlow: ").append(toIndentedString(priceToOperatingCashFlow)).append("\n");
    sb.append("    priceToOwnerEarnings: ").append(toIndentedString(priceToOwnerEarnings)).append("\n");
    sb.append("    priceToTangibleBook: ").append(toIndentedString(priceToTangibleBook)).append("\n");
    sb.append("    psRatio: ").append(toIndentedString(psRatio)).append("\n");
    sb.append("    rateOfReturnValue: ").append(toIndentedString(rateOfReturnValue)).append("\n");
    sb.append("    shillerPeRatio: ").append(toIndentedString(shillerPeRatio)).append("\n");
    sb.append("    yield: ").append(toIndentedString(yield)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cyclically_adjusted_pb_ratio");
    openapiFields.add("cyclically_adjusted_price_to_fcf");
    openapiFields.add("cyclically_adjusted_ps_ratio");
    openapiFields.add("earning_yield_greenblatt");
    openapiFields.add("enterprise_value_to_ebit");
    openapiFields.add("enterprise_value_to_ebitda");
    openapiFields.add("enterprise_value_to_fcf");
    openapiFields.add("enterprise_value_to_revenue");
    openapiFields.add("fcf_yield");
    openapiFields.add("pb_ratio");
    openapiFields.add("pe_ratio");
    openapiFields.add("peg_ratio");
    openapiFields.add("penri");
    openapiFields.add("price_to_free_cash_flow");
    openapiFields.add("price_to_operating_cash_flow");
    openapiFields.add("price_to_owner_earnings");
    openapiFields.add("price_to_tangible_book");
    openapiFields.add("ps_ratio");
    openapiFields.add("rate_of_return_value");
    openapiFields.add("shiller_pe_ratio");
    openapiFields.add("yield");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ValuationsINOREITNODIRECTValuationRatios
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ValuationsINOREITNODIRECTValuationRatios.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ValuationsINOREITNODIRECTValuationRatios is not found in the empty JSON string", ValuationsINOREITNODIRECTValuationRatios.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ValuationsINOREITNODIRECTValuationRatios.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ValuationsINOREITNODIRECTValuationRatios` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ValuationsINOREITNODIRECTValuationRatios.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ValuationsINOREITNODIRECTValuationRatios' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ValuationsINOREITNODIRECTValuationRatios> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ValuationsINOREITNODIRECTValuationRatios.class));

       return (TypeAdapter<T>) new TypeAdapter<ValuationsINOREITNODIRECTValuationRatios>() {
           @Override
           public void write(JsonWriter out, ValuationsINOREITNODIRECTValuationRatios value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ValuationsINOREITNODIRECTValuationRatios read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ValuationsINOREITNODIRECTValuationRatios given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ValuationsINOREITNODIRECTValuationRatios
   * @throws IOException if the JSON string is invalid with respect to ValuationsINOREITNODIRECTValuationRatios
   */
  public static ValuationsINOREITNODIRECTValuationRatios fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ValuationsINOREITNODIRECTValuationRatios.class);
  }

  /**
   * Convert an instance of ValuationsINOREITNODIRECTValuationRatios to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

