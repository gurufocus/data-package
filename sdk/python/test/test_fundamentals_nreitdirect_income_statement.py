# coding: utf-8

"""
    Gurufocus Data Package API

    API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.fundamentals_nreitdirect_income_statement import FundamentalsNREITDIRECTIncomeStatement

class TestFundamentalsNREITDIRECTIncomeStatement(unittest.TestCase):
    """FundamentalsNREITDIRECTIncomeStatement unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FundamentalsNREITDIRECTIncomeStatement:
        """Test FundamentalsNREITDIRECTIncomeStatement
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FundamentalsNREITDIRECTIncomeStatement`
        """
        model = FundamentalsNREITDIRECTIncomeStatement()
        if include_optional:
            return FundamentalsNREITDIRECTIncomeStatement(
                cost_of_goods_sold = 1.337,
                depreciation_depletion_amortization = 1.337,
                ebit = 1.337,
                ebitda = 1.337,
                ebitda_margin = 1.337,
                eps_basic = 1.337,
                eps_diluated = 1.337,
                gross_margin = 1.337,
                gross_profit = 1.337,
                interest_expense = 1.337,
                interest_income = 1.337,
                is_preferred_dividends = 1.337,
                net_income = 1.337,
                net_income_continuing_operations = 1.337,
                net_income_discontinued_operations = 1.337,
                net_income_including_noncontrolling_interests = 1.337,
                net_interest_income = 1.337,
                net_margin = 1.337,
                operating_income = 1.337,
                operating_margin = 1.337,
                other_income_expense = 1.337,
                other_income_minority_interest = 1.337,
                other_net_income_loss = 1.337,
                other_operating_charges = 1.337,
                pretax_income = 1.337,
                research_development = 1.337,
                revenue = 1.337,
                selling_general_admin_expense = 1.337,
                shares_outstanding = 1.337,
                tax_provision = 1.337,
                tax_rate = 1.337,
                total_operating_expense = 1.337
            )
        else:
            return FundamentalsNREITDIRECTIncomeStatement(
        )
        """

    def testFundamentalsNREITDIRECTIncomeStatement(self):
        """Test FundamentalsNREITDIRECTIncomeStatement"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
