# coding: utf-8

"""
    Gurufocus Data Package API

    API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.etf_etf_portfolio_holdings import EtfEtfPortfolioHoldings

class TestEtfEtfPortfolioHoldings(unittest.TestCase):
    """EtfEtfPortfolioHoldings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EtfEtfPortfolioHoldings:
        """Test EtfEtfPortfolioHoldings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EtfEtfPortfolioHoldings`
        """
        model = EtfEtfPortfolioHoldings()
        if include_optional:
            return EtfEtfPortfolioHoldings(
                holdings = [
                    openapi_client.models.guru_transaction.guru_transaction(
                        action = '', 
                        change = 1.337, 
                        class = '', 
                        comment = '', 
                        company_name = '', 
                        exchange = '', 
                        impact = 1.337, 
                        industry_code = 1.337, 
                        portdate = '', 
                        position = 1.337, 
                        price_avg = 1.337, 
                        price_max = 1.337, 
                        price_min = 1.337, 
                        share_change = 1.337, 
                        shares = 1.337, 
                        shares_outstanding = 1.337, 
                        split_factor = 1.337, 
                        stockid = '', 
                        symbol = '', 
                        value = 1.337, )
                    ],
                portdate = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date()
            )
        else:
            return EtfEtfPortfolioHoldings(
        )
        """

    def testEtfEtfPortfolioHoldings(self):
        """Test EtfEtfPortfolioHoldings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
