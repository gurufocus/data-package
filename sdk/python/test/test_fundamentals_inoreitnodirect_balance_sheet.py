# coding: utf-8

"""
    Gurufocus Data Package API

    API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.fundamentals_inoreitnodirect_balance_sheet import FundamentalsINOREITNODIRECTBalanceSheet

class TestFundamentalsINOREITNODIRECTBalanceSheet(unittest.TestCase):
    """FundamentalsINOREITNODIRECTBalanceSheet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FundamentalsINOREITNODIRECTBalanceSheet:
        """Test FundamentalsINOREITNODIRECTBalanceSheet
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FundamentalsINOREITNODIRECTBalanceSheet`
        """
        model = FundamentalsINOREITNODIRECTBalanceSheet()
        if include_optional:
            return FundamentalsINOREITNODIRECTBalanceSheet(
                accounts_receivable = 1.337,
                accumulated_other_comprehensive_income = 1.337,
                additional_paid_in_capital = 1.337,
                bs_cash_and_cash_equivalents = 1.337,
                bs_current_deferred_liabilities = 1.337,
                bs_deferred_policy_acquisition_costs = 1.337,
                bs_equity_investments = 1.337,
                bs_fixed_maturity_investment = 1.337,
                bs_future_policy_benefits = 1.337,
                bs_net_loan = 1.337,
                bs_other_assets_insurance = 1.337,
                bs_other_liabilities_insurance = 1.337,
                bs_payables_and_accrued_expenses = 1.337,
                bs_policyholder_funds = 1.337,
                bs_trading_assets = 1.337,
                bs_unearned_premiums = 1.337,
                bs_unpaid_loss_and_loss_reserve = 1.337,
                common_stock = 1.337,
                current_deferred_revenue = 1.337,
                current_deferred_taxes_liabilities = 1.337,
                debt_to_equity = 1.337,
                equity_to_asset = 1.337,
                good_will = 1.337,
                intangibles = 1.337,
                long_term_debt_and_capital_lease_obligation = 1.337,
                minority_interest = 1.337,
                net_ppe = 1.337,
                non_current_deferred_income_tax = 1.337,
                non_current_deferred_liabilities = 1.337,
                notes_receivable = 1.337,
                other_current_receivables = 1.337,
                other_equity = 1.337,
                preferred_stock = 1.337,
                retained_earnings = 1.337,
                short_term_debt_and_capital_lease_obligation = 1.337,
                total_assets = 1.337,
                total_equity = 1.337,
                total_liabilities = 1.337,
                total_receivables = 1.337,
                total_stockholders_equity = 1.337,
                treasury_stock = 1.337
            )
        else:
            return FundamentalsINOREITNODIRECTBalanceSheet(
        )
        """

    def testFundamentalsINOREITNODIRECTBalanceSheet(self):
        """Test FundamentalsINOREITNODIRECTBalanceSheet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
