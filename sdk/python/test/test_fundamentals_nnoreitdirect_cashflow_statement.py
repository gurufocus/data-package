# coding: utf-8

"""
    Gurufocus Data Package API

    API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.fundamentals_nnoreitdirect_cashflow_statement import FundamentalsNNOREITDIRECTCashflowStatement

class TestFundamentalsNNOREITDIRECTCashflowStatement(unittest.TestCase):
    """FundamentalsNNOREITDIRECTCashflowStatement unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FundamentalsNNOREITDIRECTCashflowStatement:
        """Test FundamentalsNNOREITDIRECTCashflowStatement
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FundamentalsNNOREITDIRECTCashflowStatement`
        """
        model = FundamentalsNNOREITDIRECTCashflowStatement()
        if include_optional:
            return FundamentalsNNOREITDIRECTCashflowStatement(
                beginning_cash_position = 1.337,
                cash_flow_capital_expenditure = 1.337,
                cash_flow_for_lease_financing = 1.337,
                cash_flow_from_investing = 1.337,
                cash_flow_from_operations = 1.337,
                cash_flow_from_others = 1.337,
                cash_from_discontinued_investing_activities = 1.337,
                cash_from_financing = 1.337,
                cash_from_other_investing_activities = 1.337,
                cash_payments = 1.337,
                cash_receipts_from_operating_activities = 1.337,
                debt_issuance = 1.337,
                debt_payments = 1.337,
                dividends = 1.337,
                dividends_paid_direct = 1.337,
                dividends_received_direct = 1.337,
                effect_of_exchange_rate_changes = 1.337,
                ending_cash_position = 1.337,
                interest_paid_direct = 1.337,
                interest_received_direct = 1.337,
                issuance_of_stock = 1.337,
                net_change_in_cash = 1.337,
                net_intangibles_purchase_and_sale = 1.337,
                net_issuance_of_debt = 1.337,
                net_issuance_of_preferred = 1.337,
                other_cash_payments_from_operating_activities = 1.337,
                other_cash_receipts_from_operating_activities = 1.337,
                other_financing = 1.337,
                payments_on_behalf_of_employees = 1.337,
                payments_to_suppliers_for_goods_and_services = 1.337,
                purchase_of_business = 1.337,
                purchase_of_investment = 1.337,
                purchase_of_ppe = 1.337,
                receipts_from_customers = 1.337,
                receipts_from_government_grants = 1.337,
                repurchase_of_stock = 1.337,
                sale_of_business = 1.337,
                sale_of_investment = 1.337,
                sale_of_ppe = 1.337,
                taxes_refund_paid_direct = 1.337,
                total_free_cash_flow = 1.337
            )
        else:
            return FundamentalsNNOREITDIRECTCashflowStatement(
        )
        """

    def testFundamentalsNNOREITDIRECTCashflowStatement(self):
        """Test FundamentalsNNOREITDIRECTCashflowStatement"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
