# coding: utf-8

"""
    Gurufocus Data Package API

    API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.stock_api import STOCKApi


class TestSTOCKApi(unittest.TestCase):
    """STOCKApi unit test stubs"""

    def setUp(self) -> None:
        self.api = STOCKApi()

    def tearDown(self) -> None:
        pass

    def test_stocks_symbol_fundamentals_get(self) -> None:
        """Test case for stocks_symbol_fundamentals_get

        Complete historical financial statements providing the data needed for in-depth analysis, valuation modeling, and building investment research platforms.
        """
        pass

    def test_stocks_symbol_profile_get(self) -> None:
        """Test case for stocks_symbol_profile_get

        Access essential company details and current valuation metrics to power investment platforms, populate company directories, or enhance financial analysis tools with up-to-date market data.
        """
        pass

    def test_stocks_symbol_rankings_get(self) -> None:
        """Test case for stocks_symbol_rankings_get

        Proprietary scoring and ranking systems that assess company quality, valuation, and performance for powering data-driven investment platforms.
        """
        pass

    def test_stocks_symbol_segment_get(self) -> None:
        """Test case for stocks_symbol_segment_get

        Gain insights into a company's revenue breakdown by product and geography to build detailed financial visualizations, enhance stock research platforms, or create data-driven market analysis tools
        """
        pass

    def test_stocks_symbol_valuations_get(self) -> None:
        """Test case for stocks_symbol_valuations_get

        A deep dataset of historical valuation metrics to support investors and entrepreneurs in the development of data-driven investment platforms.
        """
        pass


if __name__ == '__main__':
    unittest.main()
