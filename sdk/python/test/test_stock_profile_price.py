# coding: utf-8

"""
    Gurufocus Data Package API

    API for accessing Gurufocus data packages, please go to [https://www.gurufocus.com/user/me?tab=account&subtab=api-token](https://www.gurufocus.com/user/me?tab=account&subtab=api-token) to view or generate authorization keys.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.stock_profile_price import StockProfilePrice

class TestStockProfilePrice(unittest.TestCase):
    """StockProfilePrice unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StockProfilePrice:
        """Test StockProfilePrice
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StockProfilePrice`
        """
        model = StockProfilePrice()
        if include_optional:
            return StockProfilePrice(
                beta = 1.337,
                death_cross_ema_20_vs_200 = '',
                death_cross_ema_20_vs_50 = '',
                death_cross_ema_50_vs_200 = '',
                death_cross_sma_20_vs_200 = '',
                death_cross_sma_20_vs_50 = '',
                death_cross_sma_50_vs_200 = '',
                display_timestamp = '',
                ema_20 = 1.337,
                ema_200 = 1.337,
                ema_50 = 1.337,
                var_float = 1.337,
                golden_cross_ema_20_vs_200 = '',
                golden_cross_ema_20_vs_50 = '',
                golden_cross_ema_50_vs_200 = '',
                golden_cross_sma_20_vs_200 = '',
                golden_cross_sma_20_vs_50 = '',
                golden_cross_sma_50_vs_200 = '',
                high = 1.337,
                low = 1.337,
                macd_death_cross_signal = '',
                macd_golden_cross_signal = '',
                macd_line = 1.337,
                macd_signal_line = 1.337,
                open = 1.337,
                p_pct_change = 1.337,
                pchange_sp_10y = 1.337,
                pchange_sp_12w = 1.337,
                pchange_sp_15y = 1.337,
                pchange_sp_1w = 1.337,
                pchange_sp_20y = 1.337,
                pchange_sp_24w = 1.337,
                pchange_sp_3y = 1.337,
                pchange_sp_4w = 1.337,
                pchange_sp_52w = 1.337,
                pchange_sp_5y = 1.337,
                pchange_sp_ytd = 1.337,
                pchange_10y = 1.337,
                pchange_12_1m = 1.337,
                pchange_12w = 1.337,
                pchange_15y = 1.337,
                pchange_1w = 1.337,
                pchange_20y = 1.337,
                pchange_24w = 1.337,
                pchange_3_1m = 1.337,
                pchange_3y = 1.337,
                pchange_4w = 1.337,
                pchange_52w = 1.337,
                pchange_5y = 1.337,
                pchange_6_1m = 1.337,
                pchange_ytd = 1.337,
                price = 1.337,
                price10yhigh = 1.337,
                price10ylow = 1.337,
                price3yhigh = 1.337,
                price3ylow = 1.337,
                price52whigh = 1.337,
                price52wlow = 1.337,
                price5yhigh = 1.337,
                price5ylow = 1.337,
                price_stdv_20 = 1.337,
                price_stdv_200 = 1.337,
                price_stdv_50 = 1.337,
                pricehishigh = 1.337,
                pricehislow = 1.337,
                priceindex_6m = 1.337,
                rsi_14 = 1.337,
                rsi_30 = 1.337,
                rsi_5 = 1.337,
                rsi_9 = 1.337,
                sharpe_ratio = 1.337,
                sharpe_ratio_10y = 1.337,
                sharpe_ratio_3y = 1.337,
                sharpe_ratio_5y = 1.337,
                sma_20 = 1.337,
                sma_200 = 1.337,
                sma_50 = 1.337,
                sortino_ratio_10y = 1.337,
                sortino_ratio_1y = 1.337,
                sortino_ratio_3y = 1.337,
                sortino_ratio_5y = 1.337,
                volatility = 1.337,
                volatility_10y = 1.337,
                volatility_1m = 1.337,
                volatility_1w = 1.337,
                volatility_3y = 1.337,
                volatility_5y = 1.337,
                volume = 1.337,
                volume_3m = 1.337,
                volume_total = 1.337,
                volume_total_3m = 1.337,
                volumn_day = 1.337,
                volumn_day_total = 1.337
            )
        else:
            return StockProfilePrice(
        )
        """

    def testStockProfilePrice(self):
        """Test StockProfilePrice"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
